{"config":{"lang":["zh","en","ja"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"Hi there, welcome to my website!","text":""},{"location":"#about-this-website","title":"About this website.","text":"<p> \"\u76f8\u4fe1\u52aa\u529b\u7684\u5c3d\u5934\u662f\u5947\u8ff9\"</p> <p>\u00a0 \u8fd9\u91cc\u662f\u5e38\u9e23\u5764\u7684\u4e2a\u4eba\u7f51\u7ad9 https://nijikadesu.github.io</p> <p>\u00a0 \u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e2d\uff0c\u6211\u4f1a\u5206\u4eab\u6211\u7684\u5b66\u4e60\u3001\u5de5\u4f5c\u4e0e\u751f\u6d3b\uff0c\u4e5f\u4f1a\u8bb0\u5f55\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f</p> <p>\u00a0 \u5e0c\u671b\u6211\u4eec\u90fd\u80fd\u5728\u63a2\u7d22\u4e2d\u9047\u5230\u66f4\u597d\u7684\u81ea\u5df1^^</p> <p>\u98df\u7528\u8bf4\u660e\uff1a</p> <p>\u6211\u5e73\u65f6\u6240\u6709\u7684\u6587\u7ae0\u4f1a\u4f18\u5148\u66f4\u65b0\u5728\u535a\u5ba2\u4e2d\uff0c\u4f1a\u4e0d\u5b9a\u671f\u5c06\u535a\u5ba2\u4e2d\u4e00\u4e9b\u4f53\u7cfb\u5316\u77e5\u8bc6\u5f52\u6863\u5728\u4e3b\u9875\u5176\u4ed6\u5206\u680f</p>"},{"location":"#about-me","title":"About me.","text":"<p>\u6211\u662f\u897f\u5b89\u7535\u5b50\u79d1\u6280\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u4e13\u4e1a\u7684\u4e00\u540d\u5927\u4e8c\u5b66\u751f</p> <p>\u6211\u7684\u7231\u597d\u6709\u770b\u52a8\u6f2b\uff0c\u73a9FPS\u6e38\u620f</p> <p>\u6211\u5bf9\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u5f88\u611f\u5174\u8da3</p> <p>\u4e86\u89e3\u66f4\u591a</p>"},{"location":"DL/","title":"Deep Learning","text":"<p>\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6211\u4f1a\u4e0a\u4f20\u6211\u5728\u5b66\u4e60\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\u5185\u5bb9\u65f6\u505a\u7684\u4e00\u4e9b\u8bb0\u5f55</p>"},{"location":"DL/PyTorch/","title":"PyTorch","text":"<p>PyTorch\u5b66\u4e60\u8bb0\u5f55\u3002</p>"},{"location":"DL/PyTorch/PyTorch1/","title":"\u6df1\u5ea6\u5b66\u4e60\u5de5\u4f5c\u6d41\u7a0b\uff08\u57fa\u4e8ePyTorch\uff09","text":"<p>\u4e00\u4e2a\u5b8c\u6574\u7684\u6df1\u5ea6\u5b66\u4e60\u5de5\u4f5c\u6d41\u7a0b\u6d89\u53ca\u5904\u7406\u6570\u636e\u3001\u521b\u5efa\u6a21\u578b\u3001\u4f18\u5316\u53c2\u6570\u548c\u4fdd\u5b58\u6a21\u578b\u7b49\u6b65\u9aa4\u3002</p> <p>\u8fd9\u7bc7blog\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5728FashionMNIST\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u7684\u4e00\u4e2a\u56fe\u7247\u5206\u7c7b\u7f51\u7edc\u5b9e\u4f8b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f83\u4e3a\u89c4\u8303\u7684\u5de5\u4f5c\u6d41\u7a0b\u6a21\u677f\u3002</p>"},{"location":"DL/PyTorch/PyTorch1/#_1","title":"\u5904\u7406\u6570\u636e","text":"<p>PyTorch\u6709\u4e24\u4e2a\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\uff1aTorch.utils.data.DataLoader\u548cTorch.utils.data.Dataset\u3002Dataset\u5b58\u50a8\u4e86\u6837\u672c\u53ca\u5176\u76f8\u5e94\u7684\u6807\u7b7e\uff0c\u800cDataLoader\u5219\u56f4\u7ed5Dataset\u5305\u88c5\u4e86\u4e00\u4e2a\u53ef\u8fed\u4ee3\u6570\u636e\u5bb9\u5668\u3002 Python<pre><code>import torch\nfrom torch import nn\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets\nfrom torchvision.transforms import ToTensor, Lambda, Compose\nimport matplotlib.pyplot as plt\n\n# \u4e0b\u8f7d\u8bad\u7ec3\u96c6\ntraining_data = datasets.FashionMNIST(\n    root='data',\n    train=True,\n    download=True,\n    transform=ToTensor(),\n)\n\n# \u4e0b\u8f7d\u6d4b\u8bd5\u96c6\ntest_data = datasets.FashionMNIST(\n    root=\"data\",\n    train=False,\n    download=True,\n    transform=ToTensor(),\n)\n\nbatch_size = 64  # \u8bbe\u7f6e\u6279\u91cf\u5927\u5c0f\n\n# \u521b\u5efadata_loaders\uff0c\u53ef\u8fed\u4ee3\u6570\u636e\u96c6\uff0c\u8fed\u4ee3\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5c06\u8fd4\u56de\u4e00\u4e2a\u6279\u6b21\uff0c\u5305\u62ec\u6279\u91cf\u5927\u5c0f\u4e2a\u5143\u7d20\u7684\u7279\u5f81\u548c\u6807\u7b7e\ntrain_dataloader = DataLoader(training_data, batch_size=batch_size)\ntest_dataloader = DataLoader(test_data, batch_size=batch_size)\n</code></pre></p>"},{"location":"DL/PyTorch/PyTorch1/#_2","title":"\u521b\u5efa\u6a21\u578b","text":"Python<pre><code>device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n\n# \u5b9a\u4e49\u6a21\u578b\nclass NeuralNetwork(nn.Module):\n    def __init__(self):  # \u521d\u59cb\u5316\u51fd\u6570\n        super(NeauralNetwork, self).__init__()\n        self.flatten = nn.Flatten()\n        self.linear_relu_stack = nn.Sequential(\n            nn.Linear(28*28, 512),\n            nn.ReLU(),\n            nn.Linear(512, 512),\n            nn.ReLU(),\n            nn.Linear(512, 10)\n        )\n\n    def forward(self, x):  # \u524d\u5411\u4f20\u64ad\u51fd\u6570\n        x = self.flatten(x)\n        logits = self.linear_relu_stack(x)\n        return logits\n\nmodel = NearalNetwork().to(device)\n</code></pre>"},{"location":"DL/PyTorch/PyTorch1/#_3","title":"\u4f18\u5316\u53c2\u6570","text":"Python<pre><code># \u5b9a\u4e49\u635f\u5931\u51fd\u6570\uff0c\u8bc4\u4ef7\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u95f4\u7684\u5dee\u8ddd\nloss_fn = nn.CrossEntropyLoss()\n\n# \u5b9a\u4e49\u4f18\u5316\u5668\uff0c\u8c03\u6574\u53c2\u6570\u6765\u7f29\u5c0f\u9884\u6d4b\u7ed3\u679c\u548c\u771f\u5b9e\u7ed3\u679c\u7684\u5dee\u8ddd\noptimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\n\n# \u5b9a\u4e49\u8bad\u7ec3\u51fd\u6570\ndef train(dataloader, model, loss_fn, optimizer):\n    size = len(dataloader.dataset) \n    model.train() # \u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u6a21\u5f0f\uff08optimizing enable\uff09\n    for batch, (X, y) in enumerate(dataloader):\n        X, y = X.to(device), y.to(device)\n\n        # \u8ba1\u7b97\u635f\u5931\n        pred = model(X)\n        loss = loss_fn(pred, y)\n\n        # \u53cd\u5411\u4f20\u64ad\n        optimizer.zero_grad() # \u68af\u5ea6\u6e05\u96f6\n        loss.backward() # \u8bef\u5dee\u53cd\u4f20\n        optimizer.step() # \u4e00\u6b65\u66f4\u65b0\n\n        # \u56fa\u5b9a\u6279\u6b21\u6253\u5370\u8bad\u7ec3\u4fe1\u606f\n        if batch % 100 == 0\n            loss, current = loss.item(), batch * len(X)\n            print(f'loss: {loss:&gt;7f} [{current:&gt;5d}/{size:&gt;5d}]')\n\n# \u5b9a\u4e49\u6d4b\u8bd5\u51fd\u6570\ndef test(dataloader, model, loss_fn):\n    size = len(dataloader.dataset)\n    num_batchs = len(dataloader)\n    model.eval() # \u8bbe\u7f6e\u4e3a\u6d4b\u8bd5\u6a21\u5f0f\uff08optimizing disable\uff09\n    test_loss, correct = 0, 0\n    with torch.no_grad(): # \u4e0d\u8ba1\u7b97\u68af\u5ea6\uff0c\u8282\u7701\u7a7a\u95f4\n        for X, y in dataloader:\n            X, y = X.to_device(), y.to_device()\n            pred = model(X)\n            test_loss += loss_fn(pred, y).item() # tensor.item()\u8f6c\u6362\u6210\u6807\u91cf\n            correct += (pred.argmax(1) == y).type(torch.float).sum().item() # \u8ba1\u7b97\u6b63\u786e\u9884\u6d4b\u4e2a\u6570        \n    test_loss /= num_batches # \u5355\u6279\u6b21\u5e73\u5747\u8bad\u7ec3\u635f\u5931\n    correct /= size # \u7cbe\u786e\u5ea6\n    print(f'Test Error: \\n Accuracy: {*(100*correct):&gt;0.1f}%, Avg loss: {test_loss:&gt;8f} \\n')\n\n# \u8bad\u7ec3\u8fc7\u7a0b\u901a\u8fc7\u51e0\u4e2aepoch\u8fdb\u884c\uff0c\u6a21\u578b\u5728\u6bcf\u4e00\u4e2aepoch\u4e2d\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\n# \u6211\u4eec\u5e0c\u671b\u770b\u5230\u51c6\u786e\u5ea6\u5728\u6bcf\u4e2aepoch\u4e2d\u589e\u52a0\uff0c\u635f\u5931\u5728\u6bcf\u4e2aepoch\u4e2d\u51cf\u5c11\nepochs = 5\nfor t in range(epochs):\n    print(f'Epoch {t+1}\\n-----------------------------')\n    train(train_dataloader, model, loss_fn, optimizer)\n    test(test_dataloader, model, loss_fn)\nprint(\"Done!\")\n</code></pre>"},{"location":"DL/PyTorch/PyTorch1/#_4","title":"\u4fdd\u5b58\u6a21\u578b","text":"Python<pre><code># \u5e8f\u5217\u5316\u5185\u90e8\u72b6\u6001\u5b57\u5178\uff08\u5305\u542b\u6a21\u578b\u53c2\u6570\uff09\ntorch.save(model.state_dict(), \"model.pth\")\nprint(\"Saved PyTorch Model state to model.pth\")\n</code></pre>"},{"location":"DL/PyTorch/PyTorch1/#_5","title":"\u8f7d\u5165\u6a21\u578b\u5e76\u9884\u6d4b","text":"Python<pre><code>model = NeuralNetwork()\nmodel.load_state_dict(torch.load(\"model.pth\"))\n\nclasses = [\n    \"T-shirt/top\",\n    \"Trouser\",\n    \"Pullover\",\n    \"Dress\",\n    \"Coat\",\n    \"Sandal\",\n    \"Shirt\",\n    \"Sneaker\",\n    \"Bag\",\n    \"Ankle boot\",\n]\n\nmodel.eval()\nx, y = test_data[0][0], test_data[0][1]\nwith torch.no_grad():\n    pred = model(x)\n    predicted, actual = classes[pred[0].argmax(0)], classes[y]\n    print(f'Predicted: \"{predicted}\", Actual: \"{actual}\"')\n</code></pre>"},{"location":"DL/PyTorch/PyTorch1/#_6","title":"\u603b\u7ed3","text":"<p>\u4ee5\u4e0a\u5185\u5bb9\u5c55\u793a\u4e86\u5b8c\u6210\u4e00\u9879\u6df1\u5ea6\u5b66\u4e60\u57fa\u672c\u4efb\u52a1\u6240\u9700\u8981\u7684\u5168\u90e8\u5de5\u4f5c\u6d41\u7a0b, \u5728\u5b8c\u6210\u4e00\u9879\u5b9e\u9645\u4efb\u52a1\u65f6\uff0c\u5927\u81f4\u9700\u8981\u7ecf\u8fc7\u4e00\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u786e\u5b9a\u6570\u636e\u5bf9\u8c61\uff0c\u9009\u62e9\u5408\u9002\u7684\u6279\u91cf\u5927\u5c0f\uff0c\u521b\u5efaData Loader\u5b8c\u6210\u6570\u636e\u7684\u6279\u91cf\u9884\u52a0\u8f7d\uff08\u4e00\u822c\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff0c\u5b9e\u9645\u95ee\u9898\u4e2d\u4e3a\u4e86\u8c03\u53c2\u5f80\u5f80\u4f1a\u589e\u8bbek\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff09\u3002</p> </li> <li> <p>\u6839\u636e\u95ee\u9898\u9700\u8981\u6784\u9020\u5408\u9002\u7684\u7f51\u7edc\u6a21\u5757\uff0c\u5b8c\u6210\u6a21\u578b\u58f0\u660e\u4e0e\u5b9e\u4f8b\u5316\u3002</p> </li> <li> <p>\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668\uff0c\u5728\u5408\u9002\u7684\u8fed\u4ee3\u6b21\u6570\u5185\u5bf9\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\uff0c\u5e76\u4e0d\u65ad\u901a\u8fc7\u9a8c\u8bc1\u96c6\u51c6\u786e\u7387\u4e0e\u635f\u5931\u5927\u5c0f\u786e\u5b9a\u6a21\u578b\u662f\u5426\u5904\u4e8e\u5b66\u4e60\u72b6\u6001\uff08\u5373\u662f\u5426\u672a\u53d1\u751f\u6b20\u62df\u5408/\u8fc7\u62df\u5408\uff09\u3002</p> </li> <li> <p>\u4fdd\u5b58\u6a21\u578b\u5185\u90e8\u53c2\u6570\uff08\u4fdd\u5b58\u5e8f\u5217\u5316\u5185\u90e8\u72b6\u6001\u5b57\u5178\uff09\uff0c\u9700\u8981\u4f7f\u7528\u65f6\u5b9e\u4f8b\u5316\u6a21\u578b\u5e76\u52a0\u8f7d\u53c2\u6570\uff0c\u5373\u53ef\u8fdb\u884c\u9884\u6d4b\u4efb\u52a1\u3002</p> </li> </ol>"},{"location":"Home/","title":"Hi there, welcome to my website!","text":""},{"location":"Home/#about-this-website","title":"About this website.","text":"<p> \"\u76f8\u4fe1\u52aa\u529b\u7684\u5c3d\u5934\u662f\u5947\u8ff9\"</p> <p>\u00a0 \u8fd9\u91cc\u662f\u5e38\u9e23\u5764\u7684\u4e2a\u4eba\u7f51\u7ad9 https://nijikadesu.github.io</p> <p>\u00a0 \u5728\u8fd9\u4e2a\u7f51\u7ad9\u4e2d\uff0c\u6211\u4f1a\u5206\u4eab\u6211\u7684\u5b66\u4e60\u3001\u5de5\u4f5c\u4e0e\u751f\u6d3b\uff0c\u4e5f\u4f1a\u8bb0\u5f55\u4e00\u4e9b\u6709\u8da3\u7684\u4e1c\u897f</p> <p>\u00a0 \u5e0c\u671b\u6211\u4eec\u90fd\u80fd\u5728\u63a2\u7d22\u4e2d\u9047\u5230\u66f4\u597d\u7684\u81ea\u5df1^^</p> <p>\u98df\u7528\u8bf4\u660e\uff1a</p> <p>\u6211\u5e73\u65f6\u6240\u6709\u7684\u6587\u7ae0\u4f1a\u4f18\u5148\u66f4\u65b0\u5728\u535a\u5ba2\u4e2d\uff0c\u4f1a\u4e0d\u5b9a\u671f\u5c06\u535a\u5ba2\u4e2d\u4e00\u4e9b\u4f53\u7cfb\u5316\u77e5\u8bc6\u5f52\u6863\u5728\u4e3b\u9875\u5176\u4ed6\u5206\u680f</p>"},{"location":"Home/#about-me","title":"About me.","text":"<p>\u6211\u662f\u897f\u5b89\u7535\u5b50\u79d1\u6280\u5927\u5b66\u4eba\u5de5\u667a\u80fd\u4e13\u4e1a\u7684\u4e00\u540d\u5927\u4e8c\u5b66\u751f</p> <p>\u6211\u7684\u7231\u597d\u6709\u770b\u52a8\u6f2b\uff0c\u73a9FPS\u6e38\u620f</p> <p>\u6211\u5bf9\u673a\u5668\u5b66\u4e60/\u6df1\u5ea6\u5b66\u4e60\u7b97\u6cd5\u5f88\u611f\u5174\u8da3</p>"},{"location":"Home/CV/","title":"\u656c\u8bf7\u671f\u5f85","text":""},{"location":"Home/prize/","title":"\u6b64\u9875\u5c55\u793a\u6211\u5927\u5b66\u671f\u95f4\u7684\u83b7\u5956\u7ecf\u5386","text":""},{"location":"Home/prize/#2022-2023","title":"2022-2023\u5b66\u5e74","text":"<p>\u9ad8\u6570\u7ade\u8d5b\u6821\u5185\u4f18\u79c0\u5956\uff08\u65e0\u8bc1\u4e66\uff09</p> <p>\u6821\u4e8c\u7b49\u5956\u5b66\u91d1 &amp; \u9662\u7ea7\u4f18\u79c0\u5b66\u751f\u79f0\u53f7</p>"},{"location":"Home/prize/#2023-2024","title":"2023-2024\u5b66\u5e74","text":"<p>\u5168\u56fd\u5927\u5b66\u751f\u6570\u5b66\u7ade\u8d5b\u7701\u4e8c\u7b49\u5956</p> <p> CMC Certificate</p> <p>\u7f8e\u56fd\u5927\u5b66\u751f\u6570\u5b66\u7ade\u8d5b\u4e00\u7b49\u5956\uff08Meritorious Winner\uff09</p> <p> ICM Certificate</p>"},{"location":"Kaggle/","title":"\u4f60\u6765\u5230\u4e86\u6ca1\u6709\u77e5\u8bc6\u7684\u8352\u539fQAQ","text":"<p>Coming soon</p>"},{"location":"Leetcode/","title":"LeetCode Node","text":"<p>\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6211\u5c06\u4ee5\u7b14\u8bb0\u7684\u5f62\u5f0f\u4e0a\u4f20\u6211\u5728Leetcode\u7684\u5237\u9898\u8fc7\u7a0b\u4e2d\u7684\u603b\u7ed3</p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/","title":"\u52a8\u6001\u89c4\u5212","text":""},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_2","title":"\u57fa\u672c\u8981\u7d20","text":"<p>\u8f6c\u79fb\u65b9\u7a0b+\u8fb9\u754c\u6761\u4ef6</p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#70","title":"\u722c\u697c\u68af 70","text":""},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_3","title":"\u9898\u76ee\u5206\u6790","text":"<ol> <li> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1a\\(f(x)=f(x - 1)+f(x + 1)\\)</p> </li> <li> <p>\u8fb9\u754c\u6761\u4ef6\uff1a \\(f(0)=1,f(1)=1\\) \u5143\u65b9\u6848\u8981\u6c42\u552f\u4e00\u6027</p> </li> </ol> <p>\u7531\u4e8e\\(f(x)\\)\u53ea\u548c\\(f(x - 1),f(x - 2)\\)\u6709\u5173\uff0c\u6545\u4f7f\u7528\u6eda\u52a8\u6570\u7ec4\u4f18\u5316\u7a7a\u95f4\u590d\u6742\u5ea6</p> <p></p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_4","title":"\u4ee3\u7801\u5b9e\u73b0","text":"C<pre><code>//\u6eda\u52a8\u6570\u7ec4\nint climbStairs(int n) {\n    int p = 0, q = 0, r = 1;\n    for (int i = 1; i &lt;= n; i ++) {\n        p = q;\n        q = r;\n        r = p + q;\n    }\n    return r;\n}\n//dp\u6570\u7ec4\nclass Solution {\npublic:\n\u00a0 \u00a0 int climbStairs(int n) {\n\u00a0 \u00a0 \u00a0 \u00a0 if (n == 1) return 1;\n\u00a0 \u00a0 \u00a0 \u00a0 int* dp = new int[n + 1];\n\u00a0 \u00a0 \u00a0 \u00a0 dp[1] = 1;\n\u00a0 \u00a0 \u00a0 \u00a0 dp[2] = 2;\n\u00a0 \u00a0 \u00a0 \u00a0 for (int i = 3; i &lt;= n; i ++) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dp[i] = dp[i - 1] + dp[i - 2];\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 return dp[n];\n\u00a0 \u00a0 }\n};\n</code></pre>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_5","title":"\u4f7f\u7528\u6700\u5c0f\u82b1\u8d39\u722c\u697c\u68af","text":""},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_6","title":"\u9898\u76ee\u5206\u6790","text":"<p>cost\u6570\u7ec4\u957f\u5ea6len\u4ee3\u8868\u4e86\u8def\u5f84\u4e2d\u7684\u697c\u68af\u6570, \u5219len\u4e2a\u9636\u68af\u5206\u522b\u5bf9\u5e94\u4e86\u6570\u7ec4\u4e0b\u6807\u4e2d0\u5230\\(n - 1\\)\u7684\u90e8\u5206, \u672c\u9898\u5373\u6c42\u5230\u8fbe\u4e0b\u6807\u4e3an\u7684\u697c\u68af\u6240\u9700\u8981\u7684\u6700\u5c0f\u82b1\u8d39</p> <p>\u4e0e\u4e0a\u4e00\u9053\u9898\u7c7b\u4f3c, \u8fd9\u9053\u9898\u4e5f\u662f\u5c06\u722cn\u4e2a\u53f0\u9636\u7684\u95ee\u9898, \u8f6c\u5316\u4e3a\u4e86\u722c\\((n-1)+1\\)\u4e2a\u53f0\u9636\u548c\\((n-2)+2\\)\u4e2a\u53f0\u9636\u7684\u95ee\u9898, \u7531\u6b64\u5f97\u5230\u8be5\u95ee\u9898\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b</p> <p>\\(dp[n] = min(dp[n-1] + cost[n-1], dp[n-2] + cost[n-2])\\)</p> <p>\u6709\u70b9\u8d2a\u5fc3\u7684\u601d\u60f3, \u6bcf\u4e00\u6b65\u90fd\u53d6\u5230\u6700\u5c0f\u503c\u7684\u8bdd, \u6700\u7ec8\u7ed3\u679c\u4e00\u5b9a\u6700\u5c0f \u8003\u8651\u8fb9\u754c\u6761\u4ef6, \u7531\u9898\u8bbe\u6211\u4eec\u77e5\u9053, \u8d77\u70b9\u53ef\u4ee5\u5728\u4e0b\u6807\u4e3a0\u62161\u7684\u697c\u68af\u4e2d\u9009\u53d6, \u6240\u4ee5\u5230\u8fbe\u8fd9\u4e24\u4e2a\u697c\u68af\u7684\u524d\u9a71\u82b1\u8d39\u4e00\u5b9a\u4e3a0 Text Only<pre><code>dp[0] = 0\ndp[1] = 0\n</code></pre> \u6709\u4e86\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e0e\u8fb9\u754c\u6761\u4ef6, \u5c31\u53ef\u4ee5\u7740\u624b\u5f00\u59cb\u89e3\u9898\u4e86</p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_7","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u5229\u7528\u52a8\u6001\u6570\u7ec4\u8282\u7701\u7a7a\u95f4\u7684\u4ee3\u7801\u5982\u4e0b C<pre><code>class Solution {\npublic:\n    int minCostClimbingStairs(vector&lt;int&gt;&amp; cost) {\n        int len = cost.size();\n        int prev, curr, next;\n        prev = 0; curr = 0;\n        for (int i = 0; i &lt;= len; i ++) {\n            int func1 = prev + cost[i - 1];\n            int func2 = prev + cost[i - 2];\n            next = func1 &gt; func2? func1 : func2;\n            prev = curr;\n            curr = next;\n        }\n        return curr;\n    }\n};\n</code></pre></p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_8","title":"\u5220\u9664\u5e76\u83b7\u5f97\u70b9\u6570","text":""},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#c","title":"C++\u54c8\u5e0c\u8868\u5b9e\u73b0","text":"C<pre><code>#include &lt;unordered_map&gt;\n\nunordered_map&lt;int, int&gt; hashtable;\nhashtable[key] = value; //insert\u64cd\u4f5c\ncout &lt;&lt; hashtable[key1] &lt;&lt; endl; //\u6309\u952e\u7d22\u503c\n</code></pre>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_9","title":"\u601d\u8def\u4e0e\u4ee3\u7801","text":"<p>\u9009\u53d6\u6570\u662f\u4efb\u610f\u7684\uff0c\u5982\u679c\u6bcf\u53d6\u4e00\u4e2a\u503c\u4fbf\u8981\u6267\u884c\u5220\u9664\u64cd\u4f5c\uff0c1\u662f\u65e0\u6cd5\u8fdb\u884c\u56de\u6eaf\u5bfb\u6c42\u6700\u4f18\u89e3\uff0c2\u662f\u65f6\u95f4\u590d\u6742\u5ea6\u5927\uff0c\u6545\u5bf9vector\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f\uff1a C<pre><code>sort(nums.begin(), nums.end());\n</code></pre> \u53c8\u56e0\u4e3a\u4e00\u65e6\u4e00\u4e2a\u503c\u88ab\u9009\u53d6\uff0c\u5219\u4e0e\u4ed6\u76f8\u540c\u7684\u503c\u5747\u53ef\u4ee5\u88ab\u9009\u53d6\uff0c\u6545\u4f7f\u7528hash\u8868\u5bf9\u6bcf\u4e2a\u503c\u4e0e\u5176\u51fa\u73b0\u7684\u6b21\u6570\u8fdb\u884c\u5b58\u50a8\uff0c\u80fd\u4f18\u5316\u65f6\u95f4\u4e0e\u7a7a\u95f4\u590d\u6742\u5ea6</p> <p>\u63a5\u4e0b\u6765\u8003\u8651\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff0c\u6b64\u65f6\u95ee\u9898\u5df2\u7ecf\u8f6c\u5316\u4e3a\u4e86\uff1a\u5728\u4e00\u4e2a\u6709\u5e8f\u5355\u8c03\u6570\u7ec4\u4e2d\u987a\u5e8f\u53d6\u6570\uff0c\u5728\u53d6\u4e86\u4e00\u4e2a\u6570num\u540e\uff0c\u5219\u4e0d\u80fd\u9009\u53d6num + 1\uff08\u56e0\u4e3a\u53d6\u6570\u64cd\u4f5c\u4ece\u65e0\u5e8f\u6570\u7ec4\u8f6c\u4e3a\u6709\u5e8f\u6570\u7ec4\uff0c\u6545\u800c\u8003\u8651num - 1\u4e0e\u8003\u8651num + 1\u6027\u8d28\u76f8\u540c\uff09\uff0c\u800c\u4e3a\u4e86\u83b7\u5f97\u6700\u5927\u70b9\u6570\uff0c\u6211\u4eec\u5fc5\u987b\u6743\u8861\u9009\u53d6num\u4e0e\u9009\u53d6num + 1\u4e24\u4e2a\u64cd\u4f5c\uff0c\u7a76\u7adf\u54ea\u4e2a\u5229\u6da6\u6700\u5927</p> <p>\u7531\u6b64\u5f97\u5230\u5bf9\u4e8e\u7b2ci\u4e2a\u6570\u636e\u5bf9\u8c61\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b Text Only<pre><code>if dp[i] - dp[i - 1] == 1\ndp[i] = max(dp[i - 1], dp[i] * N + dp[i - 2])\nelse \ndp[i] = dp[i] * N + dp[i - 2]\n</code></pre> \u7531\u4e8e\u8981\u8003\u8651\u9009\u548c\u4e0d\u9009\u7684\u95ee\u9898\uff0c\u6211\u4eec\u4f7f\u7528\u4e00\u4e2a\u53d8\u91cflast\u5b58\u50a8\u5f53\u524d\u7684dp[i],\u4e5f\u5c31\u662f\u4e0b\u4e00\u8f6e\u5faa\u73af\u7684\u524d\u9a71\u4e86</p> <p>\u5bf9\u4e8e\u8fb9\u754c\u6761\u4ef6\uff0c\u6211\u4eec\u8003\u8651\u5230value\u521d\u59cb\u503c\u4e3a0\u7684\u60c5\u51b5\uff0c\u4e3a\u4e86\u907f\u514d\u5bf9\u9996\u5143\u7d20\u7684\u8ba8\u8bba\uff0c\u6211\u4eec\u8ba9dp\u6570\u7ec4\u7684\u9996\u5143\u7d20\u53d60\u5373\u53ef</p> <p>\u4ee3\u7801\u5982\u4e0b\uff1a C<pre><code>class Solution {\npublic:\n\u00a0 \u00a0 int deleteAndEarn(vector&lt;int&gt;&amp; nums) {\n\u00a0 \u00a0 \u00a0 \u00a0 unordered_map&lt;int, int&gt; m; //\u8bb0\u5f55\u6bcf\u4e00\u4e2a\u503c\u51fa\u73b0\u4e86\u591a\u5c11\u6b21\n\u00a0 \u00a0 \u00a0 \u00a0 sort(nums.begin(), nums.end());\n\u00a0 \u00a0 \u00a0 \u00a0 vector&lt;int&gt; dp = {0, nums[0]}; //\u8d77\u59cb\u4e24\u4e2a\u6570\n\u00a0 \u00a0 \u00a0 \u00a0 m[nums[0]] = 1;\n\u00a0 \u00a0 \u00a0 \u00a0 for (int i = 1; i &lt; nums.size(); i ++) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 m[nums[i]] ++;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (nums[i] != dp.back())\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dp.push_back(nums[i]);\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 int last = dp[1];\n\u00a0 \u00a0 \u00a0 \u00a0 dp[1] = dp[1] * m[dp[1]];\n\u00a0 \u00a0 \u00a0 \u00a0 for (int i = 2; i &lt; dp.size(); i ++) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (dp[i] - last == 1) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 last = d[i];\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dp[i] = max(dp[i - 1], dp[i - 2] + dp[i] * m[dp[i]]);\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 last = dp[i];\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 dp[i] = dp[i - 1] + dp[i] * m[dp[i]];\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 return dp[dp.size() - 1];\n\u00a0 \u00a0 }\n};\n</code></pre></p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#32","title":"\u6700\u957f\u6709\u6548\u62ec\u53f7 32","text":""},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_10","title":"\u95ee\u9898\u5206\u6790","text":"<p>\u6c42\u6700\u957f\u62ec\u53f7\u5b57\u4e32\u957f\u5ea6, \u8003\u8651\u52a8\u6001\u89c4\u5212</p> <p>\u5728\u52a8\u6001\u89c4\u5212\u95ee\u9898\u4e2d, \u6ce8\u91cd\u7684\u662f\u7531\u5c0f\u5230\u5927, \u7531\u6d45\u5165\u6df1\u7684\u95ee\u9898\u7d2f\u79ef\u8fc7\u7a0b. \u5728\u672c\u9898\u4e2d, \u6211\u4eec\u8bbe\u4e0b\u6807i\u4ee3\u8868\u5f53\u524d\u62ec\u53f7\u5b57\u7b26\u4e32s\u7684\u7b2ci\u4e2a\u5143\u7d20, dp[i]\u8868\u793a\u4ee5\u5f53\u524d\u5143\u7d20\u7ed3\u5c3e\u5e76\u5305\u542b\u5f53\u524d\u5143\u7d20\u5728\u5185\u7684\u6700\u957f\u6709\u6548\u62ec\u53f7\u5b57\u4e32, \u4e0b\u9762\u7684\u8ba8\u8bba\u4ee5\u4e0a\u8ff0\u6761\u4ef6\u4e3a\u4f9d\u6258\u5c55\u5f00</p> <ul> <li>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b \u7531\u4e8edp[i]\u8868\u793a\u7684\u662f\u6700\u957f\u6709\u6548\u62ec\u53f7\u5b57\u4e32, \u6545\u8981\u4f7f\u5176\u503c\u4e0d\u7b49\u4e8e\u96f6, \u5219\u987b\u6ee1\u8db3s[i] \\(=\\) ')' , \u5bf9s[i - 1]\u8fdb\u884c\u8ba8\u8bba: Text Only<pre><code>1. s[i - 1] == '(' \n    \u6b64\u65f6s[i - 1]\u4e0es[i]\u6784\u6210\u4e00\u5bf9\u6709\u6548\u62ec\u53f7, dp[i]\u81f3\u5c11\u4e3a2\n    \u8d4b\u503c\u64cd\u4f5c: dp[i] = 2\n    \u82e5\u5728\u6b64\u57fa\u7840\u4e0a, s[i - 2]\u5b58\u5728\u4e14dp[i - 2] != 0\n    \u8bf4\u660es[i - 2]\u662f\u4e00\u6761\u6709\u6548\u62ec\u53f7\u5b57\u4e32\u7684\u7ed3\u5c3e\n    dp[i] = dp[i] + dp[i - 2]\n2. s[i - 1] == ')'\n    \u82e5dp[i - 1] == 0, \u8bf4\u660es[i - 1]\u4e3a\u4e00\u6761\u6709\u6548\u62ec\u53f7\u5b57\u4e32\u7684\u7ed3\u5c3e\n    \u4e3a\u4e86\u77e5\u9053s[i]\u662f\u5426\u4e3a\u4e00\u6761\u6709\u6548\u62ec\u53f7\u5b57\u4e32\u7684\u7ed3\u5c3e\n    \u6211\u4eec\u9700\u8981\u8003\u8651\u4e0b\u6807i - dp[i - 1] - 1\u7684\u5b58\u5728\u6027\n    \u82e5\u5176\u4e0d\u5b58\u5728 \u5219s[i]\u4e0d\u662f\u6709\u6548\u7ed3\u5c3e\n    \u82e5\u5176\u5b58\u5728,\u4e14s[i - dp[i - 1] - 1] == '('\n    \u8bf4\u660es[i]\u662f\u6709\u6548\u7ed3\u5c3e\n    dp[i]\u81f3\u5c11\u4e3adp[i - 1] + 2\n    \u8d4b\u503c\u64cd\u4f5c: dp[i] = dp[i - 1] + 2;\n    \u82e5\u518d\u6b64\u57fa\u7840\u4e0a, s[i - dp[i - 1] - 2]\u5b58\u5728\n    \u4e14dp[i - dp[i - 1] - 2] != 0\n    \u8bf4\u660es[i - dp[i - 1] - 2]\u662f\u4e00\u6761\u6709\u6548\u62ec\u53f7\u7684\u7ed3\u5c3e\n    dp[i] = dp[i] + dp[i - dp[i - 1] + 2]\n</code></pre></li> <li>\u8fb9\u754c\u6761\u4ef6 \u6211\u4eec\u77e5\u9053, dp[0] == 0, \u56e0\u4e3a\u5355\u4e2a\u62ec\u53f7\u4e0d\u53ef\u80fd\u6709\u6548</li> </ul> <p>\u5728\u4ee3\u7801\u5b9e\u73b0\u4e2d, \u53ea\u9700\u8981\u8003\u8651\u4e0b\u6807\u7684\u975e\u8d1f\u6027\u5373\u53ef</p>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#_11","title":"\u4ee3\u7801\u5b9e\u73b0","text":"C<pre><code>class Solution {\npublic:\n    int longestValidParentheses(string s) {\n        int size = s.length();\n        vector(int) dp(size, 0);\n        int maxval = 0;\n        for (int i = 1; i &lt; size; i ++) {\n            if (s[i] == '(') {\n                dp[i] = 0;\n            } else if (s[i] == ')') {\n                if (s[i - 1] == '(') {\n                    dp[i] = 2;\n                    if (i - 2 &gt;= 0) {\n                        dp[i] += dp[i - 2];\n                    }\n                } else if (dp[i - 1] &gt; 0 ) {\n                    if (i - dp[i - 1] - 1 &gt;= 0 &amp;&amp; dp[i - dp[i - 1] - 1] == '(') {\n                        dp[i] = dp[i - 1] + 2;\n                        if (i - dp[i - 1] - 2 &gt;= 0) {\n                            dp[i] += dp[i - dp[i - 1] + 2];\n                        }\n                    }\n                }\n            }\n            maxval = max(dp[i], maxval);\n        }\n        return maxval;\n    }\n}\n</code></pre>"},{"location":"Leetcode/note/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/#5","title":"\u6700\u957f\u56de\u6587\u5b57\u4e32 5","text":""},{"location":"Leetcode/note/%E6%95%B0%E7%BB%84/","title":"\u4e8c\u5206\u67e5\u627e","text":""},{"location":"Leetcode/note/%E6%95%B0%E7%BB%84/#209","title":"\u6ed1\u52a8\u7a97\u53e3 209","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/","title":"\u94fe\u8868","text":"<p>\u5199\u5728\u6700\u524d: \u4ee5\u4e0b\u5bf9\u94fe\u8868\u7684\u6240\u6709\u64cd\u4f5c\u5efa\u7acb\u5728\u8be5\u94fe\u8868\u6709\u54d1\u7ed3\u70b9\u7684\u524d\u63d0\u4e0b</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#141-142","title":"\u73af\u5f62\u94fe\u8868 141 &amp; 142","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_2","title":"\u6211\u7684\u4e00\u70b9\u60f3\u6cd5\uff1a","text":"<p>C<pre><code>bool hasCycle(struct ListNode *head) {\n    bool flag = false;\n    struct ListNode* ansList = \n    (struct ListNode*)malloc(sizeof(struct ListNode));\n    ansList -&gt; next = NULL;//\u5224\u91cd\u94fe\u8868dummy node\n    struct ListNode* cur = \n    (struct ListNode*)malloc(sizeof(struct ListNode));\n    cur -&gt; next = head; //dummy node\n    struct ListNode* ansp = ansList; //\u5224\u91cd\u94fe\u8868\u5faa\u73af\u53d8\u91cf\n    struct ListNode* p = ansList; //\u5c3e\u6307\u9488\uff0c\u7528\u4e8e\u5c3e\u63d2\u6cd5\n    while (cur -&gt; next) {\n        cur = cur -&gt; next;\n        while (ansp -&gt; next) { //\u5728\u5224\u91cd\u94fe\u8868\u4e2d\u5bfb\u627e\u6709\u65e0\u91cd\u590d\u6307\u5411\u7684\u7ed3\u70b9\n            ansp = ansp -&gt; next;\n            if (ansp == cur) return true;\n        }\n        struct ListNode* s = \n        (struct ListNode*)malloc(sizeof(struct ListNode));\n        s -&gt; next = NULL;\n        s -&gt; val = cur -&gt; val;\n        p -&gt; next = s;\n        p = p -&gt; next; //\u5c06\u65b0\u7ed3\u70b9s\u63d2\u5165ansList\u5c3e\u7aef\uff0c\u66f4\u65b0\u5c3e\u7ed3\u70b9\n        ansp = ansList; //\u91cd\u7f6eansp\u503c\uff0c\u4f7f\u5176\u6307\u5411\u5224\u91cd\u94fe\u8868\u7684\u5934\u8282\u70b9\n    }\n    return false;\n}\n</code></pre> \u9519\u8bef\u539f\u56e0\uff1a\u8d85\u65f6\uff0c\u5177\u4f53\u539f\u56e0\u5f85\u8003\u5bdf</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_3","title":"\u5f15\u7533\u77e5\u8bc6\uff1a\u5f17\u6d1b\u4f0a\u5fb7\u5224\u5708\u6cd5","text":"<p>def: \u5feb\u6162\u6307\u9488\u5728\u6709\u73af\u7684\u8def\u5f84\u4e2d\u7ecf\u8fc7\u6709\u9650\u6b65\u8fed\u4ee3\u4e00\u5b9a\u4f1a\u5728\u540c\u4e00\u70b9\u76f8\u9047</p> <p>\u518d\u5f15\u7533:</p> <p>\u5f53\u5feb\u6162\u6307\u9488\u76f8\u9047\u540e\uff0c\u6162\u6307\u9488\u7ee7\u7eed\u8fed\u4ee3\u76f4\u5230\u56de\u5230\u73af\u7684\u8d77\u59cb\u70b9\u65f6\uff0c\u82e5\u5728\u5feb\u6162\u6307\u9488\u76f8\u9047\u540e\u5bf9head\u6307\u9488\u8fdb\u884c\u540c\u6b65\u8fed\u4ee3\uff0c\u5219head\u4e0eslow\u6307\u9488\u4e00\u5b9a\u4f1a\u5728\u73af\u7684\u8d77\u59cb\u70b9\u76f8\u9047</p> <p>https://www.bilibili.com/video/BV1KG4y1G7cu/?vd_source=24a80c820080f624a6de7a8a67c62a24</p> <p></p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#206","title":"\u94fe\u8868\u53cd\u8f6c 206","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_4","title":"\u89e3\u6cd5\u96c6\u5408","text":"<p>\u4e00\u79cd\u6bd4\u8f83\u590d\u6742\u7684\u505a\u6cd5\u662f\u5efa\u7acb\u4e00\u4e2a\u65b0\u7684\u94fe\u8868\uff0c\u904d\u5386\u539f\u94fe\u8868\u5e76\u5c06\u6bcf\u4e00\u4e2a\u7ed3\u70b9\u5934\u63d2\u5230\u7b54\u6848\u94fe\u8868\u4e2d\uff0c\u5b9e\u73b0\u94fe\u8868\u53cd\u8f6c</p> <p>C<pre><code>struct ListNode* reverseList(struct ListNode* head)\n{\n    struct ListNode* ans = \n    (struct ListNode*)malloc(sizeof(struct ListNode));\n    while (head &amp;&amp; head -&gt; next) {\n        struct ListNode* s = \n        (struct ListNode*)malloc(sizeof(struct ListNode));\n        s -&gt; val = head -&gt; val;\n        s -&gt; next = ans -&gt; next;\n        ans -&gt; next = s; //\u5934\u63d2\u6cd5\n        head = head -&gt; next;\n    }\n    return ans -&gt; next; //\u4e0d\u542bdummynode\n}\n</code></pre> \u6bd4\u8f83\u5de7\u5999\u7684\u529e\u6cd5\u662f\u5229\u7528\u4e09\u6307\u9488\uff0c\u5355\u5411\u94fe\u8868\u5177\u6709\u4e0d\u53ef\u56de\u6eaf\u6027\uff0c\u800c\u4e3a\u4e86\u5b8c\u6210\u94fe\u8868\u7684\u53cd\u8f6c\u9700\u8981\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ol> <li>\u5c06\u5f53\u524d\u7ed3\u70b9\u7684next\u6307\u9488\u6307\u5411\u4ed6\u7684\u524d\u9a71\u7ed3\u70b9</li> <li>\u66f4\u65b0\u5f53\u524d\u7ed3\u70b9\u4e0e\u524d\u9a71\u7ed3\u70b9\uff0c\u91cd\u590d1\u4e2d\u5de5\u4f5c</li> </ol> <p>\u56e0\u4e3a\u5f53\u524d\u7ed3\u70b9\u7684next\u6307\u9488\u6307\u5411\u9700\u8981\u904d\u5386\u7684\u4e0b\u4e00\u4e2a\u7ed3\u70b9\uff0c\u6240\u4ee5\u6539\u53d8next\u6307\u9488\u65f6\u5fc5\u987b\u7528\u4e00\u4e2a\u6307\u9488nxt\u6307\u5411\u539f\u672cnext\u6307\u9488\u6307\u5411\u7684\u5185\u5b58\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5f53\u524d\u6307\u9488cur\u7684\u66f4\u65b0\u6709\u8ff9\u53ef\u5faa\uff0c\u540c\u65f6\uff0c\u7531\u4e8e\u94fe\u8868\u4e0d\u53ef\u56de\u6eaf\uff0c\u53c8\u5fc5\u987b\u7528\u4e00\u4e2apre\u6307\u9488\u6307\u5411\u5f53\u524d\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\uff0c\u5219\u6b65\u9aa4\u53ef\u4ee5\u63cf\u8ff0\u4e3a\uff1a</p> Text Only<pre><code>nxt = cur -&gt; next;\ncur -&gt; next = pre;\npre = cur;\ncur = nxt;\n</code></pre> <p>\u8fd9\u6837\u5c31\u5b8c\u6210\u4e86\u76f8\u90bb\u94fe\u7ed3\u4e4b\u95f4\u6307\u9488\u7684\u53cd\u8f6c\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e86pre\u548ccur\u7684\u53ef\u8fed\u4ee3\u6027\uff0c\u4e0b\u9762\u7ed9\u51fa\u5b8c\u6574\u4ee3\u7801</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_5","title":"\u4ee3\u7801\u5b9e\u73b0","text":"C<pre><code>struct ListNode* reverseList(struct ListNode* head) {\n    struct ListNOde* pre, * cur, *nxt;\n    cur = head;\n    pre = NULL; // \u521d\u59cb\u5316cur\u6307\u5411head\u7ed3\u70b9,pre\u6307\u5411NULL(\u5934\u8282\u70b9\u6ca1\u6709\u524d\u9a71) \n    while (cur) { //\u6ca1\u6709\u5f85\u5904\u7406\u7684\u94fe\u7ed3\n        nxt = cur -&gt; next; //\u4fdd\u5b58cur -&gt; next\n        cur -&gt; next = pre;\n        pre = cur;\n        cur = nxt;\n    }\n    return pre;\n}\n</code></pre>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#876","title":"\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9 876","text":"<p>\u6211\u7684\u60f3\u6cd5\u6bd4\u8f83\u7c97\u66b4, \u5c31\u662f\u7528\u4e00\u91cd\u5faa\u73af\u5f97\u51fa\u94fe\u8868\u7684\u7ed3\u70b9\u6570, \u8fdb\u800c\u5224\u65ad\u94fe\u8868\u7684\u4e2d\u95f4\u7ed3\u70b9\u5e94\u8be5\u51fa\u73b0\u7684\u4f4d\u7f6e, \u7136\u540e\u518d\u7528\u4e00\u91cd\u5faa\u73af\u626b\u63cf\u51fa\u8be5\u7ed3\u70b9</p> <p>\u4ee3\u7801\u5982\u4e0b: C<pre><code>int Listlength(struct ListNode* head) { //\u8ba1\u7b97\u957f\u5ea6\u51fd\u6570\n\u00a0 \u00a0 int cnt = 0;\n\u00a0 \u00a0 while (head -&gt; next) {\n\u00a0 \u00a0 \u00a0 \u00a0 head = head -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 cnt ++;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return cnt;\n}\nstruct ListNode* middleNode(struct ListNode* head){\n\u00a0 \u00a0 struct ListNode* s =\n\u00a0 \u00a0  (struct ListNode*)malloc(sizeof(struct ListNode));\n\u00a0 \u00a0 s -&gt; next = head;\n\u00a0 \u00a0 head = s; //dummy node\n\u00a0 \u00a0 int pos = Listlength(head)\n\u00a0 \u00a0 pos = pos / 2 + 1;\n\u00a0 \u00a0 int cnt = 0;\n\u00a0 \u00a0 while (cnt != pos &amp;&amp; head -&gt; next) {\n\u00a0 \u00a0 \u00a0 \u00a0 head = head -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 cnt ++;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return head;\n}\n</code></pre></p> <p>\u6bd4\u8f83\u5de7\u5999\u7684\u505a\u6cd5\u662f\u5229\u7528\u4e4b\u524d\u5f17\u6d1b\u4f0a\u5fb7\u5224\u5708\u6cd5\u6240\u63a5\u89e6\u7684\u5feb\u6162\u6307\u9488, \u6211\u4eec\u77e5\u9053, \u6162\u6307\u9488\u6bcf\u8fed\u4ee3\u4e00\u6b21\u524d\u8fdb\u7684\u957f\u5ea6\u662f\u4e00\u4e2a\u5355\u4f4d, \u800c\u5feb\u6307\u9488\u662f\u4e24\u4e2a, \u6240\u4ee5\u76f8\u5bf9\u901f\u5ea6\u4e0a, \u5feb\u6307\u9488\u6bcf\u6b21\u6bd4\u6162\u6307\u9488\u591a\u8d70\u4e00\u4e2a\u5355\u4f4d, \u5728\u76f8\u540c\u65f6\u95f4\u5185, \u5feb\u6307\u9488\u79fb\u52a8\u7684\u8ddd\u79bb\u662f\u6162\u6307\u9488\u7684\u4e24\u500d</p> <p>\u4f46\u8fd9\u4e5f\u5bfc\u81f4\u4e86\u4e00\u4e2a\u95ee\u9898,\u5c31\u662f\u5728\u5947\u6570\u7ed3\u70b9\u7684\u94fe\u8868\u4e0a,\u5feb\u6307\u9488\u4e0d\u4f1a\u505c\u5728\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9, \u800c\u662f\u5728\u8bbf\u95ee\u5012\u6570\u7b2c\u4e8c\u4e2a\u7ed3\u70b9\u540e, \u5feb\u6307\u9488\u6700\u7ec8\u66f4\u65b0\u4e3aNULL, \u904d\u5386\u7ed3\u675f, \u800c\u5076\u6570\u7ed3\u70b9\u7684\u94fe\u8868\u4e0afast\u6307\u9488\u5219\u662f\u6307\u5411\u6700\u540e\u4e00\u4e2a\u7ed3\u70b9\u65f6\u7ed3\u675f\u904d\u5386. \u8fd9\u5c31\u5bfc\u81f4\u4e86\u6162\u6307\u9488\u505c\u6b62\u7684\u4f4d\u7f6e\u4e0d\u4e00\u5b9a\u6b63\u597d\u5904\u4e8e\u4e2d\u95f4\u7ed3\u70b9</p> <p>\u4e0d\u96be\u53d1\u73b0, \u5947\u6570\u7ed3\u70b9\u94fe\u8868\u4e0a\u7ec8\u6b62\u904d\u5386\u65f6, \u6162\u6307\u9488\u521a\u597d\u6307\u5411\u4e2d\u95f4\u7ed3\u70b9, \u800c\u5076\u6570\u7ed3\u70b9\u4e0a\u5219\u662f\u4e2d\u95f4\u7ed3\u70b9\u7684\u524d\u9a71, \u8fd9\u5c31\u9700\u8981\u4e00\u4e2a\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u6765\u5bf9\u8fd4\u56de\u503c\u8fdb\u884c\u9009\u62e9</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_6","title":"\u4ee3\u7801\u5b9e\u73b0","text":"<p>\u4ee3\u7801\u5b9e\u73b0\u5982\u4e0b: C<pre><code>struct ListNode* middleNode(struct ListNode* head){\n\u00a0 \u00a0 struct ListNode* s = \n\u00a0 \u00a0 (struct ListNode*)malloc(sizeof(struct ListNode));\n\u00a0 \u00a0 s -&gt; next = head;\n\u00a0 \u00a0 head = s; //dummy node\n\u00a0 \u00a0 struct ListNode* fast, * slow;\n\u00a0 \u00a0 fast = head;\n\u00a0 \u00a0 slow = head;\n\u00a0 \u00a0 while (fast &amp;&amp; fast -&gt; next) {\n\u00a0 \u00a0 \u00a0 \u00a0 fast = fast -&gt; next -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 slow = slow -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 if (fast == NULL) {\n\u00a0 \u00a0 \u00a0 \u00a0 return slow;\n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 return slow -&gt; next;\n\u00a0 \u00a0 }\n}\n</code></pre></p> <p>\u4e0b\u9762\u7ed9\u51fa\u4e0d\u542bdummy node\u7684\u94fe\u8868\u7684findmid\u64cd\u4f5c, \u53ef\u4ee5\u7701\u7565\u6761\u4ef6\u5224\u65ad\u8bed\u53e5</p> C<pre><code>struct ListNode findmidnode(struct ListNode* head) {\n\u00a0 \u00a0 struct ListNode* slow, * fast;\n\u00a0 \u00a0 slow = head;\n\u00a0 \u00a0 fast = head;\n\u00a0 \u00a0 while (fast &amp;&amp; fast -&gt; next) {\n\u00a0 \u00a0 \u00a0 \u00a0 fast = fast -&gt; next -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 slow = slow -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 retrun slow;\n}\n</code></pre>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#143","title":"\u91cd\u6392\u94fe\u8868 143","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#21","title":"\u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868 21","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_7","title":"\u6211\u7684\u60f3\u6cd5","text":"C<pre><code>struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){\n\u00a0 \u00a0 struct ListNode* head1 =\n\u00a0 \u00a0 (struct ListNode*)malloc(sizeof(struct ListNode));\n\u00a0 \u00a0 struct ListNode* head2 = \n\u00a0 \u00a0 (struct ListNode*)malloc(sizeof(struct ListNode));\n\u00a0 \u00a0 head1 -&gt; next = list1; //list1dummy node\n\u00a0 \u00a0 head2 -&gt; next = list2; //list2dummy node\n\u00a0 \u00a0 struct ListNode* nxt; //\u540e\u7ee7\n\u00a0 \u00a0 struct ListNode* ans = \n\u00a0 \u00a0 (struct ListNode*)malloc(sizeof(struct ListNode));\n\u00a0 \u00a0 ans -&gt; next = NULL; //\u7b54\u6848\u94fe\u8868dummy node\n\u00a0 \u00a0 struct ListNode* p = ans; //\u5c3e\u6307\u9488\n\u00a0 \u00a0 while (list1 &amp;&amp; list2) {\n\u00a0 \u00a0 \u00a0 \u00a0 if (list1 -&gt; val &lt;= list2 -&gt; val) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nxt = list1 -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 head1 -&gt; next = nxt;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 list1 -&gt; next = NULL;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p -&gt; next = list1;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p = p -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 list1 = nxt;\n\u00a0 \u00a0 \u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 nxt = list2 -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 head2 -&gt; next = nxt;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 list2 -&gt; next = NULL;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p -&gt; next = list2;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 p = p -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 list2 = nxt;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 }\n\u00a0 \u00a0 if (list1) {\n\u00a0 \u00a0 \u00a0 \u00a0 p -&gt; next = list1;\n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 p -&gt; next = list2;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return ans -&gt; next;\n}\n</code></pre>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_8","title":"\u9012\u5f52\u5b9e\u73b0","text":"<p>\u539f\u7406\u5982\u4e0b\uff1a</p> <p></p> <p>C<pre><code>struct ListNode* mergeTwoLists(struct ListNode* list1, struct ListNode* list2){\n\u00a0 \u00a0 if (list1 == NULL) return list2;\n\u00a0 \u00a0 else if (list2 == NULL) return list1; //\u7ec8\u6b62\u6761\u4ef6\uff0c\u4e00\u8fb9\u4e3a\u7a7a\n\u00a0 \u00a0 else if (list1 -&gt; val &lt; list2 -&gt; val) {\n\u00a0 \u00a0 \u00a0 \u00a0 list1 -&gt; next = mergeTwoLists(list1 -&gt; next, list2);\n\u00a0 \u00a0 \u00a0 \u00a0 return list1;\n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 list2 -&gt; next = mergeTwoLists(list1, list2 -&gt; next);\n\u00a0 \u00a0 \u00a0 \u00a0 return list2;\n\u00a0 \u00a0 }\n}\n</code></pre> \u4e3b\u8981\u60f3\u6e05\u695a\u51e0\u70b9\u95ee\u9898\u5c31\u884c\u4e86 1. \u8fd9\u4e2a\u95ee\u9898\u7684\u5b50\u95ee\u9898\u662f\u4ec0\u4e48 2. \u5f53\u524d\u5c42\u8981\u5e72\u4ec0\u4e48\u4e8b\u60c5 3. \u9012\u5f52\u51fa\u53e3</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#147-148","title":"\u6392\u5e8f\u94fe\u8868 147 148","text":"<p>\u5728147\u4e2d, \u5b9e\u73b0\u4e86\u4f7f\u7528\u63d2\u5165\u6392\u5e8f\u5bf9\u94fe\u8868\u8fdb\u884c\u6392\u5e8f\u7684\u64cd\u4f5c, \u5176\u57fa\u672c\u601d\u8def\u4e0e\u63d2\u5165\u6392\u5e8f\u76f8\u540c, \u5b9e\u73b0\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u4e3ao(\\(n^2\\)), \u5728\u505a\u9898\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u4e86\u4e00\u4e2a\u5c0f\u95ee\u9898, \u7531\u4e8e\u5bf9\u4e8e\u5faa\u73af\u51fa\u53e3\u7684\u9519\u8bef\u5224\u65ad\u5bfc\u81f4\u4e0d\u5b8c\u5168\u6392\u5e8f</p> <p>148\u5728147\u7684\u57fa\u7840\u4e0a\u5bf9\u65f6\u95f4\u590d\u6742\u5ea6\u505a\u4e86\u8fdb\u4e00\u6b65\u8981\u6c42(o(\\(nlogn\\))), \u8be5\u65f6\u95f4\u590d\u6742\u5ea6\u4e0b\u7684\u6392\u5e8f\u7b97\u6cd5\u5305\u62ec\u5f52\u5e76\u6392\u5e8f, \u5806\u6392\u5e8f\u548c\u5feb\u901f\u6392\u5e8f, \u5176\u4e2d\u6700\u9002\u7528\u4e8e\u94fe\u8868\u7684\u662f\u5f52\u5e76\u6392\u5e8f</p> <p>\u5f52\u5e76\u6392\u5e8f\u57fa\u4e8e\u5206\u6cbb\u7b97\u6cd5, \u6700\u5bb9\u6613\u60f3\u5230\u7684\u5b9e\u73b0\u65b9\u5f0f\u662f\u81ea\u9876\u5411\u4e0b\u7684\u9012\u5f52\u5b9e\u73b0\uff0c\u8003\u8651\u5230\u9012\u5f52\u8c03\u7528\u7684\u6808\u7a7a\u95f4, \u81ea\u9876\u5411\u4e0b\u5f52\u5e76\u6392\u5e8f\u7684\u7a7a\u95f4\u590d\u6742\u5ea6\u662f \\(O(log\u2061n)\\), \u5982\u679c\u8981\u8fbe\\(O(1)\\) \u7684\u7a7a\u95f4\u590d\u6742\u5ea6, \u5219\u9700\u8981\u4f7f\u7528\u81ea\u5e95\u5411\u4e0a\u7684\u5b9e\u73b0\u65b9\u5f0f</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_9","title":"\u81ea\u9876\u5411\u4e0b\u7684\u5f52\u5e76\u6392\u5e8f","text":"<p>\u4ee3\u7801\u5b9e\u73b0 C<pre><code>struct ListNode* merge(struct ListNode* list1, struct ListNode* list2) {\n\u00a0 \u00a0 if (list1 == NULL) return list2;\n\u00a0 \u00a0 else if (list2 == NULL) return list1;\n\u00a0 \u00a0 else if (list1 -&gt; val &lt; list2 -&gt; val) {\n\u00a0 \u00a0 \u00a0 \u00a0 list1 -&gt; next = merge(list1 -&gt; next, list2);\n\u00a0 \u00a0 \u00a0 \u00a0 return list1;\n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 list2 -&gt; next = merge(list1, list2 -&gt; next);\n\u00a0 \u00a0 \u00a0 \u00a0 return list2;\n\u00a0 \u00a0 }\n}\nstruct ListNode* sortListfunc(struct ListNode* head, struct ListNode* tail) {\n\u00a0 \u00a0 if (head == NULL) {\n\u00a0 \u00a0 \u00a0 \u00a0 return head;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 if (head -&gt; next == tail) {\n\u00a0 \u00a0 \u00a0 \u00a0 head -&gt; next = NULL; //\u65b9\u4fbf\u540e\u7eedmerge\u64cd\u4f5c\n\u00a0 \u00a0 \u00a0 \u00a0 return head;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 struct ListNode* slow, * fast;\n\u00a0 \u00a0 slow = head; fast = head;\n\u00a0 \u00a0 while (fast != tail &amp;&amp; fast) {\n\u00a0 \u00a0 \u00a0 \u00a0 slow = slow -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 fast = fast -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 if (fast != tail &amp;&amp; fast) fast = fast -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 struct ListNode* mid = slow;\n\u00a0 \u00a0 return merge(sortListfunc(head, mid), sortListfunc(mid, tail));\n}\nstruct ListNode* sortList(struct ListNode* head) {\n\u00a0 \u00a0 return sortListfunc(head, NULL);\n}\n</code></pre></p> <ol> <li> <p>\u627e\u5230\u94fe\u8868\u7684\u4e2d\u70b9\uff0c\u4ee5\u4e2d\u70b9\u4e3a\u5206\u754c\uff0c\u5c06\u94fe\u8868\u62c6\u5206\u6210\u4e24\u4e2a\u5b50\u94fe\u8868\u3002\u5bfb\u627e\u94fe\u8868\u7684\u4e2d\u70b9\u53ef\u4ee5\u4f7f\u7528\u5feb\u6162\u6307\u9488\u7684\u505a\u6cd5\uff0c\u5feb\u6307\u9488\u6bcf\u6b21\u79fb\u52a8 2 \u6b65\uff0c\u6162\u6307\u9488\u6bcf\u6b21\u79fb\u52a8 1 \u6b65\uff0c\u5f53\u5feb\u6307\u9488\u5230\u8fbe\u94fe\u8868\u672b\u5c3e\u65f6\u6162\u6307\u9488\u6307\u5411\u7684\u94fe\u8868\u8282\u70b9\u5373\u4e3a\u94fe\u8868\u7684\u4e2d\u70b9</p> </li> <li> <p>\u5bf9\u4e24\u4e2a\u5b50\u94fe\u8868\u5206\u522b\u6392\u5e8f</p> </li> <li> <p>\u5c06\u4e24\u4e2a\u6392\u5e8f\u540e\u7684\u5b50\u94fe\u8868\u5408\u5e76\uff0c\u5f97\u5230\u5b8c\u6574\u7684\u6392\u5e8f\u540e\u7684\u94fe\u8868\u3002\u53ef\u4ee5\u4f7f\u7528\u300c21. \u5408\u5e76\u4e24\u4e2a\u6709\u5e8f\u94fe\u8868\u300d\u7684\u505a\u6cd5\uff0c\u5c06\u4e24\u4e2a\u6709\u5e8f\u7684\u5b50\u94fe\u8868\u8fdb\u884c\u5408\u5e76</p> </li> </ol>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#160","title":"\u76f8\u4ea4\u94fe\u8868 160","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_10","title":"\u4ec0\u4e48\u662f\u54c8\u5e0c\u8868","text":"<p>\u54c8\u5e0c\u8868, \u53c8\u79f0\u4e3a\u6563\u5217\u8868, \u662f\u6570\u636e\u5b58\u50a8\u4e0e\u67e5\u627e\u7684\u4e00\u79cd\u5b9e\u73b0\u65b9\u6cd5</p> <p>\u6563\u5217\u6280\u672f\u662f\u5728\u8bb0\u5f55\u7684\u5b58\u50a8\u4f4d\u7f6e\u548c\u5b83\u7684\u5173\u952e\u5b57\u4e4b\u95f4\u5efa\u7acb\u4e00\u4e2a\u786e\u5b9a\u7684\u5bf9\u5e94\u5173\u7cfb f \u4f7f\u5f97\u6bcf\u4e2a\u5173\u952e\u5b57 key \u5bf9\u5e94\u4e00\u4e2a\u5b58\u50a8\u4f4d\u7f6e \\(f(key)\\).\u00a0\u67e5\u627e\u65f6, \u6839\u636e\u8fd9\u4e2a\u786e\u5b9a\u7684\u5173\u7cfb\u627e\u5230\u7ed9\u5b9a\u503c key \u7684\u6620\u5c04 \\(f(key)\\), \u82e5\u67e5\u627e\u96c6\u5408\u4e2d\u5b58\u5728\u8fd9\u4e2a\u8bb0\u5f55, \u5219\u5fc5\u5b9a\u5728 f(key)\u4f4d\u7f6e\u4e0a</p> <p>\u6211\u4eec\u628a\u8fd9\u79cd\u5bf9\u5e94\u5173\u7cfb\u79f0\u4e3a\u54c8\u5e0c\u51fd\u6570,  \u5c06\u91c7\u7528\u6563\u5217\u6280\u672f\u5b58\u50a8\u8bb0\u5f55\u7684\u4e00\u5757\u8fde\u7eed\u7684\u5b58\u50a8\u7a7a\u95f4\u79f0\u4e3a\u54c8\u5e0c\u8868, \u5173\u952e\u5b57\u5bf9\u5e94\u7684\u8bb0\u5f55\u5b58\u50a8\u4f4d\u7f6e\u79f0\u4e3a\u6563\u5217\u5730\u5740, \u54c8\u5e0c\u8868\u662f\u9762\u5411\u67e5\u627e\u7684\u5b58\u50a8\u7ed3\u6784</p> <p>\u6570\u636e\u7ecf\u8fc7\u54c8\u5e0c\u6620\u5c04\u5f97\u51fa\u7684\u5b58\u5165\u5730\u5740\u53ef\u80fd\u5df2\u7ecf\u5b58\u6709\u6570\u636e, \u8fd9\u79cd\u60c5\u51b5\u6211\u4eec\u79f0\u4e3a\u54c8\u5e0c\u51b2\u7a81, \u89e3\u51b3\u65b9\u6cd5\u6709\u5f00\u653e\u5b9a\u5740\u6cd5, \u518d\u6563\u5217\u51fd\u6570\u6cd5, \u94fe\u5730\u5740\u6cd5, \u516c\u5171\u6ea2\u51fa\u533a\u6cd5, \u8be6\u7ec6\u7684\u5185\u5bb9\u4ee5\u540e\u518d\u8ba8\u8bba</p> <p>\u5728\u67e5\u627e\u65f6\uff0c\u5bf9\u7ed9\u5b9a\u503c\u901a\u8fc7\u6563\u5217\u51fd\u6570\u8ba1\u7b97\u51fa\u6563\u5217\u5730\u5740\u540e\uff0c\u5148\u4e0e\u57fa\u672c\u8868\u7684\u76f8\u5e94\u4f4d\u7f6e\u8fdb\u884c\u6bd4\u5bf9\uff0c\u5982\u679c\u76f8\u7b49\uff0c\u5219\u67e5\u627e\u6210\u529f\uff1b\u5982\u679c\u4e0d\u76f8\u7b49\uff0c\u5219\u5230\u6ea2\u51fa\u8868\u53bb\u8fdb\u884c\u987a\u5e8f\u67e5\u627e\u3002\u5982\u679c\u76f8\u5bf9\u4e8e\u57fa\u672c\u8868\u800c\u8a00\uff0c\u6709\u51b2\u7a81\u7684\u6570\u636e\u5f88\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u516c\u5171\u6ea2\u51fa\u533a\u7684\u7ed3\u6784\u5bf9\u67e5\u627e\u6027\u80fd\u6765\u8bf4\u8fd8\u662f\u975e\u5e38\u9ad8\u7684</p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_11","title":"\u9898\u89e3","text":""},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_12","title":"\u6211\u7684\u60f3\u6cd5","text":"<p>\u4e8c\u91cd\u904d\u5386, \u5bf9\u4e8eA\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7ed3\u70b9, \u904d\u5386B\u8868\u7ed3\u70b9, \u82e5\u6709\u76f8\u540c\u5373\u4f4d\u4e24\u8868\u4ea4\u70b9 \u4ee3\u7801\u5b9e\u73b0 C<pre><code>struct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {\n\u00a0 \u00a0 while (headA) {\n\u00a0 \u00a0 \u00a0 \u00a0 for (struct ListNode* p = headB; p != NULL; p = p -&gt; next) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 if (headA == p) return headA;\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 headA = headA -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return NULL;\n}\n</code></pre></p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_13","title":"\u54c8\u5e0c\u96c6\u5408","text":"<p>\u54c8\u5e0c\u8868\u7684c\u8bed\u8a00\u5b9e\u73b0\u8be6\u89c1\u4e0b\u6587 [[\u2308C\u230b\u54c8\u5e0c\u8868UT_hash_handle\u2014\u2014\u5982\u4f55\u5c06\u7ed3\u6784\u4f53\u7c7b\u578b\u4f5c\u4e3akey-CSDN\u535a\u5ba2]] \u4ee3\u7801\u5b9e\u73b0 C<pre><code>struct HashTable {\n\u00a0 \u00a0 struct ListNode* key;\n\u00a0 \u00a0 UT_hash_handle hh; //\u7406\u89e3\u4e3a\u56fa\u5b9a\u53c2\u6570\n};\nstruct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {\n\u00a0 \u00a0 struct HashTable* hashTable = NULL; //\u54c8\u5e0c\u8868\u6307\u9488\n\u00a0 \u00a0 struct ListNode* temp = headA;\n\u00a0 \u00a0 while (temp != NULL) {\n\u00a0 \u00a0 \u00a0 \u00a0 struct HashTable* tmp; //\u6307\u5411\u65b0\u521b\u5efa\u7684\u952e\u503c\u5bf9\n\u00a0 \u00a0 \u00a0 \u00a0 HASH_FIND(hh, hashTable, &amp;temp, sizeof(struct HashTable*), tmp);\n\u00a0 \u00a0 \u00a0 \u00a0 if (tmp == NULL) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tmp = malloc(sizeof(struct HashTable));\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 tmp -&gt; key = temp;\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 HASH_ADD(hh, hashTable, key, sizeof(struct HashTable*), tmp);\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 temp = temp -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 //\u5230\u8fd9\u91cc\uff0c\u5df2\u7ecf\u5c06headA\u4e2d\u7684\u6240\u6709\u7ed3\u70b9\u7684\u5b58\u50a8\u4f4d\u7f6e\u6620\u5c04\u5728\u4e86\u54c8\u5e0c\u8868\u91cc\n\u00a0 \u00a0 temp = headB;\n\u00a0 \u00a0 while (temp != NULL) {\n\u00a0 \u00a0 \u00a0 \u00a0 struct HashTable *tmp;\n\u00a0 \u00a0 \u00a0 \u00a0 HASH_FIND(hh, hashTable, &amp;temp, sizeof(struct HashTable*), tmp);\n\u00a0 \u00a0 \u00a0 \u00a0 if (tmp != NULL) {\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 return temp; //temp\u7ed3\u70b9\u5728\u54c8\u5e0c\u8868\u4e2d\u88ab\u627e\u5230\uff0c\u5373\u4e3a\u516c\u5171\u7ed3\u70b9\n\u00a0 \u00a0 \u00a0 \u00a0 }\n\u00a0 \u00a0 \u00a0 \u00a0 temp = temp -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return NULL;\n}\n</code></pre></p>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#_14","title":"\u53cc\u6307\u9488","text":"C<pre><code>//\u6211\u7684\u4ee3\u7801\nstruct ListNode* getNode(struct ListNode* headA, struct ListNode* headB) {\n    struct ListNode* ptrl1, ptrl2;\n    ptrl1 = headA;\n    ptrl2 = headB;\n    while (ptrl1 != ptrl2) {\n        if (ptrl1) {\n            ptrl1 = ptrl1 -&gt; next;\n        } else {\n            ptrl1 = headB;\n        }\n        if (ptrl2) {\n            ptrl2 = ptrl2 -&gt; next;\n        } else {\n            ptrl2 = headB;\n        }\n    }\n    return ptrl1;\n}\n//\u9898\u89e3\u4ee3\u7801\nstruct ListNode *getIntersectionNode(struct ListNode *headA, struct ListNode *headB) {\n\u00a0 \u00a0 struct ListNode* ptrl1, * ptrl2;\n\u00a0 \u00a0 ptrl1 = headA;\n\u00a0 \u00a0 ptrl2 = headB;\n\u00a0 \u00a0 while (ptrl1 != ptrl2) {\n\u00a0 \u00a0 \u00a0 \u00a0 ptrl1 = ptrl1 == NULL? headB : ptrl1 -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 ptrl2 = ptrl2 == NULL? headA : ptrl2 -&gt; next;\n\u00a0 \u00a0 }\n\u00a0 \u00a0 return ptrl1;\n}\n</code></pre>"},{"location":"Leetcode/note/%E9%93%BE%E8%A1%A8/#203","title":"\u79fb\u9664\u94fe\u8868\u5143\u7d20 203","text":"<p>\u672c\u9898\u8f83\u4e3a\u7b80\u5355, \u6545\u7528\u4f5c\u9012\u5f52\u7684\u7ec3\u4e60</p> <p>\u6211\u7684\u4ee3\u7801 C<pre><code>void deletenode(struct ListNode* head, int val) {\n\u00a0 \u00a0 if (head == NULL) return ;\n\u00a0 \u00a0 if (head -&gt; next &amp;&amp; head -&gt; next -&gt; val == val) {\n\u00a0 \u00a0 \u00a0 \u00a0 struct ListNode* s = head -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 head -&gt; next = s -&gt; next;\n\u00a0 \u00a0 \u00a0 \u00a0 free(s);\n\u00a0 \u00a0 \u00a0 \u00a0 deletenode(head, val);\n\u00a0 \u00a0 } else {\n\u00a0 \u00a0 \u00a0 \u00a0 deletenode(head -&gt; next, val);\n\u00a0 \u00a0 }\n}\nstruct ListNode* removeElements(struct ListNode* head, int val) {\n\u00a0 \u00a0 struct ListNode* dummynode = (struct ListNode*)malloc(sizeof(struct ListNode));\n\u00a0 \u00a0 dummynode -&gt; next = head;\n\u00a0 \u00a0 deletenode(dummynode, val);\n\u00a0 \u00a0 return dummynode -&gt; next;\n}\n</code></pre></p> <p>\u9012\u5f52\u4e09\u95ee</p> <ol> <li> <p>\u8fd9\u4e2a\u95ee\u9898\u7684\u5b50\u95ee\u9898\u662f\u4ec0\u4e48     \u5411\u540e\u5220\u9664\u94fe\u8868, \u4e0d\u65ad\u5224\u65ad\u5f53\u524d\u7ed3\u70b9\u662f\u5426\u79fb\u9664</p> </li> <li> <p>\u5f53\u524d\u5c42\u8981\u5e72\u4ec0\u4e48     \u65e0\u975e\u5c31\u662f\u4e24\u4ef6\u4e8b, \u5220\u6216\u4e0d\u5220, \u5982\u679c\u524d\u9a71\u7684next -&gt; val == val, \u9700\u8981\u79fb\u9664, \u82e5\u4e0d\u662f\u5219\u66f4\u65b0\u524d\u9a71\u7ee7\u7eed\u5bfb\u627e. \u6211\u7684\u7a0b\u5e8f\u95ee\u9898\u51fa\u73b0\u5728\u5220\u9664\u8fd9\u4e00\u6b65, \u9700\u8981\u6ce8\u610f\u7684\u662f, \u5220\u9664\u540e\u7ee7\u7ed3\u70b9\u540e, \u76f8\u5f53\u4e8e\u66f4\u65b0\u4e86\u5f53\u524d\u7ed3\u70b9\u7684\u540e\u7ee7\u7ed3\u70b9, \u800c\u8fd9\u4e2a\u540e\u7ee7\u7ed3\u70b9\u662f\u672a\u7ecf\u8fc7\u7a0b\u5e8f\u5224\u65ad\u7684, \u6240\u4ee5, \u5728\u4e0b\u4e00\u5c42\u9012\u5f52\u4e2d, \u5f53\u524d\u8bbf\u95ee\u7684\u524d\u9a71\u7ed3\u70b9\u4e0d\u80fd\u66f4\u65b0, \u5426\u5219\u4f1a\u5bfc\u81f4\u6f0f\u5224</p> </li> <li> <p>\u7a0b\u5e8f\u7ec8\u6b62\u7684\u51fa\u53e3\u662f\u4ec0\u4e48     \u7531\u4e8e\u672c\u9898\u662f\u79fb\u9664\u94fe\u8868\u5143\u7d20, \u6545\u9700\u8981\u5173\u6ce8\u5f53\u524d\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9, \u5728\u51fd\u6570\u4e2d,\u9009\u62e9\u7528\u5f53\u524d\u7ed3\u70b9\u7684\u524d\u9a71\u7ed3\u70b9\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570, \u5f53\u524d\u9a71\u7ed3\u70b9\u7684\u540e\u7ee7\u4e3a\u7a7a\u65f6, \u8bf4\u660e\u94fe\u8868\u904d\u5386\u5220\u9664\u5df2\u7ecf\u7ed3\u675f,  \u9012\u5f52\u5e94\u5f53\u7ed3\u675f\u6267\u884c</p> </li> </ol>"},{"location":"Paper/","title":"Read Paper","text":"<p>\u5728\u8fd9\u4e2a\u76ee\u5f55\uff0c\u6211\u5c06\u4e0a\u4f20\u6211\u5728\u8bba\u6587\u9605\u8bfb\u4e2d\u6240\u505a\u7684\u4e00\u4e9b\u8bb0\u5f55</p>"},{"location":"Paper/GANs/","title":"Generative Adversarial Nets","text":""},{"location":"Paper/GANs/content/","title":"\u4f60\u6765\u5230\u4e86\u6ca1\u6709\u77e5\u8bc6\u7684\u8352\u539fQAQ","text":""},{"location":"Paper/Transformer/","title":"Attention is All You Need","text":""},{"location":"Paper/Transformer/content/","title":"\u4f60\u6765\u5230\u4e86\u6ca1\u6709\u77e5\u8bc6\u7684\u8352\u539fQAQ","text":""},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2024/04/24/2024-04-24/","title":"2024.4.24 Summary","text":"<p>Today, I finished installing the Virtual machine with Ubuntu22.04 in my computer.</p> <p>Tried to change mirror source sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup backup my sources list in sources.list_backup</p> <p>when i use <code>wget + url</code> to fetch the pack of anaconda3 in a shell, i failed with an error Proxy request sent, awaiting response... 403 Forbidden 2024-04-24 21:27:34 ERROR 403: Forbidden. i tried to replace the source list with Tsinghua Source mirror, but it didn't work out finally i managed to install anaconda3 by using the following command: <code>wget --user-agent=\"Mozilla\" + url</code> due to the server will reject an user proxy which is not begin with Mozilla or not including Wget.</p> <p>my anaconda3 position: /home/mingkun/anaconda3</p>","tags":["linux"]},{"location":"blog/2024/04/27/2024-04-27/","title":"2024.4.27 Summary","text":"<p>Paper read:</p> <ol> <li>Generative Adversial Nets(GANs)</li> <li>Coming Down to Earth(Geo-localization) [uncompleted]</li> </ol> <p>Code Practice:</p> <ol> <li>FreeCodeCamp -- Python Scientific Computation     Episode1 completed(String Manipulation)</li> </ol>","tags":["paper","coding"]},{"location":"blog/2024/04/28/2024-04-28/","title":"2024.4.28 Summary","text":"<p>Zero progress in Paper reading, which is not good.</p> <p>I should and i will give up playing games tomorrow, and focus myself more in study.</p> <p>I start my learning at kaggle platform, which will be beneficial for my data science study, i think, and i have finished several couses of MachineLearning for beginers.</p> <p>I also complete my learning at FreeCodeCamp Chapter two, which is also about string manipulation, i learned some useful skills.</p> <p>Tomorrow is a new day, since i have determined to be a better person, than i should be more devoted in my study!</p> <p>I hope everything going well tomorrow.</p>","tags":["paper","coding"]},{"location":"blog/2024/05/03/2024-05-03/","title":"2024.5.3 Summary","text":"<p>I temporarily finished building my website. It is really fullfilling for me to look back and see how I gradually completed the construction of my website, espacially start from zero basis.</p> <p>However, I'm still confuse whether it was a good choice to spend two days on building such website. I should get rid of that thought, and focus on how i can make full use of this web!</p> <p>This days I spare myself from the burden of study, and really have fun with my friends in games. But with the final exam approaching, I should put more attention on learning. What's more, make sure at least read one paper a day.</p> <p>Finally, I received a very good news this morning, which is our team had won the Meritorious winner at ICM contest, I believe my joy was more than anyone can imagine.</p> <p>May I continue to give myself the joy of success in continuing to ascend like this, and wish me good luck tomorrow and everyday!</p>","tags":["web","work"]},{"location":"blog/2024/05/05/2024ACMSummary/","title":"2024ACM\u6821\u8d5b\u7f51\u7edc\u8d5b\u603b\u7ed3","text":"<p>\u867d\u7136\u65e9\u6709\u53c2\u52a0\u6bd4\u8d5b\u7684\u60f3\u6cd5\uff0c\u4f46\u4e5f\u4e00\u53ea\u6ca1\u6709\u523b\u610f\u7684\u53bb\u505a\u9898\u8bad\u7ec3\uff0c\u5c24\u5176\u662f\u4ece2024\u5e74\u521d\u5230\u73b0\u5728\u4e00\u76f4\u5728\u5b66\u4e60\u6df1\u5ea6\u5b66\u4e60\u76f8\u5173\uff0c\u63a5\u89e6C/C++\u7684\u65f6\u95f4\u81ea\u7136\u5927\u5927\u51cf\u5c11\uff0c\u73b0\u5728\u60f3\u60f3\u53bb\u5e74\u7adf\u7136\u80fd\u5b8c\u6210\u5230\u6301\u7eed\u8fd1\u4e24\u4e2a\u6708\u7684\u529b\u6263\u767e\u9898\u8ba1\u5212\uff0c\u4e0d\u7981\u611f\u53f9\u771f\u7684\u662f\u4e00\u5929\u4e0d\u5199\u624b\u751f\uff0c\u4e09\u4e2a\u6708\u4e0d\u5199\u964c\u751f\u554a\uff08\u7b11\uff09\uff0c\u867d\u7136\u7ed3\u679c\u4e0d\u548b\u6837\uff0c\u4f46\u8fd8\u662f\u672c\u7740\u8bb0\u5f55\u751f\u6d3b\u7684\u5fc3\u6001\uff0c\u505a\u4e00\u70b9\u5c0f\u5c0f\u7684\u603b\u7ed3\u5427\u3002</p> <p>\u5176\u5b9e\u672c\u6765\u5e94\u8be5\u80fd\u62ff\u5230\u6bd4\u8f83\u9760\u524d\u7684\u540d\u6b21\uff0c\u4e0d\u8fc7\u7531\u4e8e\u81ea\u5df1\u6ca1\u6709ACM\u7ecf\u5386\uff0c\u751a\u81f3\u8fde\u8d5b\u5236\u90fd\u4e0d\u719f\u6089\uff0c\u539f\u4ee5\u4e3a\u7f51\u7edc\u8d5b\u662f\u5728\u81ea\u5df1\u786e\u8ba4\u53c2\u8d5b\u7684\u65f6\u5019\u624d\u5f00\u59cb\u8ba1\u65f6\uff0c\u7ed3\u679c\u53d1\u89c9\u6bd4\u8d5b\u91c7\u53d6\u7edf\u4e00\u65f6\u949f\u8ba1\u65f6\u7684\u65f6\u5019\u6bd4\u8d5b\u5df2\u7ecf\u8fc7\u53bb\u4e5d\u5341\u4e2a\u5c0f\u65f6\u4e86\uff0c\u867d\u7136\u4e5f\u7b97\u6bd4\u8f83\u5feb\u5730\u505a\u5b8c\u4e86\u524d\u4e24\u9053\u7b7e\u5230\u9898A\u3001B\uff0c\u4e5f\u7406\u6240\u5e94\u5f53\u5730\u6392\u5728\u4e86\u5b8c\u6210\u4e24\u9898\u7684\u961f\u5217\u7684\u5c3e\u7aef\uff0c\u4ee5\u53ca\u867d\u7136\u5728C\u4e0eD\u4e0a\u90fd\u505a\u4e86\u8bb8\u591a\u5c1d\u8bd5\uff0c\u4f46\u6700\u7ec8\u8fd8\u662f\u4ee5\u5931\u8d25\u544a\u7ec8\uff0c\u6bd5\u7adf\u672c\u6765\u4e5f\u6ca1\u6709\u505a\u8fc7\u523b\u610f\u7684\u7b97\u6cd5\u8bad\u7ec3\uff0c\u505a\u6210\u8fd9\u6837\u4e5f\u7b97\u662f\u5728\u60c5\u7406\u4e4b\u4e2d\u5427\uff08\u7b11\uff09\u3002</p> <p>\u4e0b\u9762\u5c31\u5bf9\u6211\u7684\u601d\u8def\u548c\u4ee3\u7801\u505a\u4e00\u4e9b\u590d\u76d8\u5427\uff0c\u6709\u95ee\u9898\u7684\u4ee3\u7801\u6211\u4e5f\u8d34\u51fa\u6765\uff0c\u4e07\u4e00\u65e5\u540e\u5927\u6210\uff0c\u56de\u6765\u770b\u770b\u6ca1\u51c6\u5c31\u6e05\u6670\u900f\u5f7b\u4e86\u5462\uff08\u81ea\u5632\uff09\u3002</p>","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#problem-aac","title":"Problem A\uff08AC\uff09","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_1","title":"\u9898\u5e72","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_2","title":"\u6211\u7684\u601d\u8def","text":"<p>\u4e00\u5f00\u59cbWA\u4e86\u4e00\u4e2a\u63d0\u4ea4\uff0c\u56e0\u4e3a\u628a\u9898\u76ee\u7406\u89e3\u9519\u4e86\uff0c\u4ee5\u53ca\u771f\u7684\u771f\u7684\u771f\u7684\u5bf9ACM\u8d5b\u5236\u4e00\u65e0\u6240\u77e5\uff0c\u5728\u5bf9\u4e24\u4e2a\u9009\u624b\u505a\u51fa\u540c\u4e00\u9053\u9898\u7684\u5f97\u5206\u5224\u65ad\u4e2d\uff0c\u6211\u8bef\u5c06\u5b8c\u6210\u8be5\u9898\u7684\u7528\u65f6\u4f5c\u4e3a\u5224\u65ad\u4f9d\u636e\uff0c\u4e5f\u7406\u6240\u5e94\u5f53\u5730\u51fa\u5e08\u4e0d\u5229\u4e86\uff0c\u5176\u5b9e\u629b\u5f00\u6545\u4e8b\u5316\u7684\u9898\u76ee\u573a\u666f\u4e0d\u8c08\uff0c\u5e94\u8be5\u4f1a\u5199for\u5faa\u73af\u548cif-else\u8bed\u53e5\u7684\u90fd\u53ef\u4ee5\u8f7b\u677e\u901a\u8fc7\u3002</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main() {\n    int a[3];\n    int b[3];\n    for (int i = 0; i &lt; 3; i ++) {\n        cin &gt;&gt; a[i];\n    }\n    for (int j = 0; j &lt; 3; j ++) {\n        cin &gt;&gt; b[j];\n    }\n    int cnt1 = 0, cnt2 = 0;\n    for (int i = 0; i &lt; 3; i ++) {\n        if (a[i] == -1) {\n            cnt2 ++;\n        } else if (b[i] == -1) {\n            cnt1 ++;\n        } else if (a[i] &lt; b[i]) {\n            cnt1 ++;\n        } else {\n            cnt2 ++;\n        }\n    }\n    if (cnt1 &gt; cnt2) cout &lt;&lt; \"Rin\" &lt;&lt; endl;\n    else cout &lt;&lt; \"Miku\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u6709\u4e00\u79cd\u4e0d\u7ecf\u8fc7\u5927\u8111\u601d\u8003\u7684\u7f8e\uff0c\u5355\u7eaf\u7684\u5f00\u4e86\u4e24\u4e2a\u6570\u7ec4\u8bb0\u5f55\u7528\u65f6\uff0c\u4e24\u4e2a\u8ba1\u6570\u5668\u8bb0\u5f55\u5f97\u5206\uff0c\u7136\u540e\u6254\u8fdbfor\u5faa\u73af\u91cc\u505a\u6761\u4ef6\u5224\u65ad\uff0c\u5bf9\u4e8e\u5f53\u524d\u9898\u76eei\uff0c\u5982\u679c\u4e00\u65b9\u672a\u505a\u51fa\uff08-1\uff09\uff0c\u5219\u53e6\u4e00\u65b9\u5f971\u5206\uff0c\u5982\u679c\u53cc\u65b9\u90fd\u505a\u51fa\u6765\uff0c\u6bd4\u8f83\u5f53\u524d\u603b\u82b1\u8d39\u65f6\u957f\uff0c\u7528\u65f6\u6700\u5c11\u7684\u9009\u624b\u5f971\u5206\uff0c\u6700\u540e\u6bd4\u8f83\u5f97\u5206\u8f93\u51fa\u7ed3\u679c\u3002</p>","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#problem-bac","title":"Problem B\uff08AC\uff09","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_3","title":"\u9898\u5e72","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_4","title":"\u6211\u7684\u601d\u8def","text":"<p>\u770b\u5230\u8fd9\u9898\u6211\u76f4\u63a5\u7b11\u4e86\uff0c\u7d27\u8ddf\u65f6\u4e8b\uff0c\u4e0d\u5f97\u4e0d\u8bf4\u4e50\u8dd1\u8fd9\u4e2a\u653f\u7b56\u786e\u5b9e\u6709\u4e0d\u5408\u7406\u4e4b\u5904\uff0c\u4e0d\u8fc7\u672c\u7740\u968f\u9047\u800c\u5b89\u7684\u6027\u683c\uff0c\u4e5f\u7b97\u662f\u80fd\u63a5\u53d7\uff0c\u81f3\u4e8e\u4ee3\u8dd1\uff0c\u672c\u4eba\u4e00\u5411\u4eb2\u529b\u4eb2\u4e3a\uff0c\u81ea\u7136\u662f\u4e0d\u53ef\u80fd\u627e\u6ef4\u3002</p> <p>\u5206\u6790\u9898\u76ee\uff0c\u672c\u9898\u96be\u5ea6\u4e5f\u4e0d\u9ad8\uff0c\u63a5\u53d7\u4e09\u4e2a\u8f93\u5165\uff0c\u5c0f\u77ee\u4eba\u7684\u6570\u91cf\u3001\u65f6\u523b\u6570\u91cf\u4ee5\u53ca\u5224\u5b9a\u4e3a\u4ee3\u8dd1\u7684\u65f6\u523b\u6570\uff0c\u5c31\u524d\u4e24\u4e2a\u53d8\u91cf\uff0c\u7acb\u523b\u60f3\u5230\u7528\u4e00\u4e2a\u4e8c\u7ef4\u6570\u7ec4\u6765\u5b58\u653e\uff0c\u884c\u4ee3\u8868\u5c0f\u77ee\u4eba\uff0c\u5217\u4ee3\u8868\u65f6\u523b\uff0c\u5224\u5b9a\u4e3a\u4ee3\u8dd1\u7684\u65f6\u523b\u6570\u662f\u4f5c\u4e3a\u5224\u5b9a\u6761\u4ef6\u7684\uff0c\u540e\u7eed\u653e\u8fdb\u6761\u4ef6\u5224\u65ad\u8bed\u53e5\u5c31\u884c\u3002</p> <p>\u90fd\u5199\u5230\u8fd9\u4e86\uff0c\u5f53\u65f6\u4e5f\u662f\u8fc7\u9898\u5fc3\u5207\uff0c\u4e5f\u662f\u76f4\u63a5\u4e0d\u8d39\u8111\u5b50\u5730\u5199\u4e86\u4e09\u91cd\u66b4\u529b\u5faa\u73af\uff0c\u73b0\u5728\u770b\u6765\u8fd8\u86ee\u540e\u6094\u7684\uff0c\u5e94\u8be5\u6709\u65f6\u95f4\u590d\u6742\u5ea6\u66f4\u597d\u7684\u89e3\u6cd5\u3002</p> <p>\u8981\u6c42\u51fa\u4ee3\u8dd1\u5c0f\u77ee\u4eba\u7684\u5bf9\u6570\uff0c\u81ea\u7136\u800c\u7136\u5c31\u60f3\u5230\u4e3a\u5176\u914d\u5bf9\uff0c\u907f\u514d\u91cd\u590d\u914d\u5bf9\u7684\u65b9\u6cd5\u5f88\u57fa\u7840\uff0c\u4e5f\u4e0d\u8bf4\u660e\u4e86\u3002\u914d\u5bf9\u540e\uff0c\u5bf9\u6b64\u5bf9\u6570\u636e\u505a\u5dee\uff0c\u914d\u901f\u76f8\u540c\u65f6\u523b\u8d85\u51fa\u4ee3\u8dd1\u9608\u503c\u7684\u89c6\u4e3a\u4ee3\u8dd1\u5acc\u7591\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\u3002\u5faa\u73af\u8d70\u5b8c\u540e\u8f93\u51fa\u7ed3\u679c\uff0c\u4e00\u904d\u901a\u8fc7\u3002</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\n\nint main() {\n    int n, m, k;\n    int data[105][105];\n    cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;\n    for (int i = 0; i &lt; n; i ++) {\n        for (int j = 0; j &lt; m; j ++) {\n            cin &gt;&gt; data[i][j];\n        }\n    }\n    int cnt = 0;\n    for (int i = 0; i &lt; n; i ++) {\n        for (int j = i + 1; j &lt; n; j ++) {\n            int cur = 0;\n            for (int idx = 0; idx &lt; m; idx ++) {\n                if (data[i][idx] - data[j][idx] == 0) {\n                    cur ++;\n                }\n            }\n            if (cur &gt;= k) cnt ++;\n        }\n    }\n    cout &lt;&lt; cnt &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u590d\u76d8\u6709\u611f: A, B\u4e24\u9898\u96be\u5ea6\u90fd\u4e0d\u5927\uff0c\u4f46\u6211\u662f\u600e\u4e48\u505a\u5230\u89e3\u6cd5\u91cc\u900f\u9732\u51fa\u4e00\u80a1\u6e05\u6f88\u7684\u611a\u8822\u7684)</p>","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#problem-c-wa","title":"Problem C (WA)","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_5","title":"\u9898\u5e72","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_6","title":"\u6211\u7684\u601d\u8def","text":"<p>\u554a\uff0c\u751f\u7269\uff0c\u9ad8\u8003\u8d4b\u520688\u7684\u573a\u666f\u5386\u5386\u5728\u76ee\u3002\u4f9d\u7a00\u8bb0\u5f97DNA\u53cc\u87ba\u65cb\u53ef\u4ee5\u7406\u89e3\u4e3a\u53cc\u5411\u5355\u87ba\u65cb\uff0c\u90a3\u4e48\u5e94\u8be5\u5b58\u5728\u4e00\u5b9a\u7684\u5bf9\u79f0\u6027\u624d\u5bf9\uff0c\u901a\u8fc7\u5bf9\u957f\u5ea6\u4e3a1\u30012\u30013\u7684DNA\u94fe\u8fdb\u884c\u679a\u4e3e\uff0c\u53d1\u73b0\u957f\u5ea6\u7684\u5947\u5076\u6027\u4e0d\u540c\uff0c\u679a\u4e3e\u7ed3\u679c\u7684\u5bf9\u79f0\u6027\u4e5f\u4e0d\u540c\uff0c\u6240\u4ee5\u5e94\u8be5\u5206\u5947\u5076\u60c5\u51b5\u8ba8\u8bba\u3002\u7531\u4e8e\u78b1\u57fa\u4e4b\u95f4\u5b58\u5728\u4e24\u4e24\u914d\u5bf9\u7684\u7279\u5f81\uff0c\u6240\u4ee5\u679a\u4e3e\u5355\u94fe\u5373\u53ef\u786e\u5b9a\u6574\u6761DNA\uff0c\u6211\u9009\u62e9\u4eceDNA\u76843'\u7aef\u54115'\u7aef\u679a\u4e3e\uff0c\u5229\u7528\u6392\u5217\u7ec4\u5408\u786e\u5b9a\u679a\u4e3e\u79cd\u7c7b\u6570\uff0c\u518d\u6839\u636e\u5947\u5076\u6027\u8fdb\u884c\u5bf9\u5e94\u7684\u53bb\u91cd\u64cd\u4f5c\u3002</p> <p>\u679a\u4e3e\u65b9\u6cd5\uff1a \\(Num_{result} = (C^{1}_{2\u00d7m})^n\\)</p> <p>\u6ce8\u610f\u5230\u5947\u6570\u957f\u5ea6DNA\u7684\u679a\u4e3e\u7ed3\u679c\u4e2d\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u679a\u4e3e\u5355\u94fe\uff0c\u4e00\u5b9a\u5b58\u5728\u4e00\u4e2a\u4e0e\u5176\u53cd\u5411\u4e92\u8865\u7684\u5355\u94fe\uff0c\u6240\u4ee5\u76f4\u63a5\u5c06\u5947\u6570\u957f\u5ea6\u7684DNA\u9664\u4ee52\u5b8c\u6210\u53bb\u91cd\u3002\u5076\u6570\u957f\u5ea6DNA\u7684\u679a\u4e3e\u7ed3\u679c\u4e2d\uff0c\u6ce8\u610f\u5230\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u679a\u4e3e\u7684\u5355\u94fe\uff0c\u5982\u679c\u5176\u5bf9\u79f0\u8f74\u4e24\u7aef\u78b1\u57fa\u53ef\u4e92\u8865\u914d\u5bf9\uff0c\u5219\u8be5\u5355\u94fe\u5728\u679a\u4e3e\u7ed3\u679c\u4e2d\u4e0d\u4f1a\u53d1\u751f\u91cd\u590d\uff0c\u9664\u6b64\u4e4b\u5916\u5176\u4ed6\u5f62\u5f0f\u7684\u5355\u94fe\u5747\u5b58\u5728\u4e00\u4e2a\u4e8e\u5176\u53cd\u5411\u4e92\u8865\u7684\u5355\u94fe\uff0c\u6211\u9009\u62e9\u5c06\u5bf9\u79f0\u5355\u94fe\u6570\u91cf\u7ffb\u500d\u6765\u53d6\u5f97\u89c4\u5f8b\u7edf\u4e00\u6027\uff0c\u7136\u540e\u5c06\u603b\u679a\u4e3e\u6570\u91cf\u9664\u4ee52\u8fdb\u884c\u53bb\u91cd\u3002</p> <p>\u53bb\u91cd\u65b9\u6cd5\uff1a \\(\\begin{cases} \\frac{(C^{1}_{2\u00d7m})^n}{2} &amp; \\text{m=2\u00d7k+1} \\\\ \\frac{{(C^{1}_{2\u00d7m})^n+(C^{1}_{2\u00d7m})}^{\\frac{n}{2}}}{2} &amp; \\text{m=2\u00d7k}  \\end{cases}\\) C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nint fact(int x) {\n    if (x == 1 | x == 0) return 1;\n    else return x * fact(x - 1);\n}\nint select(int n, int m) {\n    return fact(m) / (fact(n) * fact(m - n));\n}\nint main() {\n    int n, m;\n    cin &gt;&gt; n &gt;&gt; m;\n    int h = select(1, m) * 2;\n    int h_pow = 1;\n    for (int i = 0; i &lt; n; i ++) {\n        h_pow *= h;\n    }\n    if (n % 2 != 0) {\n        h_pow /= 2;\n    } else {\n        int extra = 1;\n        for (int i = 0; i &lt; n / 2; i ++) {\n            extra *= h;\n        }\n        h_pow += extra;\n        h_pow /= 2;\n    }\n    cout &lt;&lt; h_pow &lt;&lt; endl;\n    return 0;\n}\n</code></pre></p> <p>\u7136\u540eWA\u4e86\uff0c\u5934\u8111\u7b80\u5355\u7684\u6211\u4e5f\u4e0d\u77e5\u9053\u4e3a\u5565QAQ\u3002</p>","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#problem-dwa","title":"Problem D\uff08WA\uff09","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_7","title":"\u9898\u5e72","text":"","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_8","title":"\u6211\u7684\u601d\u8def","text":"<p>\u521d\u89c1\u6b64\u9898\uff0c\u6ca1\u6ce8\u610f\u5230\u5e8f\u5217\u7684\u6709\u5e8f\u6027\uff0c\u89c9\u5f97\u5f88\u7b80\u5355\u3002\u8bfb\u5b8c\u9898\u5c31\u662f\u4e00\u987f\u54d0\u54d0\u6572\uff0c\u5b58\u5728vector\u91ccsort\u4e00\u4e0b\uff0c\u7136\u540e\u7eaf\u6392\u5217\u7ec4\u5408\uff0c\u8fd9\u4e0d\u6570\u5b66\u9898\u561b\uff0c\u4e09\u4e0b\u4e94\u9664\u4e8c\u6572\u5b8c\uff0c\u6d4b\u8bd5\u6837\u4f8b\u731b\u731b\u5bf9\uff0c\u76f4\u63a5\u63d0\u4ea4\uff0c\u559c\u63d0\u672c\u9898\u7b2c\u4e00WA\u3002\u5fc3\u60f3\u4e0d\u5bf9\uff0c\u4e00\u770b\u9898\u76ee\u624d\u53d1\u73b0\u9519\u7684\u5f88\u5f7b\u5e95\uff0c\u63a8\u7ffb\u91cd\u505a\u3002\u65e2\u7136\u662f\u6709\u5e8f\u6570\u636e\uff0c\u90a3\u4e48\u4e5f\u5c31\u610f\u5473\u7740\u4e00\u65e6\u786e\u5b9a\u9009\u62e9\u7684\u5143\u7d20\uff0c\u90a3\u4e48\u8be5\u5b50\u96c6\u4fbf\u662f\u552f\u4e00\u7684\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u6211\u6709\u9009\u548c\u4e0d\u9009\u4e24\u4e2a\u9009\u9879\uff0c\u5f53\u5373\u786e\u5b9a\u7528\u6df1\u641c\uff0c\u5f00\u6574\u3002</p> C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nvoid dfs(vector&lt;int&gt; subseq, vector&lt;int&gt; seq, int start, int end, int step, long long* sum) {\n    if (step == 0) {\n        return ;\n    }\n    for (int i = start; i &lt; end; i ++) {\n        subseq.push_back(seq[i]);\n        auto result = minmax_element(subseq.begin(), subseq.end());\n        * sum += * result.first;\n        dfs(subseq, seq, i + 1, end, step - 1, sum);\n        subseq.pop_back();\n    }\n    return ;\n}\nint main() {\n    int n, num;\n    cin &gt;&gt; n;\n    vector&lt;int&gt; seq;\n    for (int i = 0; i &lt; n; i ++) {\n        cin &gt;&gt; num;\n        seq.push_back(num);\n    }\n    long long sum = 0;\n    vector&lt;int&gt; subseq;\n    dfs(subseq, seq, 0, n, n, &amp;sum);\n    sum %= 804188993;\n    cout &lt;&lt; sum &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <p>\u662f\u7684\uff0c\u8fd8\u662f\u7a77\u4e3e\uff0c\u6211\u6ca1\u522b\u7684\u62db\u4e86...</p> <p>\u5728\u6df1\u641c\u4e2d\uff0c\u4f7f\u7528\u4e24\u4e2avector\u5bb9\u5668\uff0c<code>seq</code>\u5b58\u653e\u539f\u59cb\u5e8f\u5217\uff0c <code>subseq</code>\u5b58\u653e\u6458\u51fa\u7684\u5e8f\u5217\uff0c\u8bbe\u5b9a\u641c\u7d22\u7684\u8d77\u59cb\u70b9\u548c\u7ec8\u6b62\u70b9\uff0c\u7528\u96c6\u5408\u5927\u5c0f\u6307\u5b9a\u641c\u7d22\u6b65\u6570\u3002</p> <p>\u5728dfs\u51fd\u6570\u4e2d\uff0c\u4f7f\u7528for\u5faa\u73af\u4ece\u8d77\u59cb\u70b9\u5411\u7ec8\u6b62\u70b9\u904d\u5386\u3002\u5728for\u5faa\u73af\u7684\u6bcf\u4e00\u5c42\uff0c\u9009\u62e9\u4e00\u4e2a\u5143\u7d20\u52a0\u5165<code>subseq</code>\uff0c\u5e76\u53d6\u51fa\u5f53\u524d<code>subseq</code>\u4e2d\u5e8f\u5217\u5b50\u96c6\u7684\u6700\u5c0f\u503c\u52a0\u5165<code>sum</code>\uff0c\u7136\u540e\u6839\u636e\u5e8f\u5217\u6709\u5e8f\u6027\uff0c\u4ee5\u5f53\u524d\u52a0\u5165<code>subseq</code>\u5143\u7d20\u7684\u4e0b\u6807\u52a01\u4e3a\u65b0\u7684\u8d77\u59cb\u70b9\u5411\u540e\u641c\u7d22\uff0c\u641c\u7d22\u8fd4\u56de\u540e\u5f39\u51fafor\u5faa\u73af\u5f53\u524d\u5c42\u52a0\u5165\u7684\u5143\u7d20\uff0c\u5c42\u6570\u52a01\u3002\u8fd9\u6837\u4fdd\u8bc1\u4e86\u5728\u6bcf\u4e00\u6b65\u7684\u9009\u62e9\u5b8c\u6210\u540e\uff0c<code>subseq</code>\u5b58\u653e\u7684\u5b50\u96c6\u662f\u4e0d\u91cd\u590d\u7684\uff0c\u540c\u65f6\u4fdd\u8bc1\u4e86\u6bcf\u4e00\u79cd\u60c5\u51b5\u5747\u80fd\u679a\u4e3e\u5230\u3002</p> <p>\u6700\u540e\u53d6\u6a21\u8f93\u51fa\uff0c\u6d4b\u8bd5\u6837\u4f8b\u901a\u8fc7\uff0c\u7136\u540e\u63d0\u4ea4\u63d0\u793a\u8fd0\u884c\u9519\u8bef (NICE)\u3002</p> <p>\u6211\u5f53\u65f6\u7684\u60f3\u6cd5\u662f\uff0c\u65e2\u7136\u8fd0\u884c\u9519\u8bef\uff0c\u90a3\u4e48\u8981\u4e48\u5c31\u8d85\u65f6\u4e86\u8981\u4e48\u5c31\u8d85\u5185\u5b58\u4e86\u3002\u7531\u4e8e\u6211\u7684\u8111\u888b\u6bd4\u8f83\u7b28\uff0c\u60f3\u4e0d\u5230\u7b80\u5316\u65f6\u95f4\u7684\u65b9\u6cd5\uff0c\u5c31\u60f3\u7740\u80fd\u4e0d\u80fd\u5148\u7b80\u5316\u5185\u5b58\uff0c\u7136\u540e\u518d\u6162\u6162\u4f18\u5316\u3002</p> <p>\u5728\u9012\u5f52\u91cc\uff0c\u6211\u6bcf\u4e00\u4e2a\u5806\u6808\u90fd\u4fdd\u7559\u4e86\u4e00\u4e2a<code>subseq</code>\u7684copy\uff0c\u5bf9\u4e8e\u6570\u636e\u89c4\u6a21\u6bd4\u8f83\u5927\u7684\u5e8f\u5217\u6765\u8bf4\u65e0\u7591\u662f\u4e00\u7b14\u5f88\u5927\u7684\u5f00\u9500\u3002\u65e2\u7136\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5e8f\u5217\u5143\u7d20\uff0c\u6211\u90fd\u6709\u9009\u548c\u4e0d\u9009\u4e24\u4e2a\u65b9\u6848\uff0c\u90a3\u4e48\u6211\u4e3a\u4ec0\u4e48\u4e0d\u5229\u7528\u9012\u5f52\u540c\u65f6\u5c1d\u8bd5\u4e24\u4e2a\u65b9\u6848\u5462\u3002</p> <p>\u4e8e\u662f\u6211\u5728\u4e4b\u524d\u5199\u7684dfs\u7684\u57fa\u7840\u4e0a\u505a\u4e86\u5927\u6539\uff0c\u6dfb\u52a0\u4e86\u5e03\u5c14\u9009\u9879<code>choose</code>\uff0c\u6307\u5b9a\u5f53\u524d\u5c42\u5143\u7d20\u662f\u5426\u88ab\u9009\u62e9\uff0c <code>idx</code>\u6307\u793a\u5f53\u524d\u5143\u7d20\u4e0b\u6807\uff0c\u4e0d\u518d\u8bb0\u5f55\u5b50\u5e8f\u5217\uff0c\u800c\u662f\u5c06\u4e0a\u6b21\u679a\u4e3e\u751f\u6210\u5b50\u5e8f\u5217\u7684\u6700\u5c0f\u503c\u4e0e\u5f53\u524d\u5c42\u5143\u7d20\uff08\u5982\u679c\u88ab\u9009\u4e2d\uff09\u8fdb\u884c\u6bd4\u8f83\uff0c\u5c06\u8f83\u5c0f\u7684\u503c\u52a0\u5165<code>sum</code>\u3002\u5982\u679c\u5f53\u524d\u5c42\u6ca1\u6709\u5143\u7d20\u88ab\u9009\u4e2d\uff0c\u5219\u5b50\u5e8f\u5217\u672a\u88ab\u66f4\u65b0\uff0c\u56e0\u6b64<code>sum</code>\u4e5f\u4e0d\u4f1a\u88ab\u66f4\u65b0\u3002\u5b8c\u6210\u5224\u65ad\u540e\uff0c\u5f53\u524d\u5143\u7d20\u4e0b\u6807\u81ea\u589e\uff0c\u5bf9\u4e0b\u4e00\u4e2a\u5143\u7d20\u8fdb\u884c\u9012\u5f52\u9009\u62e9\u3002 C++<pre><code>#include &lt;bits/stdc++.h&gt;\nusing namespace std;\nvoid SubSeqMinSum(vector&lt;int&gt; seq, int idx, int min_, long long* sum, bool choose) {\n    if (idx &gt;= seq.size()) return ;\n    if (choose) {\n        min_ = min(seq[idx], min_);\n        * sum += (long long)min_;\n    }\n    idx ++;\n    SubSeqMinSum(seq, idx, min_, sum, 0);\n    SubSeqMinSum(seq, idx, min_, sum, 1);\n    return ;\n}\nint main() {\n    int min_ = INT_MAX;\n    int n, num;\n    vector&lt;int&gt; seq;\n    cin &gt;&gt; n;\n    for (int i = 0; i &lt; n; i ++) {\n        cin &gt;&gt; num;\n        seq.push_back(num);\n    }\n    long long sum = 0;\n    SubSeqMinSum(seq, 0, min_, &amp;sum, 0);\n    SubSeqMinSum(seq, 0, min_, &amp;sum, 1);\n    sum = sum % 804188993;\n    cout &lt;&lt; sum &lt;&lt; endl;\n    return 0;\n}\n</code></pre> \u5185\u5b58\u82b1\u8d39\u76f8\u6bd4\u524d\u4e00\u4e2a\u65b9\u6cd5\u5e94\u8be5\u5c11\u4e86\u5f88\u591a\uff0c\u867d\u7136\u4f46\u662f\uff0c\u8fd8\u662f\u8fd0\u884c\u9519\u8bef\u3002\u8c03\u8bd5\u53d1\u73b0\u5f53\u5e8f\u5217\u957f\u5ea6\u5927\u4e8e\u5341\u4e94\u65f6\uff0c\u9012\u5f52\u65e0\u6cd5\u8df3\u51fa\uff0c\u5177\u4f53\u539f\u56e0\u56e0\u4e3a\u6211\u8c03\u8bd5\u9012\u5f52\u7a0b\u5e8f\u7684\u7ecf\u9a8c\u548c\u80fd\u529b\u6709\u9650\uff0c\u4e5f\u672a\u80fd\u67e5\u660e\u3002</p>","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/05/2024ACMSummary/#_9","title":"\u5199\u5728\u6700\u540e","text":"<p>\u662f\u7684\uff0c\u901a\u8fc7\u5bf9\u524d\u56db\u9053\u9898\u7684\u5c1d\u8bd5\u6c42\u89e3\u8ba9\u6211\u786e\u5b9a\u4e86\u4e00\u4ef6\u4e8b\uff0cC\u9898\u4ee5\u540e\u662f\u6211\u65e0\u6cd5\u89e6\u53ca\u7684\u9886\u57df\uff0c\u7531\u4e8e\u6211\u8fde\u9898\u76ee\u4e5f\u6ca1\u770b\uff0c\u5c31\u4e0d\u591a\u505a\u8bf4\u660e\u4e86\uff0c\u4ee5\u540e\u6709\u7a7a\u4f1a\u66f4\u65b0\u9898\u5e72^^\u3002</p> <p>\u633a\u641e\u7b11\u7684\u662f\uff0c\u5199\u4e86\u4e00\u5929\u5c31\u5199\u51fa\u6765\u4e24\u9053\u9898\uff0c\u8fd8\u5199\u4e86\u8fd9\u4e48\u957f\u7684\u535a\u5ba2\u6765\u8bb0\u5f55\u3002\u5176\u5b9e\u6211\u89c9\u5f97\u6bd4\u8d77\u632b\u8d25\u611f\uff0c\u7b2c\u4e00\u6b21\u53c2\u52a0ACM\u6bd4\u8d5b\u5f97\u65b0\u9c9c\u611f\u8981\u6765\u7684\u66f4\u591a\u3002\u8fd9\u6b21\u6bd4\u8d5b\u8ba9\u6211\u660e\u767d\u4e86\u6211\u7684coding\u80fd\u529b\u8fd8\u6709\u975e\u5e38\u5927\u5f97\u4e0d\u8db3\uff0c\u4ee5\u540e\u4e5f\u4f1a\u5728Leetcode\u4e0a\u505a\u4e00\u4e9b\u9898\uff0c\u5e0c\u671b\u80fd\u6709\u63d0\u5347\u5427\u3002</p> <p>\u5982\u679c\u4f60\u53d1\u73b0\u4e86\u6211\u7684\u89e3\u6cd5\u4e2d\u5b58\u5728\u7684\u95ee\u9898\uff0c\u6b22\u8fcemail\u6211\u8fdb\u884c\u5632\u7b11\uff0c\u4f46\u4e5f\u8bf7\u9644\u4e0a\u6b63\u786e\u7684\u89e3\u6cd5\u8bf4\u660e\uff0c\u8c22\u8c22(doge)\u3002</p> <p>\u6211\u7684\u90ae\u7bb1\uff1amingkun502@gmail.com</p>","tags":["ACM","\u8bb0\u5f55\u751f\u6d3b"]},{"location":"blog/2024/05/28/federated-learning/","title":"\u8054\u90a6\u5b66\u4e60 | Federated Learning","text":"<p>\u8054\u90a6\u5b66\u4e60\u7531\u4e8e\u80fd\u591f\u5728\u591a\u65b9\u6570\u636e\u6e90\u805a\u5408\u7684\u573a\u666f\u4e0b\u534f\u540c\u8bad\u7ec3\u5168\u5c40\u6700\u4f18\u6a21\u578b\uff0c\u8fd1\u5e74\u6765\u8fc5\u901f\u6210\u4e3a\u5b89\u5168\u673a\u5668\u5b66\u4e60\u9886\u57df\u7684\u7814\u7a76\u70ed\u70b9\u3002</p> <p>\u672c\u6587\u5f52\u7eb3\u4e86\u8054\u90a6\u5b66\u4e60\u5b9a\u4e49\u3001\u7b97\u6cd5\u539f\u7406\u548c\u5206\u7c7b\uff0c\u65e8\u5728\u63d0\u4f9b\u4e00\u4e2a\u5bf9\u8054\u90a6\u5b66\u4e60\u6280\u672f\u5efa\u7acb\u4e00\u4e2a\u8f83\u4e3a\u6e05\u6670\u7684\u8ba4\u77e5\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_1","title":"\u4e3a\u4ec0\u4e48\u8981\u8054\u90a6\u5b66\u4e60","text":"<p>\u9996\u5148\u68b3\u7406\u673a\u5668\u5b66\u4e60\u9762\u4e34\u7684\u6311\u6218\uff1a 1. \u6570\u636e\u5b89\u5168\u4e0e\u9690\u79c1\u95ee\u9898 2. \u7f51\u7edc\u5b89\u5168\u9694\u79bb\u548c\u884c\u4e1a\u9690\u79c1</p> <p>\u673a\u5668\u5b66\u4e60\u4f5c\u4e3a\u6d77\u91cf\u6570\u636e\u7684\u5206\u6790\u5904\u7406\u6280\u672f\uff0c\u5176\u6027\u80fd\u603b\u662f\u53d6\u51b3\u4e8e\u7b97\u6cd5\u80fd\u591f\u63a5\u89e6\u7684\u6837\u672c\u91cf\u3002\u7136\u800c\uff0c\u4e0d\u540c\u90e8\u95e8\u4e4b\u95f4\u5b58\u5728\u6570\u636e\u58c1\u5792\uff0c\u5f62\u6210\u7684\u6570\u636e\u5b64\u5c9b\u96be\u4ee5\u5b89\u5168\u5171\u4eab\uff0c\u800c\u4ec5\u51ed \u5404\u90e8\u95e8\u72ec\u7acb\u6570\u636e\u8bad\u7ec3\u7684\u673a\u5668\u5b66\u4e60\u6a21\u578b\u6027\u80fd\u65e0\u6cd5\u8fbe\u5230\u5168\u5c40\u6700\u4f18\u5316\u3002</p> <p>\u8054\u90a6\u5b66\u4e60\u6280\u672f\u901a\u8fc7\u5c06\u673a\u5668\u5b66\u4e60\u7684\u6570\u636e\u5b58\u50a8\u4e0e\u6a21\u578b\u8bad\u7ec3\u9636\u6bb5\u8f6c\u79fb\u81f3\u672c\u5730\u7528\u6237\uff0c\u4ec5\u4e0e\u4e2d\u5fc3\u670d\u52a1\u5668\u4ea4\u4e92\u6a21\u578b\u66f4\u65b0\u7684\u65b9\u5f0f\u4fdd\u969c\u7528\u6237\u7684\u6570\u636e\u9690\u79c1\u5b89\u5168\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_2","title":"\u8054\u90a6\u5b66\u4e60\u662f\u4ec0\u4e48","text":"<p>\u8054\u90a6\u5b66\u4e60\u7684\u672c\u8d28\uff1a\u5206\u5e03\u5f0f\u7684\u673a\u5668\u5b66\u4e60\u6280\u672f</p> <p> The Process of FL</p> <p>\u5ba2\u6237\u7aef\u5728\u4e2d\u5fc3\u670d\u52a1\u5668\u7684\u534f\u8c03\u4e0b\u5171\u540c\u8bad\u7ec3\u6a21\u578b\u3002\u5176\u4e2d\u5ba2\u6237\u7aef\u8d1f\u8d23\u8bad\u7ec3\u672c\u5730\u6570\u636e\u5f97\u5230\u672c\u5730\u6a21\u578b(local model)\uff0c\u4e2d\u5fc3\u670d\u52a1\u5668\u8d1f\u8d23\u52a0\u6743\u805a\u5408\u672c\u5730\u6a21\u578b\u5f97\u5230\u5168\u5c40\u6a21\u578b(global model)\uff0c\u7ecf\u8fc7\u591a\u8f6e\u8fed\u4ee3\u540e\u6700\u7ec8\u5f97\u5230\u4e00\u4e2a\u8d8b\u8fd1\u4e8e\u96c6\u4e2d\u5f0f\u673a\u5668\u5b66\u4e60\u7ed3\u679c\u4e2d\u7684\u6a21\u578b\u3002</p> <p>One Epoch\uff1a</p> <ol> <li>\u5ba2\u6237\u7aef\u4ece\u670d\u52a1\u5668\u4e0b\u8f7d\u5168\u5c40\u6a21\u578b\\(w_{t-1}\\)</li> <li>\u5ba2\u6237\u7aefk\u8bad\u7ec3\u672c\u5730\u6570\u636e\u5f97\u5230\u672c\u5730\u6a21\u578b\\(w_{t, k}\\) (\u7b2ck\u5404\u5ba2\u6237\u7aef\u7b2ct\u8f6e\u901a\u4fe1\u7684\u672c\u5730\u6a21\u578b\u66f4\u65b0)</li> <li>\u5404\u65b9\u5ba2\u6237\u7aef\u4e0a\u4f20\u672c\u5730\u6a21\u578b\u5230\u4e2d\u5fc3\u670d\u52a1\u5668</li> <li>\u4e2d\u5fc3\u670d\u52a1\u5668\u63a5\u6536\u5404\u65b9\u6570\u636e\u540e\u8fdb\u884c\u52a0\u6743\u805a\u5408\u64cd\u4f5c\uff0c\u5f97\u5230\u5168\u5c40\u6a21\u578b\\(w_t\\) (\u7b2ct\u8f6e\u901a\u4fe1\u540e\u7684\u5168\u5c40\u6a21\u578b\u66f4\u65b0)</li> </ol> <p>\u7efc\u4e0a\uff0c\u8054\u90a6\u5b66\u4e60\u6280\u672f\u5177\u6709\u4ee5\u4e0b\u51e0\u4e2a\u7279\u70b9\u3002</p> <p>\u2460 \u53c2\u4e0e\u8054\u90a6\u5b66\u4e60\u7684\u539f\u59cb\u6570\u636e\u90fd\u4fdd\u7559\u5728\u672c\u5730\u5ba2\u6237\u7aef\uff0c\u4e0e\u4e2d\u5fc3\u670d\u52a1\u5668\u4ea4\u4e92\u7684\u53ea\u662f\u6a21\u578b\u66f4\u65b0\u4fe1\u606f\u3002</p> <p>\u2461 \u8054\u90a6\u5b66\u4e60\u7684\u53c2\u4e0e\u65b9\u8054\u5408\u8bad\u7ec3\u51fa\u7684\u6a21\u578bw\u5c06\u88ab\u5404\u65b9\u5171\u4eab\u3002</p> <p>\u2462 \u8054\u90a6\u5b66\u4e60\u6700\u7ec8\u7684\u6a21\u578b\u7cbe\u5ea6\u4e0e\u96c6\u4e2d\u5f0f\u673a\u5668\u5b66\u4e60\u76f8\u4f3c\u3002</p> <p>\u2463 \u8054\u90a6\u5b66\u4e60\u53c2\u4e0e\u65b9\u7684\u8bad\u7ec3\u6570\u636e\u8d28\u91cf\u8d8a\u9ad8\uff0c\u5168\u5c40\u6a21\u578b\u7cbe\u5ea6\u8d8a\u9ad8\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_3","title":"\u7b97\u6cd5\u539f\u7406","text":"<p>\u5b66\u4e60\u573a\u666f\uff1a\u5728\u672c\u5730\u5ba2\u6237\u7aef\u8bbe\u5907\u8d1f\u8d23\u5b58\u50a8\u548c\u5904\u7406\u6570\u636e\u7684\u7ea6\u675f\u4e0b\uff0c\u53ea\u4e0a\u4f20\u6a21\u578b\u66f4\u65b0\u7684\u68af\u5ea6\u4fe1\u606f\uff0c\u5728\u5ba2\u6237\u7aef\u8bbe\u5907\u4e0a\u8bad\u7ec3\u5355\u4e2a\u5168\u5c40\u6a21\u578bw\u3002</p> <p>\u4e2d\u5fc3\u670d\u52a1\u5668\u76ee\u6807\u51fd\u6570\u901a\u5e38\u4e3a\uff1a</p> \\[\\min_wF(w),F(w)=\\sum_{k=1}^m\\frac{n_k}nF_k(w)\\] <p>\u5176\u4e2d\uff0cm\u4e3a\u53c2\u4e0e\u8bad\u7ec3\u7684\u5ba2\u6237\u7aef\u8bbe\u5907\u603b\u6570\uff0cn\u4e3a\u6240\u6709\u5ba2\u6237\u7aef\u6570\u636e\u91cf\u4e4b\u548c\uff0c\\(n_k\\)\u4e3a\u7b2ck\u4e2a\u5ba2\u6237\u7aef\u7684\u6570\u636e\u91cf\uff0c\\(F_k(w)\\)\u4e3a\u7b2ck\u4e2a\u8bbe\u5907\u7684\u672c\u5730\u76ee\u6807\u51fd\u6570\uff1a</p> \\[F_k(w)=\\frac1{n_k}\\sum_{i\\in d_k}f_i(w)\\] <p>\u5176\u4e2d\uff0c\\(d_k\\)\u662f\u7b2ck\u4e2a\u5ba2\u6237\u7aef\u7684\u672c\u5730\u6570\u636e\u96c6\uff0c\\(f_i(w)\\)\u4e3a\u5177\u6709\u53c2\u6570w\u7684\u6a21\u578b\u5bf9\\(d_k\\)\u6570\u636e\u96c6\u4ea7\u751f\u7684\u635f\u5931\u8ba1\u7b97\u51fd\u6570\u3002</p> <p>\u7b2ct\u8f6e\u901a\u4fe1\u4e2d\u5fc3\u670d\u52a1\u5668\u7684\u6a21\u578b\u805a\u5408\u66f4\u65b0\u5982\u4e0b\uff1a</p> \\[w_t=\\sum_{k=1}^K\\frac{n_k}nw_{t,k}\\]","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_4","title":"\u8054\u90a6\u5b66\u4e60\u5206\u7c7b","text":"<p>\u4e00\u4e2a\u5b8c\u6574\u7684\u6570\u636e\u96c6\u5e94\u7531(ID, Y, X)\u6784\u6210\uff0cID\u8868\u793a\u6837\u672cID\uff0cY\u8868\u793a\u6570\u636e\u96c6\u7684\u6807\u7b7e\u4fe1\u606f\uff0cX\u8868\u793a\u6570\u636e\u96c6\u7684\u7279\u5f81\u4fe1\u606f\u3002</p> <p>\u6839\u636e\u53c2\u4e0e\u8bad\u7ec3\u5ba2\u6237\u7aef\u7684\u6570\u636e\u96c6\u7279\u5f81\u4fe1\u606fX\u7684\u4e0d\u540c\uff0c\u8054\u90a6\u5b66\u4e60\u88ab\u5206\u4e3a\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u3001\u7eb5\u5411\u8054\u90a6\u5b66\u4e60\u548c\u8054\u90a6\u8fc1\u79fb\u5b66\u4e60\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_5","title":"\u6a2a\u5411\u8054\u90a6\u5b66\u4e60","text":"<p>\u7279\u70b9\uff1a \u6570\u636e\u96c6\u7279\u5f81X\u548c\u6807\u7b7e\u4fe1\u606fY\u76f8\u540c\uff0c\u4f46\u6837\u672cID\u4e0d\u540c\u3002</p> \\[X_m=X_n,Y_m=Y_n,I_m\\neq I_n,\\forall D_m,\\forall D_n,m\\neq n\\] <p> Horizontal Federated Learning</p> <p>\u7528\u4eba\u8bdd\u8bf4\uff0c\u6a2a\u5411\u8054\u90a6\u5b66\u4e60\u7684\u5404\u4e2a\u5ba2\u6237\u7aef\u6240\u6301\u6709\u7684\u6570\u636e\u96c6\u90fd\u5305\u542b\u76f8\u540c\u7684\u7279\u5f81\u4e0e\u6807\u7b7e\u4fe1\u606f\uff0c\u5176\u4e0d\u540c\u5728\u4e8e\u5176\u6570\u636e\u96c6\u6240\u5305\u542b\u7684\u6837\u672c\u5bf9\u8c61\u4e0d\u540c\u3002(\u9488\u5bf9\u4e0d\u540c\u7fa4\u4f53\uff0c\u6536\u96c6\u76f8\u540c\u4fe1\u606f)</p> <p>\u5178\u578b\u5e94\u7528\uff1a\u8f93\u5165\u6cd5\u4e0b\u4e00\u8bcd\u9884\u6d4b</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_6","title":"\u7eb5\u5411\u8054\u90a6\u5b66\u4e60","text":"<p>\u7279\u70b9\uff1a\u7eb5\u5411\u8054\u90a6\u5b66\u4e60\u7684\u7279\u70b9\u662f\u4e2a\u6570\u636e\u96c6\u7279\u5f81X\u548c\u6807\u7b7e\u4fe1\u606fY\u4e0d\u540c\uff0c\u4f46\u6837\u672c\u4fe1\u606f\u76f8\u540c\u3002</p> \\[X_m\\neq X_n,Y_m\\neq Y_n,I_m=I_n,\\forall D_m,\\forall D_n,m\\neq n\\] <p> Vertical Federated Learning</p> <p>\u7528\u4eba\u8bdd\u8bf4\uff0c\u7eb5\u5411\u8054\u90a6\u5b66\u4e60\u7684\u5404\u4e2a\u5ba2\u6237\u7aef\u6301\u6709\u7684\u6570\u636e\u96c6\u5177\u6709\u76f8\u540c\u7684\u6837\u672c\u5bf9\u8c61\uff0c\u4f46\u5176\u5305\u542b\u7684\u6570\u636e\u96c6\u7279\u5f81\u548c\u6807\u7b7e\u4fe1\u606f\u4e0d\u540c\u3002\uff08\u9488\u5bf9\u76f8\u540c\u7fa4\u4f53\uff0c\u6536\u96c6\u4e0d\u540c\u7279\u5f81\uff09</p> <p>\u5178\u578b\u5e94\u7528\uff1a\u670d\u52a1\u7ec4\u7ec7\u5408\u4f5c\u63d0\u4f9b\u4e2a\u6027\u5316\u670d\u52a1</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_7","title":"\u8054\u90a6\u8fc1\u79fb\u5b66\u4e60","text":"<p>\u7279\u70b9\uff1a\u6570\u636e\u96c6\u7279\u5f81X\uff0c\u6807\u7b7e\u4fe1\u606fY\u548c\u6837\u672cID\u4fe1\u606f\u90fd\u4e0d\u540c\u3002</p> \\[X_m\\neq X_n,Y_m\\neq Y_n,I_m\\neq I_n,\\forall D_m,\\forall D_n,m\\neq n\\] <p>\u4e00\u822c\u5e94\u7528\u4e8e\u9488\u5bf9\u5c0f\u6837\u672c\u95ee\u9898\u7684\u6570\u636e\u4ea4\u6d41\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_8","title":"\u5a01\u80c1\u4e0e\u6311\u6218","text":"","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_9","title":"\u901a\u4fe1\u6548\u7387\u77ed\u677f\u660e\u663e","text":"<p>\u5404\u5ba2\u6237\u7aef\u6570\u636e\u96c6\u7684\u6570\u636e\u7279\u5f81\u5448\u975e\u72ec\u7acb\u540c\u5206\u5e03\uff0c\u800c\u4f20\u7edf\u5206\u5e03\u5f0f\u6846\u67b6\u7b97\u6cd5\u5728\u5904\u7406\u6b64\u7c7b\u6570\u636e\u6709\u8bad\u7ec3\u96be\u4ee5\u6536\u655b\uff0c\u901a\u4fe1\u8f6e\u6570\u8fc7\u591a\u7684\u95ee\u9898\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_10","title":"\u9690\u79c1\u5b89\u5168\u5b58\u5728\u7f3a\u9677","text":"<p>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u8054\u90a6\u5b66\u4e60\u4e2d\u5ba2\u6237\u7aef\u901a\u8fc7\u8bad\u7ec3\u6e90\u6570\u636e\u4e0a\u4f20\u672c\u5730\u6a21\u578b\uff0c\u670d\u52a1\u5668\u4ec5\u805a\u5408\u548c\u5206\u53d1\u6bcf\u8f6e\u8fed\u4ee3\u5f62\u6210\u7684\u5168\u5c40\u6a21\u578b\uff0c\u7136\u800c\uff0c\u5728\u771f\u5b9e\u7684\u7f51\u7edc\u73af\u5883\u4e2d\uff0c\u6a21\u578b\u53cd\u6f14\u653b\u51fb\u3001\u6210\u5458\u63a8\u7406\u653b\u51fb\u3001\u6a21\u578b\u63a8\u7406\u653b\u51fb\u5c42\u51fa\u4e0d\u7a77\uff0c\u53c2\u4e0e\u8bad\u7ec3\u7684\u5ba2\u6237\u7aef\u52a8\u673a\u96be\u4ee5\u5224\u65ad\uff0c\u4e2d\u5fc3\u670d\u52a1\u5668\u7684\u53ef\u4fe1\u7a0b\u5ea6\u96be\u4ee5\u4fdd\u8bc1\uff0c\u7406\u60f3\u72b6\u6001\u96be\u4ee5\u4fdd\u8bc1\u3002</p> <p>\u68af\u5ea6\u4fe1\u606f\u4f1a\u6cc4\u9732\u7528\u6237\u7684\u9690\u79c1\u6570\u636e\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5ba2\u6237\u7aef\u4e0a\u4f20\u7684\u68af\u5ea6\u4fe1\u606f\u95f4\u63a5\u63a8\u51fa\u6807\u7b7e\u4fe1\u606f\u548c\u6570\u636e\u96c6\u7684\u6210\u5458\u4fe1\u606f\u3002</p> <p> 3 Security Threats in FL</p> <p>\u8054\u90a6\u5b66\u4e60\u5b58\u5728\u7684\u5a01\u80c1\uff1a</p> <ol> <li>\u6076\u610f\u5ba2\u6237\u7aef\u4fee\u6539\u6a21\u578b\u66f4\u65b0\uff0c\u7834\u574f\u5168\u5c40\u6a21\u578b\u62df\u5408\u3002</li> <li>\u6076\u610f\u5206\u6790\u8005\u63d0\u53d6\u6a21\u578b\u66f4\u65b0\u4fe1\u606f\uff0c\u53cd\u63a8\u9690\u79c1\u4fe1\u606f\u3002</li> <li>\u6076\u610f\u670d\u52a1\u5668\u4f01\u56fe\u83b7\u5f97\u5ba2\u6237\u7aef\u5143\u6570\u636e\u3002</li> </ol> <p>\u89e3\u51b3\u65b9\u6848\uff1a</p> <p>\u5dee\u5206\u9690\u79c1\u3001\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u3001\u540c\u6001\u52a0\u5bc6\u7b49\u3002\uff08\u7f3a\u70b9\u672a\u89e3\u51b3\uff09</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_11","title":"\u7f3a\u4e4f\u4fe1\u4efb\u4e0e\u6fc0\u52b1\u673a\u5236","text":"<p>\u6570\u636e\u8054\u76df\u9700\u8981\u5438\u5f15\u5927\u91cf\u5ba2\u6237\u7aef\u53c2\u4e0e\u5230\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u6ca1\u6709\u9ad8\u6548\u7684\u6fc0\u52b1\u673a\u5236\u5f88\u96be\u5438\u5f15\u8db3\u591f\u7684\u8bad\u7ec3\u6570\u636e\uff0c\u65e0\u6cd5\u4fdd\u8bc1\u6700\u7ec8\u7684\u667a\u80fd\u6a21\u578b\u8d28\u91cf\uff1b\u53e6\u5916\uff0c\u8054\u90a6\u5b66\u4e60\u5e76\u6ca1\u6709\u9488\u5bf9\u5ba2\u6237\u7aef\u7684\u4fe1\u4efb\u673a\u5236\uff0c\u5bf9\u4e8e\u5ba2\u6237\u7aef\u7684\u4fe1\u8a89\u6ca1\u6709\u7edf\u4e00\u7684\u5206\u6570\u8bc4\u4ef7\uff0c\u8fd9\u4e25\u91cd\u5f71\u54cd\u4e86\u5bf9\u4f18\u8d28\u5ba2\u6237\u7aef\u7684\u9009\u62e9\uff0c\u4ece\u800c\u5bfc\u81f4\u5168\u5c40\u6a21\u578b\u7cbe\u5ea6\u964d\u4f4e\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_12","title":"\u6280\u672f\u8fdb\u5c55","text":"","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_13","title":"\u901a\u4fe1\u6548\u7387","text":"<ol> <li>\u7b97\u6cd5\u4f18\u5316\uff1a\u5f00\u53d1Non-llD\u4e0e\u975e\u5e73\u8861\u5206\u5e03\u6570\u636e\u53cb\u597d\u578b\u8bad\u7ec3\u7b97\u6cd5\uff0c\u51cf\u5c11\u4f20\u8f93\u6570\u636e\u5927\u5c0f\uff0c\u52a0\u901f\u6536\u655b\u3002</li> <li>\u538b\u7f29\uff1a\u538b\u7f29\u901a\u4fe1\u6570\u636e\u5927\u5c0f\uff0c\u540c\u65f6\u4fdd\u8bc1\u7cbe\u5ea6\u3002</li> <li>\u5206\u6563\u8bad\u7ec3\uff1a\u8054\u90a6\u5b66\u4e60\u6846\u67b6\u5206\u5c42\u5206\u7ea7\uff0c\u964d\u4f4e\u4e2d\u5fc3\u670d\u52a1\u5668\u8d1f\u62c5\u3002</li> </ol>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_14","title":"\u9690\u79c1\u5b89\u5168","text":"<p>\u6839\u636e\u9690\u79c1\u4fdd\u62a4\u7ec6\u7c92\u5ea6\u7684\u4e0d\u540c\uff0c\u8054\u90a6\u5b66\u4e60\u7684\u9690\u79c1\u5b89\u5168\u88ab\u5206\u4e3a\u5168\u5c40\u9690\u79c1\uff08global privacy\uff09\u548c\u672c\u5730\u9690\u79c1\uff08local privacy\uff09\u3002</p> <p>\u5178\u578b\u9690\u79c1\u4fdd\u62a4\u6280\u672f</p> <p>\u5dee\u5206\u9690\u79c1\u3001\u5b89\u5168\u591a\u65b9\u8ba1\u7b97\u3001\u540c\u6001\u52a0\u5bc6\u7b49\u6280\u672f\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_15","title":"\u4fe1\u4efb\u4e0e\u6fc0\u52b1\u673a\u5236","text":"<p>\u57fa\u4e8e\u533a\u5757\u94fe\u7684\u8054\u90a6\u5b66\u4e60\u65b9\u6848\uff0c\u63d0\u4f9b\u4fe1\u4efb\u4e0e\u6fc0\u52b1\u673a\u5236\u3002</p> <p>\u8054\u90a6\u5b66\u4e60\u4e0e\u533a\u5757\u94fe\u7684\u7ed3\u5408\u4f7f\u7cfb\u7edf\u6210\u4e3a\u4e00\u4e2a\u5b8c\u5584\u7684\u95ed\u73af\u5b66\u4e60\u673a\u5236\u3002\u4e00\u65b9\u9762\uff0c\u8054\u90a6\u5b66\u4e60\u6280\u672f\u80fd\u591f\u4e3a\u5177\u6709\u9690\u79c1\u6570\u636e\u7684\u53c2\u4e0e\u65b9\u63d0\u4f9b\u8de8\u57df\u5b89\u5168\u5171\u4eab\u65b9\u6848\uff1b\u53e6\u4e00\u65b9\u9762\uff0c\u533a\u5757\u94fe\u6280\u672f\u4f5c\u4e3a\u6838\u5fc3\u6570\u636e\u5e93\u4e3a\u53c2\u4e0e\u65b9\u63d0\u4f9b\u4e86\u5b89\u5168\u5b58\u50a8\u3001\u4fe1\u4efb\u7ba1\u7406\u3001\u7ec6\u7c92\u5ea6\u533a\u5206\u548c\u6fc0\u52b1\u56de\u62a5\u7b49\u5e94\u7528\u9700\u6c42\uff0c\u4fc3\u4f7f\u62e5\u6709\u6570\u636e\u7684\u7528\u6237\u79ef\u6781\u53c2\u4e0e\u5230\u6570\u636e\u8054\u90a6\u4e2d\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/28/federated-learning/#_16","title":"\u603b\u7ed3","text":"<p>\u5728\u5927\u6570\u636e\u65f6\u4ee3\uff0c\u5982\u4f55\u5728\u4fdd\u969c\u6570\u636e\u5b89\u5168\u548c\u9690\u79c1\u7684\u524d\u63d0\u4e0b\uff0c\u5b9e\u73b0\u6570\u636e\u5171\u4eab\uff0c\u4fc3\u8fdb\u591a\u6e90\u6570\u636e\u7684\u78b0\u649e\u3001\u878d\u5408\uff0c\u6700\u5927\u9650\u5ea6\u5730\u91ca\u653e\u6570\u636e\u4ef7\u503c\uff0c\u6210\u4e3a\u5b66\u672f\u754c\u548c\u4ea7\u4e1a\u754c\u9762\u4e34\u7684\u6311\u6218\u4e4b\u4e00\u3002\u8054\u90a6\u5b66\u4e60\u4f5c\u4e3a\u5e94\u5bf9\u8be5\u6311\u6218\u7684\u4e00\u9879\u65b0\u5174\u6280\u672f\uff0c\u5728\u8bf8\u591a\u9886\u57df\u5177\u6709\u5e7f\u9614\u7684\u5e94\u7528\u524d\u666f\u3002</p>","tags":["Faderated Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/","title":"TARGET: Federated Class-Continual Learning via Exemplar-Free Distillation","text":"<p>\u672c\u6587\u5173\u6ce8\u70b9\u662f\u8054\u90a6\u7c7b\u6301\u7eed\u5b66\u4e60(FCCL)\uff0c\u5176\u4e2d\u65b0\u7c7b\u5728\u8054\u90a6\u5b66\u4e60\u4e2d\u52a8\u6001\u6dfb\u52a0\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_1","title":"\u7efc\u8ff0","text":"<p>\u6807\u9898\uff1aTARGET: \u57fa\u4e8e\u65e0\u8303\u4f8b\u84b8\u998f\u7684\u8054\u5408\u7c7b\u8fde\u7eed\u5b66\u4e60</p> <p>\u4e3b\u8981\u8d21\u732e\uff1a</p> <ol> <li>\u8bc1\u660eNon-IID\u6570\u636e\u52a0\u5267\u4e86FL\u7684\u707e\u96be\u6027\u9057\u5fd8\u3002</li> <li>\u63d0\u51faTARGET\uff0c\u51cf\u8f7bFCCL\u707e\u96be\u6027\u9057\u5fd8\u7684\u540c\u65f6\uff0c\u4fdd\u7559\u4e86\u5ba2\u6237\u7aef\u6570\u636e\u9690\u79c1\u3002</li> </ol> <p>\u4f18\u70b9\uff1a</p> <p>TARGET\u4e0d\u9700\u8981\u4efb\u4f55\u989d\u5916\u7684\u6570\u636e\u96c6\u6216\u5b58\u50a8\u6765\u81ea\u5148\u524d\u4efb\u52a1\u7684\u771f\u5b9e\u6570\u636e\uff0c\u9002\u7528\u4e8e\u6570\u636e\u654f\u611f\u573a\u666f\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_2","title":"\u95ee\u9898\u80cc\u666f","text":"<p>\u4f20\u7edfFL\u5047\u8bbe\u9759\u6001\u6570\u636e\u7c7b\u548c\u57df\u662f\u9759\u6001\u7684\uff0c\u800c\u65b0\u7c7b\u53ef\u80fd\u4f1a\u51fa\u73b0\uff0c\u6570\u636e\u57df\u5728\u73b0\u5b9e\u4e2d\u53ef\u80fd\u968f\u65f6\u95f4\u53d8\u5316\u3002</p> <p>FCCL\u65e8\u5728\u7f13\u89e3FL\u4e2d\u707e\u96be\u6027\u9057\u5fd8\u95ee\u9898\uff0c\u5e76\u901a\u8fc7\u52a8\u6001\u6dfb\u52a0\u65b0\u7c7b\u6a21\u62df\u73b0\u5b9e\u573a\u666f\u3002\u5176\u5141\u8bb8\u672c\u5730\u5ba2\u6237\u7aef\u4e0d\u65ad\u6536\u96c6\u65b0\u6570\u636e\uff0c\u5e76\u4e14\u53ef\u4ee5\u968f\u65f6\u6dfb\u52a0\u65b0\u7c7b\u3002</p> <p>\u7136\u800c\uff0c\u73b0\u5b58FCCL\u5de5\u4f5c\u5f80\u5f80\u53d7\u9650\uff0c\u5927\u591a\u6570FCCL\u65b9\u6cd5\u901a\u8fc7\u4f7f\u7528\u989d\u5916\u7684\u6570\u636e\u96c6\u6216\u4ee5\u524d\u7684\u4efb\u52a1\u6570\u636e\u8bad\u7ec3\u5168\u5c40\u6a21\u578b\u4ece\u800c\u7f13\u89e3\u9057\u5fd8\uff0c\u4f46\u8fd9\u79cd\u65b9\u5f0f\u5bf9\u5ba2\u6237\u7aef\u6570\u636e\u9690\u79c1\u4ea7\u751f\u5a01\u80c1\u3002</p> <p>\u672c\u6587\u65e8\u5728\u89e3\u51b3\u5728\u4e0d\u5b58\u50a8\u5ba2\u6237\u7aef\u7684\u672c\u5730\u79c1\u6709\u6570\u636e\u6216\u4efb\u4f55\u989d\u5916\u7684\u6570\u636e\u96c6\u7684\u60c5\u51b5\u4e0b\uff0c\u6709\u6548\u5730\u7f13\u89e3FCCL\u4e2d\u7684\u707e\u96be\u6027\u9057\u5fd8\u95ee\u9898\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_3","title":"\u8865\u5145\u5b9a\u4e49","text":"","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#fccl","title":"\u8054\u90a6\u7c7b\u6301\u7eed\u5b66\u4e60(FCCL)","text":"<p>FCCL\u4e13\u6ce8\u4e8eFL\u4e2d\u65b0\u7c7b\u522b\u5b66\u4e60\u6a21\u578b\u7684\u95ee\u9898\u3002</p> <p>FCCL\u6846\u67b6\u7531\u4e2d\u592e\u670d\u52a1\u5668\u548c\u591a\u4e2a\u5ba2\u6237\u7aef\u7ec4\u6210\u3002\u6240\u6709\u5ba2\u6237\u7aef\u4e0d\u4e0e\u4efb\u4f55\u5176\u4ed6\u5ba2\u6237\u7aef\u6216\u4e2d\u592e\u670d\u52a1\u5668\u5171\u4eab\u5b83\u4eec\u7684\u539f\u59cb\u6570\u636e\u3002\u6bcf\u4e2a\u5ba2\u6237\u7aef\u4ece n \u4e2a\u4efb\u52a1\u5e8f\u5217\u4e2d\u5b66\u4e60\uff0c\u5176\u4e2d\u7b2c k \u4e2a\u4efb\u52a1\u5305\u542b\u7c7b Ck \u2208 C \u7684\u975e\u91cd\u53e0\u5b50\u96c6\uff0c\u5176\u4e2d C \u662f\u6240\u6709\u53ef\u80fd\u7c7b\u7684\u96c6\u5408\u3002</p> <p>\u5728\u9690\u79c1\u611f\u77e5\u573a\u666f\u4e2d\uff0c\u4efb\u52a1\u6d41\u4ee5\u672a\u77e5\u987a\u5e8f\u5448\u73b0\uff0c\u6bcf\u4e2a\u5ba2\u6237\u7aef\u53ea\u80fd\u5728\u8be5\u4efb\u52a1\u7684\u8bad\u7ec3\u671f\u95f4\u4ece\u4efb\u52a1 k \u8bbf\u95ee\u5176\u672c\u5730\u6570\u636e\uff0c\u6b64\u540e\u4e0d\u518d\u53ef\u8bbf\u95ee\u3002\u6a21\u578b\u4ee5\u5206\u5e03\u5f0f\u65b9\u5f0f\u8fdb\u884c\u8bad\u7ec3\uff0c\u5176\u4e2d\u6bcf\u4e00\u65b9\u53ea\u80fd\u8bbf\u95ee\u7c7b Ck \u7684\u5b50\u96c6\uff08Non-IID\uff09\u3002\u672c\u6587\u5047\u8bbe\u6bcf\u4e2a\u5ba2\u6237\u7aef\u4e2d\u6570\u636e\u5f02\u6784(\u683c\u5f0f\u3001\u7ed3\u6784\u3001\u8bed\u4e49\u7b49\u5b58\u5728\u5dee\u5f02)\u4e14\u6807\u7b7e\u5206\u5e03\u503e\u659c(\u4e0d\u540c\u7c7b\u6837\u672c\u6570\u91cf\u5206\u5e03\u4e0d\u5e73\u8861)\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_4","title":"\u9057\u5fd8\u95ee\u9898","text":"<p>\u5ba2\u6237\u7aef\u4ec5\u88ab\u6388\u6743\u7528\u5f53\u524d\u65b0\u4efb\u52a1\u4e0b\u7684\u6570\u636e\u66f4\u65b0\u6a21\u578b\uff0c\u8fd9\u901a\u5e38\u5bfc\u81f4\u5148\u524d\u4efb\u52a1\u6027\u80fd\u663e\u8457\u4e0b\u964d\u3002\u4e00\u822c\u7531\u7f51\u7edc\u53c2\u6570\u88ab\u66f4\u65b0\u65f6\uff0c\u5148\u524d\u5b66\u4e60\u7684\u6743\u91cd\u88ab\u66f4\u65b0\u8986\u76d6\u5bfc\u81f4\u3002\u672c\u6587\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u5f53\u524d\u7c7b\u96c6 Ck \u4e0a\u7684\u5206\u7c7b\u9519\u8bef\u7684\u540c\u65f6\uff0c\u6700\u5c0f\u5316\u5148\u524d\u5b66\u4e60\u7c7b\u7684\u53d8\u5316\u3002</p> <p> Catastrophic Forgetting</p> <p>\u76ee\u6807\u51fd\u6570\uff1a</p> \\[\\min_{\\theta_k}\\sum_{c\\in C_k}\\sum_{i=1}^{m_c}L(f_k(x_{i,c};\\theta_k),c)+\\alpha R(\\theta_k,\\theta_{k-1})\\] <p>\u5176\u4e2d \\(\\theta_k\\) \u662f\u7b2c k \u8f6e\u7684\u6a21\u578b\u53c2\u6570\uff0c\\(L\\) \u662f\u6d4b\u91cf\u5206\u7c7b\u9519\u8bef\u7684\u635f\u5931\u51fd\u6570\uff0c\\(R\\) \u4e3a\u60e9\u7f5a\u5148\u524d\u6a21\u578b\u53d8\u5316\u7684\u6b63\u5219\u5316\u9879\uff0c\\(m_c\\) \u4e3a c \u7c7b\u4e2d\u7684\u6570\u636e\u6570\uff0c\\(\\alpha\\)\u4e3a\u63a7\u5236\u6b63\u5219\u5316\u5f3a\u5ea6\u7684\u8d85\u53c2\u6570\uff0c\\(f_k\\) \u8868\u793a\u5206\u7c7b\u6a21\u578b\u3002\\(R\\) \u9f13\u52b1\u5f53\u524d\u4efb\u52a1\u4e0b\u6a21\u578b\u66f4\u65b0\u53c2\u6570\u63a5\u8fd1\u5148\u524d\u53c2\u6570\u6765\u9632\u6b62\u707e\u96be\u6027\u9057\u5fd8\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_5","title":"\u5bf9\u9057\u5fd8\u7a0b\u5ea6\u7684\u8861\u91cf","text":"\\[\\mathcal{F}_k=\\frac1{k-1}\\sum_{j=1}^{k-1}f_j^k\\] <p>\u5176\u4e2d \\(F_k\\) \u8868\u793a\u7b2c k \u4e2a\u4efb\u52a1\u7684\u5e73\u5747\u9057\u5fd8\uff0c\\(f^k_j\\) \u5728\u6a21\u578b\u6301\u7eed\u8bad\u7ec3\u5230\u4efb\u52a1 k \u4e4b\u540e\u91cf\u5316\u4e86\u7b2c j \u4e2a\u4efb\u52a1\u7684\u9057\u5fd8\u3002\u5177\u4f53\u8868\u793a\u5982\u4e0b\uff1a</p> \\[f_j^k=\\frac1{|\\mathcal{C}^j|}\\sum_{c\\in\\mathcal{C}^j}\\max_{t\\in\\{1,....N-1\\}}\\left(\\mathcal{A}_c^{(n)}-\\mathcal{A}_c^{(N)}\\right)\\] <p>\u5176\u4e2d \\(C_j\\) \u662f\u7b2c j \u4e2a\u4efb\u52a1\u76f8\u5173\u7684\u4e00\u7ec4\u7c7b\uff0cA(n) \u662f\u7b2c t \u8f6e c \u7c7b\u7684\u51c6\u786e\u5ea6\uff0c\\(A^{(N)}_c\\) \u662f\u5b66\u4e60\u6240\u6709\u4efb\u52a1\u540e c \u7c7b\u7684\u6700\u7ec8\u51c6\u786e\u5ea6\u3002\\(f^k_j\\) \u5728\u5b66\u4e60\u7b2c k \u4e2a\u4efb\u52a1\u540e\u6355\u83b7\u4e86\u7b2c j \u4e2a\u4efb\u52a1\u7684\u6bcf\u4e2a\u7c7b\u7684\u5cf0\u503c\u51c6\u786e\u5ea6\u548c\u6700\u7ec8\u51c6\u786e\u5ea6\u4e4b\u95f4\u7684\u5e73\u5747\u5dee\u8ddd\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_6","title":"\u6a21\u578b\u5efa\u7acb","text":"<p> TARGET</p> <ul> <li>\u5229\u7528\u5148\u524d\u8bad\u7ec3\u7684\u5168\u5c40\u6a21\u578b\u5c06\u65e7\u4efb\u52a1\u7684\u77e5\u8bc6\u8f6c\u79fb\u5230\u65b0\u4efb\u52a1\u4e0a\u3002</li> <li>\u8bad\u7ec3\u4e00\u4e2a\u751f\u6210\u5668\u6765\u5408\u6210\u6570\u636e\uff0c\u6a21\u62df\u6bcf\u4e2a\u5ba2\u6237\u7aef\u7684\u6570\u636e\u5206\u5e03\u3002</li> </ul>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_7","title":"\u670d\u52a1\u5668\u7aef\uff1a\u4e3a\u65e7\u4efb\u52a1\u5408\u6210\u6570\u636e","text":"<p>\u7ed9\u5b9a\u5728\u4efb\u52a1 \\(k-1\\) \u4e0a\u8bad\u7ec3\u7684\u5168\u5c40\u6559\u5e08\u6a21\u578b \\(\\theta_{k-1}\\) \uff0c\u521d\u59cb\u5316\u751f\u6210\u5668 \\(G\\) \u4e0e\u5b66\u751f\u6a21\u578b \\(\\theta_S\\)\uff0c\u91cd\u590d\uff1a</p> <ol> <li>\u4f18\u5316\u751f\u6210\u5668\u751f\u6210\u7b26\u5408\u5168\u5c40\u6a21\u578b\u5206\u5e03\u7684\u6570\u636e\u3002</li> <li>\u901a\u8fc7\u5408\u6210\u6570\u636e\u4ece\u6559\u5e08\u6a21\u578b\u4e2d\u63d0\u53d6\u77e5\u8bc6\uff0c\u66f4\u65b0\u5b66\u751f\u6a21\u578b\u3002</li> </ol> <p>\u751f\u6210\u6570\u636e\uff1a \u5229\u7528 \\(G\\) \u4ece\u566a\u58f0\u5408\u6210\u6570\u636e\uff0c\u6700\u5c0f\u5316\u4ea4\u53c9\u71b5\u635f\u5931\uff1a</p> \\[\\mathcal{L}_G^{ce}=CE(\\theta_{k-1}(\\hat{x}),\\hat{y})\\] <p>\u4ec5\u4f7f\u7528CE\u53ef\u80fd\u5bfc\u81f4 \\(G\\) \u8fc7\u5ea6\u62df\u5408\u8fdc\u79bb\u51b3\u7b56\u8fb9\u754c\u7684\u6570\u636e\uff0c\u4e3a\u4e86\u751f\u6210\u66f4\u63a5\u8fd1\u51b3\u7b56\u8fb9\u754c\u7684\u6570\u636e\uff0c\u5f15\u5165\u8fb9\u754c\u652f\u6301\u635f\u5931\uff1a</p> \\[ \\begin{aligned}&amp;\\mathcal{L}_{G}^{div}=-\\omega KL(\\theta_{k-1}(\\hat{x})\\theta_{S}(\\hat{x})),\\text{and}\\\\&amp;\\omega=\\mathbb{1}(\\arg\\max\\theta_{k-1}(\\hat{x})\\neq\\arg\\max\\theta_{S}(\\hat{x}))\\end{aligned} \\] <p>KL\u6563\u5ea6\u8861\u91cf\u5b9e\u9645\u5206\u5e03\u4e0e\u7406\u8bba\u5206\u5e03\u95f4\u7684\u5dee\u5f02\uff0c\u901a\u8fc7\u6700\u5927\u5316\uff08?\uff09KL\u6563\u5ea6\u635f\u5931\u751f\u6210\u66f4\u597d\u7684\u6570\u636e\u3002</p> <p>\u540c\u65f6\uff0c\u5f15\u5165BN\u7a33\u5b9a\u6570\u636e\u5206\u5e03\uff0c\u63d0\u9ad8\u751f\u6210\u5668\u8bad\u7ec3\u7a33\u5b9a\u6027\uff0c\u5e76\u5728\u603b\u635f\u5931\u4e2d\u52a0\u5165\u6279\u5f52\u4e00\u5316\u635f\u5931\u3002</p> \\[\\mathcal{L}_G^{bn}=\\sum_l(||\\mu_l(\\hat{x})-\\mu_l||+||\\sigma_l^2(\\hat{x})-\\sigma_l^2||)\\] <p>\u603b\u635f\u5931\u5982\u4e0b\uff1a</p> \\[\\mathcal{L}_G=\\mathcal{L}_G^{ce}+\\lambda_1\\mathcal{L}_G^{div}+\\lambda_2\\mathcal{L}_G^{bn}\\] <p>\u6a21\u578b\u84b8\u998f\uff1a \u5f15\u5165\u5b66\u751f\u6a21\u578b\u5e2e\u52a9\u8bad\u7ec3\u751f\u6210\u5668\u4ee5\u4ea7\u751f\u66f4\u9ad8\u591a\u6837\u6027\u7684\u6570\u636e\uff0c\u5e76\u7528\u8bad\u7ec3\u51e0\u8f6e\u7684\u751f\u6210\u5668\u7684\u5408\u6210\u6570\u636e\u4e0e\u6559\u5e08\u6a21\u578b\u7684\u8f93\u51fa\u6765\u8bad\u7ec3\u5b66\u751f\u6a21\u578b\uff0c\u4f7f\u7528KL\u635f\u5931\u8fdb\u884c\u77e5\u8bc6\u84b8\u998f\u3002</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_8","title":"\u5ba2\u6237\u7aef\uff1a\u4f7f\u7528\u5168\u5c40\u4fe1\u606f\u66f4\u65b0","text":"<p>\u5728\u5ba2\u6237\u7aef\uff0c\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4f7f\u7528\u524d\u4e00\u4e2a\u4efb\u52a1\u548c\u5f53\u524d\u4efb\u52a1\u7684\u771f\u5b9e\u8bad\u7ec3\u6570\u636e\u6240\u5408\u6210\u7684\u6570\u636e\uff0c\u7136\u540e\u6211\u4eec\u540c\u65f6\u8bad\u7ec3\u4e24\u4e2a\u6570\u636e\u96c6\u5728\u4efb\u52a1 k \u4e0a\u7684\u5c40\u90e8\u6a21\u578b \\(\\theta_k\\)\u3002\u7531\u4e8e\u4f7f\u7528\u5168\u5c40\u6a21\u578b\u548c\u5168\u5c40\u6570\u636e\u53ef\u4ee5\u51cf\u8f7b\u9057\u5fd8\uff0c\u6211\u4eec\u901a\u8fc7\u6700\u5c0f\u5316\u4ee5\u4e0b\u76ee\u6807\u51fd\u6570\u6765\u63d0\u53d6\u5168\u5c40\u6559\u5e08\u6a21\u578b\u548c\u5168\u5c40\u5408\u6210\u6570\u636e\u7684\u77e5\u8bc6\uff1a</p> \\[\\mathcal{L}_{client}=\\underbrace{CE(\\theta_k(x),y)}_{\\text{for current task}}+\\alpha\\cdot\\underbrace{KL(\\theta_{k-1}(\\hat{x}),\\theta_k(\\hat{x}))}_{\\text{for previous tasks}}\\]","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_9","title":"\u5b9e\u9a8c\u7ed3\u679c","text":"","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_10","title":"\u707e\u96be\u6027\u9057\u5fd8","text":"<p> Forgetting</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#non-iid","title":"\u4e0d\u540c\u7a0b\u5ea6Non-IID\u4e0b\u7684\u8868\u73b0","text":"<p> Non-IID</p>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/29/federated-learning-paper1/#_11","title":"\u7ed3\u8bba","text":"<ol> <li>\u4ecb\u7ecd\u57fa\u4e8e\u65e0\u8303\u4f8b\u84b8\u998f\u7684\u8054\u5408\u7c7b\u8fde\u7eed\u5b66\u4e60\u65b9\u6cd5\u3002</li> <li>\u7f13\u89e3\u707e\u96be\u6027\u9057\u5fd8\u95ee\u9898\u3002</li> <li>\u9002\u5408\u9690\u79c1\u654f\u611f\u573a\u666f\u3002</li> </ol>","tags":["Faderated Learning","Class -Continual Learning"]},{"location":"blog/2024/05/02/this-is-a-blog-demo/","title":"This is the first blog I create using mkdocs","text":"<p>This blog helps me get familiar with how to use the blog plugin in mkdocs. And we shall go through several basic steps when buliding a mkdocs blog. High-level skills are not being discussed in this blog.</p>","tags":["mkdocs","template"]},{"location":"blog/2024/05/02/this-is-a-blog-demo/#begin-with-the-metadata","title":"Begin with the metadata","text":"<p>To start with, notice that metadata reserve a place in the very beginning of our blog, which is a parameter where we can add blog message such as author info and categories, the following markdown block gives a template of how we can specific the meta data.  Markdown<pre><code>---\n# [author info, specify in .authors.yml]\nauthors: \n    - mingkun\n# [category info, automatically calssified]\ncategories:\n    - choose proper category\n# [spacific date]\ndate: year-month-day\n# [tag info]\ntag: choose proper tag\n# [shortened description of your post in URL]\nslug: choose proper slug\n\n---\n</code></pre> As for the .author.yml, you should first create a file named  <code>.authors.yml</code> under this path: <code>./docs/blog/.authors.yml</code>, the following block gives you the content of mine as a demo.</p> Text Only<pre><code>authors:\n  mingkun:\n    name: Mingkun Chang\n    description: Creator\n    avatar: https://avatars.githubusercontent.com/u/139034298?v=4\n    url: https://github.com/Nijikadesu\n</code></pre>","tags":["mkdocs","template"]},{"location":"blog/2024/05/02/this-is-a-blog-demo/#a-separator-can-make-your-blog-page-cleaner","title":"A separator can make your blog page cleaner","text":"<p>To be continue, since your artical will be fully presented on the blog page if you didn't add a <code>&lt;!---more---&gt;</code> separator, adding a separator can make your blog home page cleaner and easy to access. </p> <p>So, don't be hesitate to add a <code>&lt;!---more---&gt;</code> separator after the first few paragraphs of your post which you want others to see firstly.</p> <p>A demo from the Official Website is shown as follows.</p> Markdown<pre><code># Hello world!\n\nLorem ipsum dolor sit amet, consectetur adipiscing elit. Nulla et euismod\nnulla. Curabitur feugiat, tortor non consequat finibus, justo purus auctor\nmassa, nec semper lorem quam in massa.\n\n&lt;!-- more --&gt;\n...\n</code></pre>","tags":["mkdocs","template"]},{"location":"blog/2024/05/02/this-is-a-blog-demo/#deal-with-images","title":"Deal with images","text":"<p>Here are three usual ways you can follow to append images in your webpage.</p> Text Only<pre><code># Method 1\n![Image title](https://dummyimage.com/300x200/eee/aaa){ align=left }\nImage will be shown on the left side.\nContent will be shown on the right side.\n\n# Method 2\n&lt;figure markdown&gt; \n    ![Image title](https://dummyimage.com/600x400/){ width=\"300\" }\n    &lt;figcaption&gt;Image Title&lt;/figcaption&gt;\n&lt;/figure&gt;\n\n# Method 3\n![Image title](https://dummyimage.com/600x400/){ loading=lazy }\n</code></pre>","tags":["mkdocs","template"]},{"location":"blog/2024/05/02/this-is-a-blog-demo/#results-display","title":"Results display","text":"<p>The blog home page demo and the blog content page demo are shown as follows.</p> <p> blog home page</p> <p> blog content page</p>","tags":["mkdocs","template"]},{"location":"blog/2024/05/02/this-is-a-blog-demo/#learn-more","title":"learn more","text":"<p>Get more infomation and high-level blog building skills from:</p> <p>[1] https://squidfunk.github.io/mkdocs-material/setup/setting-up-a-blog/#writing-your-first-post</p> <p>[2] https://squidfunk.github.io/mkdocs-material/plugins/blog/#usage</p> <p>[3] https://shafish.cn/blog/mkdocs/#__tabbed_12_3</p> <p>Thanks for their sharing!</p>","tags":["mkdocs","template"]},{"location":"blog/2024/05/17/pandas1/","title":"Pandas Tutorial | \u521b\u5efa\uff0c\u8bfb\u51fa\u4e0e\u5199\u5165","text":"<p>\u672c\u6559\u7a0b\u6765\u81eakaggle Learn\u677f\u5757\uff0c\u7b14\u8005\u5728\u5176Pandas Tutorial\u57fa\u7840\u4e0a\u505a\u4e86\u4e00\u4e9b\u603b\u7ed3\u8865\u5145\uff0c\u5e76\u8bb0\u5f55\u5728\u6b64\u535a\u5ba2\u4e2d\u3002</p> <p>\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u6570\u636e\u7684\u521b\u5efa\uff0c\u8bfb\u51fa\u4e0e\u5199\u5165\u3002</p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas1/#_1","title":"\u521b\u5efa\u6570\u636e","text":"","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas1/#dataframe","title":"DataFrame | \u6570\u636e\u6846","text":"<p>DataFrame\u662f\u4e00\u4e2a\u6570\u636e\u8868\uff0c\u5b83\u5305\u542b\u4e00\u7cfb\u5217\u5355\u72ec\u7684\u6761\u76ee\uff0c\u6bcf\u4e2a\u6761\u76ee\u90fd\u6709\u7279\u5b9a\u7684\u503c\uff0c\u6bcf\u4e2a\u6761\u76ee\u5bf9\u5e94\u4e8e\u4e00\u884c\u6216\u4e00\u5217\u3002</p> <p>\u4ee5\u4e0b\u7ed9\u51fa\u4e86\u4e00\u4e2aDataFrame\u7684\u521d\u59cb\u5316\u5b9e\u4f8b\uff1a</p> <p>Python<pre><code>pd.DataFrame({'Yes': [50, 21], 'No': [131, 2]})\n</code></pre> \u4ea7\u751f\u5982\u4e0b\u8f93\u51fa:</p> <p></p> <p>DataFrame\u652f\u6301\u591a\u79cd\u6570\u636e\u7c7b\u578b\u7684\u6761\u76ee\u3002</p> <p>\u6211\u4eec\u4f7f\u7528<code>pd.DataFrame()</code>\u6784\u9020\u51fd\u6570\u6765\u751f\u6210\u8fd9\u4e9bDataFrame\u5bf9\u8c61\uff0c\u58f0\u660e\u65b0\u5217\u7684\u8bed\u6cd5\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u5176\u503c\u4e3a\u6761\u76ee\u5217\u8868\uff0c\u8fd9\u662f\u6784\u5efaDataFrame\u5bf9\u8c61\u7684\u6807\u51c6\u65b9\u6cd5\u3002</p> <p>DataFrame\u7684\u5217\u6807\u7b7e\u7531\u521d\u59cb\u5316\u53c2\u6570\u5b57\u5178\u7684key\u503c\u7ed9\u51fa\uff0c\u800c\u9ed8\u8ba4\u521d\u59cb\u5316\u5176\u884c\u6807\u7b7e\u4e3a\u4ece0\u5f00\u59cb\u7684\u5347\u5e8f\u8ba1\u6570\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u51fd\u6570\u4e2d\u4f7f\u7528<code>index</code>\u53c2\u6570\u4e3a\u5176\u8d4b\u503c\u3002</p> Python<pre><code>pd.DataFrame({'Bob': ['I like it.', 'It was awful.']\n              'Sue': ['Pretty good.', 'Bland.']}, \n              index = ['Product A', 'Product B'])\n</code></pre> <p>\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa\uff1a</p> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u5229\u7528\u4e8c\u7ef4\u5217\u8868\u521d\u59cb\u5316DataFrame\u5185\u5bb9\uff0c\u5e76\u901a\u8fc7<code>columns</code>\u53c2\u6570\u8bbe\u7f6eDataFrame\u4e2d\u7684\u5217\u6807\u7b7e\uff0c\u901a\u8fc7<code>index</code>\u53c2\u6570\u8bbe\u7f6e\u5217\u6807\u7b7e\u3002</p> Python<pre><code>fruits = pd.DataFrame([[30, 21], [41, 34]], columns=['Apples',  'Bananas'],\n                      index=['2017 Sales', '2018 Sales'])\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas1/#series","title":"Series | \u5e8f\u5217","text":"<p>\u7cfb\u5217\u662f\u6570\u636e\u503c\u7684\u5e8f\u5217\uff0c\u5982\u679c\u8bf4DataFrame\u662f\u4e00\u4e2a\u8868\uff0c\u90a3\u4e48Series\u5c31\u662f\u4e00\u4e2a\u5217\u8868\uff0c\u6211\u4eec\u4f7f\u7528<code>pd.Series()</code>\u6784\u9020\u51fd\u6570\u751f\u6210\u4e00\u4e2apandas\u5e8f\u5217\uff0c\u5c06\u4e00\u4e2a\u5217\u8868\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u3002</p> Python<pre><code>pd.Series([1, 2, 3, 4, 5])\n</code></pre> <p>\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa\uff1a</p> <p></p> <p>\u672c\u8d28\u4e0a\uff0cSeries\u662fDataFrame\u7684\u5355\u5217\uff0c\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528<code>index</code>\u53c2\u6570\u5c06\u884c\u6807\u7b7e\u5206\u914d\u7ed9\u7cfb\u5217\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0cSeries\u6ca1\u6709\u5217\u540d\uff0c\u5b83\u53ea\u6709\u4e00\u4e2a\u6574\u4f53\u6807\u9898<code>name</code></p> Python<pre><code>pd.Series([30, 35, 40], index=['2015 Sales', '2016 Sales', '2017 Sales'],\n          name='Product A')\n</code></pre> <p>\u4ea7\u751f\u5982\u4e0b\u8f93\u51fa\uff1a</p> <p></p> <p>Series\u4e0eDataFrame\u5bc6\u5207\u76f8\u5173\uff0c\u53ef\u4ee5\u5c06DataFrame\u89c6\u4e3a\u4e00\u5806\u7c98\u5728\u4e00\u8d77\u7684Series\u3002</p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas1/#reading-data-files","title":"Reading data files | \u8bfb\u53d6\u6570\u636e\u6587\u4ef6","text":"<p>\u6700\u57fa\u672c\u4e5f\u662f\u6700\u7b80\u5355\u7684\u6570\u636e\u5b58\u50a8\u6587\u4ef6\u4e3aCSV\u6587\u4ef6\uff0c\u7531\u4e8e\u5176\u6587\u4ef6\u5185\u5bb9\u7531\u9017\u53f7\u5206\u9694\uff0c\u4fbf\u79f0\u4e3a\u9017\u53f7\u5206\u9694\u503c\u6587\u4ef6 (\"Comma-Separated Values\" or CSV)\u3002</p> <p>\u6211\u4eec\u4f7f\u7528'pd.read_csv()'\u51fd\u6570\u5c06\u6587\u4ef6\u6570\u636e\u8bfb\u5165DataFrame\u3002</p> Python<pre><code>wine_reviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\")\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528<code>shape</code>\u5c5e\u6027\u68c0\u67e5\u521b\u5efa\u7684DataFrame\u7684\u5927\u5c0f\u3002</p> Python<pre><code>wine_reviews.shape\n# outputs:\n# (129971, 14)\n</code></pre> <p>\u6211\u4eec\u4f7f\u7528<code>head()</code>\u547d\u4ee4\u68c0\u67e5\u751f\u6210\u7684DataFrame\u7684\u5185\u5bb9\uff0c\u8be5\u547d\u4ee4\u83b7\u53d6DataFrame \u7684\u524d\u4e94\u884c\u4fe1\u606f\u3002</p> Python<pre><code>wine_reviews.head()\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u4ece\u4e0a\u56fe\u4e2d\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u5728country\u548cDataFrame\u7d22\u5f15\u4e4b\u95f4\u5b58\u5728\u4e00\u5217<code>\u672a\u547d\u540d</code>\u7d22\u5f15\uff0c\u8fd9\u662fCSV\u6587\u4ef6\u7684\u5185\u7f6e\u7d22\u5f15\uff0cCSV\u6587\u4ef6\u5728\u88ab\u8bfb\u5165\u5230DataFrame\u4e2d\u65f6\uff0c Pandas\u4e0d\u4f1a\u81ea\u52a8\u83b7\u53d6\u8be5\u7d22\u5f15\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>index_col</code>\u53c2\u6570\u6307\u5b9a\u5185\u7f6e\u7d22\u5f15\u4f5c\u4e3aDataFrame\u7684\u7d22\u5f15\u503c\u3002</p> Text Only<pre><code>wine_reviews = pd.read_csv(\"../input/wine-reviews/winemag-data-130k-v2.csv\",\n                           index_col = 0)\n</code></pre> <p>\u6b64\u65f6\uff0c\u5f53\u6211\u4eec\u518d\u6b21\u8fd0\u884c<code>wine_reviews.head()</code>\uff0c\u4f1a\u53d1\u73b0\u4e0a\u56fe\u4e2d\u7684<code>\u672a\u547d\u540d</code>\u7d22\u5f15\u4e0d\u518d\u51fa\u73b0\u3002</p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas1/#save-dataframes-as-csv-files-csv","title":"Save DataFrames as CSV files | \u4fdd\u5b58\u4e3aCSV\u6587\u4ef6","text":"<p>\u6211\u4eec\u4f7f\u7528<code>pd.to_csv()</code>\u5c06DataFrame\u4fdd\u5b58\u4e3aCSV\u6587\u4ef6\uff0c\u53c2\u6570\u4e3a\u6587\u4ef6\u540d\uff0c\u4fdd\u5b58\u5728\u5f53\u524d\u7a0b\u5e8f\u6587\u4ef6\u7684\u540c\u7ea7\u6587\u4ef6\u5939\u4e0b\u3002</p> Python<pre><code>wine_reviews.to_csv(\"wine_reviews_new.csv\")\n</code></pre>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/","title":"Pandas Tutorial | \u7d22\u5f15\uff0c\u9009\u62e9\u4e0e\u5206\u914d","text":"<p>\u672c\u6559\u7a0b\u6765\u81eakaggle Learn\u677f\u5757\uff0c\u7b14\u8005\u5728\u5176Pandas Tutorial\u57fa\u7840\u4e0a\u505a\u4e86\u4e00\u4e9b\u603b\u7ed3\u8865\u5145\uff0c\u5e76\u8bb0\u5f55\u5728\u6b64\u535a\u5ba2\u4e2d\u3002</p> <p>\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u4eec\u5c06\u5b66\u4e60\u6570\u636e\u7684\u7d22\u5f15\uff0c\u9009\u62e9\u4e0e\u5206\u914d\u3002</p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#native-accessors","title":"Native accessors | \u672c\u5730\u8bbf\u95ee\u5668","text":"<p>\u5728Python\u4e2d\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5c06\u5bf9\u8c61\u7684\u5c5e\u6027\u4f5c\u4e3a\u5c5e\u6027\u6765\u8bbf\u95ee\u5b83\uff0c\u4f8b\u5982\u4e00\u4e2a<code>book</code>\u5bf9\u8c61\u53ef\u80fd\u5177\u6709<code>title</code>\u5c5e\u6027\uff0c\u5219\u6211\u4eec\u901a\u8fc7<code>book.title</code>\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u8bbf\u95ee\uff0cDataFrame\u4e5f\u5177\u6709\u7c7b\u4f3c\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>.</code>\u8bbf\u95eeDataFrame\u7684\u5217\u5c5e\u6027\u3002</p> <p>\u8003\u8651\u5982\u4e0bDataFrame\uff1a</p> <p></p> <p>\u8981\u8bbf\u95ee<code>reviews</code>\u7684<code>country</code>\u5c5e\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a</p> Python<pre><code>reviews.country\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u6211\u4eec\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u7b26<code>[]</code>\u8bbf\u95ee\u5b83\u7684\u503c\uff0c\u5e76\u53d6\u5f97\u4e0e\u4e0a\u56fe\u76f8\u540c\u7684\u7ed3\u679c\uff1a</p> Python<pre><code>reviews['country']\n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u518d\u6b21\u901a\u8fc7\u7d22\u5f15\u8fd0\u7b97\u7b26<code>[]</code>\u6df1\u5165\u5230\u67d0\u4e00\u5217\u7684\u7279\u5b9a\u884c\u3002</p> Python<pre><code>reviews['country'][0]\n# outputs:\n#   'Italy'\n</code></pre>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#indexing-in-pandas-pandas","title":"Indexing in pandas | Pandas\u7d22\u5f15","text":"","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#_1","title":"\u57fa\u4e8e\u7d22\u5f15\u7684\u9009\u62e9","text":"<p>\u6211\u4eec\u4f7f\u7528<code>pd.iloc</code>\u6765\u901a\u8fc7\u6570\u636e\u5728\u6570\u636e\u8868\u4e2d\u7684\u5750\u6807\u4f4d\u7f6e\u6765\u9009\u62e9\u6570\u636e\u3002</p> <p>\u4f8b\u5982\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u6cd5\u83b7\u53d6DataFrame\u4e2d\u7684\u7b2c\u4e00\u884c\u6570\u636e\uff1a</p> Python<pre><code>reviews.iloc[0]\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u4e0eDataFrame\u7684\u7d22\u5f15\u65b9\u5f0f\u4e0d\u540c\uff0c<code>pd.loc</code>\u9075\u5faa\u884c\u6709\u9650\u4e8e\u5217\u7684\u7d22\u5f15\u89c4\u5219\uff0c\u4e0b\u6587\u5c06\u8981\u63d0\u5230\u7684<code>pd.iloc</code>\u540c\u6837\u9075\u5faa\u6b64\u89c4\u5219\u3002</p> <p>\u56e0\u6b64\uff0c\u5982\u679c\u6211\u4eec\u60f3\u8981\u83b7\u53d6DataFrame\u4e2d\u7684\u7b2c\u4e00\u5217\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\uff1a</p> Python<pre><code>reviews.iloc[:, 0]\n</code></pre> <p></p> <p>\u4ece\u5355\u5217\u5207\u7247\u7684\u6253\u5370\u7ed3\u679c\u4e2d\u53ef\u4ee5\u53d1\u73b0\uff0c\u5217\u6807\u9898\u662f\u4f5c\u4e3a\u8be5\u5207\u7247\u7684<code>name</code>\u5c5e\u6027\u5b58\u5728\u7684\uff0c\u8fd9\u5370\u8bc1\u4e86\u6211\u4eec\u5728\u7b2c\u4e00\u7bc7\u535a\u5ba2\u4e2d\u7684\u8bba\u70b9\uff0c\u5373DataFrame\u53ef\u4ee5\u770b\u6210\u4e00\u7cfb\u5217\u7c98\u5408\u7684Series\u3002</p> <p>\u4e0a\u6587\u4e2d\uff0c<code>:</code>\u8fd0\u7b97\u7b26\u7528\u4e8e\u6307\u793a\u503c\u7684\u8303\u56f4\uff0c\u5728<code>pd.iloc</code>\u4e2d\uff0c\u5b83\u9075\u5faa\u5de6\u95ed\u53f3\u5f00\u7684\u539f\u5219\uff0c\u800c\u5728\u4e0b\u6587\u5c06\u8981\u63d0\u5230\u7684<code>pd.loc</code>\u4e2d\uff0c\u5b83\u9075\u5faa\u5168\u95ed\u7684\u539f\u5219\uff0c\u4e0b\u9762\u7ed9\u51fa\u793a\u4f8b\uff1a</p> Python<pre><code># \u5bf9\u7b2c\u4e00\u5217\u7684\u524d\u4e09\u884c\u8fdb\u884c\u5207\u7247\nreviews.iloc[:3, 0]\n\n# \u5bf9\u7b2c\u4e00\u5217\u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u8fdb\u884c\u5207\u7247\nreviews.iloc[1:3, 0]\n\n# \u4e5f\u53ef\u4ee5\u4f20\u9012\u4e00\u4e2a\u5217\u8868\uff0c\u6307\u5b9a\u8981\u8fdb\u884c\u5207\u7247\u64cd\u4f5c\u7684\u884c/\u5217\nreviews.iloc[[1, 2, 3], 0]\n\n# \u652f\u6301\u590d\u6570\u7d22\u5f15\nreviews.iloc[-5:, 0]\n</code></pre>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#_2","title":"\u57fa\u4e8e\u6807\u7b7e\u7684\u9009\u62e9","text":"<p>\u6211\u4eec\u4f7f\u7528<code>pd.loc</code>\u6765\u901a\u8fc7\u6807\u7b7e\u540d\u7d22\u5f15\u503c\uff0c\u800c\u4e0d\u662f\u4f4d\u7f6e\u3002</p> <p>\u8981\u83b7\u53d6reviews\u4e2d\u7684\u7b2c\u4e00\u4e2a\u6761\u76ee\uff0c\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> Python<pre><code>reviews.loc[0, 'country']\n# outputs\n#   'Italy'\n</code></pre> <p>\u5f53\u4f60\u7684\u6570\u636e\u96c6\u5177\u6709\u67d0\u4e9b\u6709\u610f\u4e49\u7684\u7d22\u5f15\u65f6\uff0c\u5229\u7528<code>loc</code>\u64cd\u4f5c\u4f1a\u4f7f\u68c0\u7d22\u8fc7\u7a0b\u53d8\u5f97\u5bb9\u6613\u3002</p> <p>\u4f8b\u5982\uff1a</p> Python<pre><code>reviews.loc[:, ['taster_name', 'taster_twitter_handle', 'points']]\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#_3","title":"\u64cd\u4f5c\u7d22\u5f15","text":"<p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528<code>pd.set_index()</code>\u6765\u4e3a\u5f53\u524dDataFrame\u91cd\u65b0\u8bbe\u7f6e\u7d22\u5f15\uff0c\u4e14\u65b0\u7d22\u5f15\u4e3a\u5f53\u524d\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\u5217\u3002</p> <p>\u6bd4\u5982\uff0c\u6211\u4eec\u60f3\u5c06<code>reviews</code>\u4e2d\u7684<code>title</code>\u5217\u8bbe\u7f6e\u4e3a\u65b0\u6570\u636e\u8868\u7684\u7d22\u5f15\uff1a</p> Python<pre><code>reviews.set_index(\"title\")\n</code></pre> <p>\u6548\u679c\u5982\u4e0b\uff1a</p> <p></p>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#_4","title":"\u6761\u4ef6\u9009\u62e9","text":"<p>\u4e3a\u4e86\u5229\u7528\u6570\u636e\u505a\u66f4\u6709\u8da3\u7684\u4e8b\u60c5\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u6839\u636e\u6761\u4ef6\u63d0\u51fa\u95ee\u9898\u3002</p> <p>\u6bd4\u5982\uff0c\u6211\u4eec\u5bf9\u610f\u5927\u5229\u751f\u4ea7\u7684\u4f18\u4e8e\u5e73\u5747\u6c34\u5e73\u7684\u8461\u8404\u9152\u7279\u522b\u611f\u5174\u8da3\uff1a</p> Python<pre><code>reviews.loc[reviews.country == 'Italy']\n</code></pre> <p>\u6548\u679c\uff1a</p> <p></p> <p>\u6211\u4eec\u60f3\u8981\u67e5\u770b\u5176\u4e2d\u8bc4\u5206\u5927\u4e8e\u7b49\u4e8e90\u5206\u7684\u8461\u8404\u9152\uff0c\u8fd9\u5c31\u6d89\u53ca\u5230\u903b\u8f91\u8ba1\u7b97\u7684\u64cd\u4f5c\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7<code>&amp;</code>\u6765\u8868\u793a\u903b\u8f91\u5408\u53d6\uff0c\u901a\u8fc7<code>|</code>\u6765\u8868\u793a\u903b\u8f91\u6790\u53d6\uff1a</p> Python<pre><code>reviews.loc[(reviews.country == 'Italy') &amp; (reviews.points &gt;= 90)]\n</code></pre> <p>\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p></p> <p>\u6ce8\u610f\uff0c\u5728\u5199\u6761\u4ef6\u5224\u65ad\u5f0f\u65f6\uff0c\u5343\u4e07\u6ce8\u610f\u52a0\u62ec\u53f7\uff0c\u5426\u5219\u4f60\u4f1a\u53d1\u73b0\u8f93\u51fa\u7684DataFrame\u5207\u7247\u91cc\u5565\u4e5f\u6ca1\u6709\uff08\u539f\u56e0\u81ea\u5df1\u60f3\uff09\u3002</p> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u5229\u7528\u5185\u7f6e\u7684\u6761\u4ef6\u9009\u62e9\u5668<code>isin()</code>\u5b9e\u73b0\u6761\u4ef6\u9009\u62e9\u8bed\u53e5\u7684\u7b80\u5316\uff0c\u6bd4\u5982\u6211\u4eec\u60f3\u9009\u62e9\u6765\u81ea\u610f\u5927\u5229\u6216\u6cd5\u56fd\u7684\u8461\u8404\u9152\uff0c\u4ee5\u4e0b\u7684\u4e24\u4e2a\u8868\u8fbe\u5f0f\u5747\u5bfc\u5411\u76f8\u540c\u4e14\u6b63\u786e\u7684\u7ed3\u679c\uff1a</p> Python<pre><code># 1\nreviews.loc[reviews.countries.isin(['Italy', 'France'])]\n# 2\nreveiws.loc[(reviews.countries == 'Italy') | (reviews.countries == 'France')]\n</code></pre> <p>\u6211\u4eec\u8fd8\u53ef\u4ee5\u901a\u8fc7<code>isnull</code>/<code>notnull</code>\u9009\u62e9\u7a7a/\u975e\u7a7a\u7684\u503c\uff08NAN\uff09\u3002</p> Python<pre><code>reviews.loc(reviews.price.isnull())\nreviews.loc(reviews.price.notnull())\n</code></pre>","tags":["Pandas"]},{"location":"blog/2024/05/17/pandas2/#_5","title":"\u5206\u914d\u6570\u636e","text":"<p>\u6211\u4eec\u53ef\u4ee5\u76f4\u63a5\u5229\u7528\u7d22\u5f15\u65b0\u5efa\u5217\u5e76\u5206\u914d\u9759\u6001/\u53ef\u8fed\u4ee3\u6570\u636e\u3002 Python<pre><code>reviews['critics'] = 'everyone'\n</code></pre></p>","tags":["Pandas"]},{"location":"blog/2024/05/06/MLworkflow/","title":"\u6df1\u5ea6\u5b66\u4e60\u5de5\u4f5c\u6d41\u7a0b\uff08\u57fa\u4e8ePyTorch\uff09","text":"<p>\u4e00\u4e2a\u5b8c\u6574\u7684\u6df1\u5ea6\u5b66\u4e60\u5de5\u4f5c\u6d41\u7a0b\u6d89\u53ca\u5904\u7406\u6570\u636e\u3001\u521b\u5efa\u6a21\u578b\u3001\u4f18\u5316\u53c2\u6570\u548c\u4fdd\u5b58\u6a21\u578b\u7b49\u6b65\u9aa4\u3002</p> <p>\u8fd9\u7bc7blog\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5728FashionMNIST\u6570\u636e\u96c6\u4e0a\u8bad\u7ec3\u7684\u4e00\u4e2a\u56fe\u7247\u5206\u7c7b\u7f51\u7edc\u5b9e\u4f8b\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8f83\u4e3a\u89c4\u8303\u7684\u5de5\u4f5c\u6d41\u7a0b\u6a21\u677f\u3002</p>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/06/MLworkflow/#_1","title":"\u5904\u7406\u6570\u636e","text":"<p>PyTorch\u6709\u4e24\u4e2a\u5904\u7406\u6570\u636e\u7684\u65b9\u6cd5\uff1aTorch.utils.data.DataLoader\u548cTorch.utils.data.Dataset\u3002Dataset\u5b58\u50a8\u4e86\u6837\u672c\u53ca\u5176\u76f8\u5e94\u7684\u6807\u7b7e\uff0c\u800cDataLoader\u5219\u56f4\u7ed5Dataset\u5305\u88c5\u4e86\u4e00\u4e2a\u53ef\u8fed\u4ee3\u6570\u636e\u5bb9\u5668\u3002 Python<pre><code>import torch\nfrom torch import nn\nfrom torch.utils.data import DataLoader\nfrom torchvision import datasets\nfrom torchvision.transforms import ToTensor, Lambda, Compose\nimport matplotlib.pyplot as plt\n\n# \u4e0b\u8f7d\u8bad\u7ec3\u96c6\ntraining_data = datasets.FashionMNIST(\n    root='data',\n    train=True,\n    download=True,\n    transform=ToTensor(),\n)\n\n# \u4e0b\u8f7d\u6d4b\u8bd5\u96c6\ntest_data = datasets.FashionMNIST(\n    root=\"data\",\n    train=False,\n    download=True,\n    transform=ToTensor(),\n)\n\nbatch_size = 64  # \u8bbe\u7f6e\u6279\u91cf\u5927\u5c0f\n\n# \u521b\u5efadata_loaders\uff0c\u53ef\u8fed\u4ee3\u6570\u636e\u96c6\uff0c\u8fed\u4ee3\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u5c06\u8fd4\u56de\u4e00\u4e2a\u6279\u6b21\uff0c\u5305\u62ec\u6279\u91cf\u5927\u5c0f\u4e2a\u5143\u7d20\u7684\u7279\u5f81\u548c\u6807\u7b7e\ntrain_dataloader = DataLoader(training_data, batch_size=batch_size)\ntest_dataloader = DataLoader(test_data, batch_size=batch_size)\n</code></pre></p>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/06/MLworkflow/#_2","title":"\u521b\u5efa\u6a21\u578b","text":"Python<pre><code>device = \"cuda\" if torch.cuda.is_available() else \"cpu\"\n\n# \u5b9a\u4e49\u6a21\u578b\nclass NeuralNetwork(nn.Module):\n    def __init__(self):  # \u521d\u59cb\u5316\u51fd\u6570\n        super(NeauralNetwork, self).__init__()\n        self.flatten = nn.Flatten()\n        self.linear_relu_stack = nn.Sequential(\n            nn.Linear(28*28, 512),\n            nn.ReLU(),\n            nn.Linear(512, 512),\n            nn.ReLU(),\n            nn.Linear(512, 10)\n        )\n\n    def forward(self, x):  # \u524d\u5411\u4f20\u64ad\u51fd\u6570\n        x = self.flatten(x)\n        logits = self.linear_relu_stack(x)\n        return logits\n\nmodel = NearalNetwork().to(device)\n</code></pre>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/06/MLworkflow/#_3","title":"\u4f18\u5316\u53c2\u6570","text":"Python<pre><code># \u5b9a\u4e49\u635f\u5931\u51fd\u6570\uff0c\u8bc4\u4ef7\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u7ed3\u679c\u95f4\u7684\u5dee\u8ddd\nloss_fn = nn.CrossEntropyLoss()\n\n# \u5b9a\u4e49\u4f18\u5316\u5668\uff0c\u8c03\u6574\u53c2\u6570\u6765\u7f29\u5c0f\u9884\u6d4b\u7ed3\u679c\u548c\u771f\u5b9e\u7ed3\u679c\u7684\u5dee\u8ddd\noptimizer = torch.optim.SGD(model.parameters(), lr=1e-3)\n\n# \u5b9a\u4e49\u8bad\u7ec3\u51fd\u6570\ndef train(dataloader, model, loss_fn, optimizer):\n    size = len(dataloader.dataset) \n    model.train() # \u8bbe\u7f6e\u4e3a\u8bad\u7ec3\u6a21\u5f0f\uff08optimizing enable\uff09\n    for batch, (X, y) in enumerate(dataloader):\n        X, y = X.to(device), y.to(device)\n\n        # \u8ba1\u7b97\u635f\u5931\n        pred = model(X)\n        loss = loss_fn(pred, y)\n\n        # \u53cd\u5411\u4f20\u64ad\n        optimizer.zero_grad() # \u68af\u5ea6\u6e05\u96f6\n        loss.backward() # \u8bef\u5dee\u53cd\u4f20\n        optimizer.step() # \u4e00\u6b65\u66f4\u65b0\n\n        # \u56fa\u5b9a\u6279\u6b21\u6253\u5370\u8bad\u7ec3\u4fe1\u606f\n        if batch % 100 == 0\n            loss, current = loss.item(), batch * len(X)\n            print(f'loss: {loss:&gt;7f} [{current:&gt;5d}/{size:&gt;5d}]')\n\n# \u5b9a\u4e49\u6d4b\u8bd5\u51fd\u6570\ndef test(dataloader, model, loss_fn):\n    size = len(dataloader.dataset)\n    num_batchs = len(dataloader)\n    model.eval() # \u8bbe\u7f6e\u4e3a\u6d4b\u8bd5\u6a21\u5f0f\uff08optimizing disable\uff09\n    test_loss, correct = 0, 0\n    with torch.no_grad(): # \u4e0d\u8ba1\u7b97\u68af\u5ea6\uff0c\u8282\u7701\u7a7a\u95f4\n        for X, y in dataloader:\n            X, y = X.to_device(), y.to_device()\n            pred = model(X)\n            test_loss += loss_fn(pred, y).item() # tensor.item()\u8f6c\u6362\u6210\u6807\u91cf\n            correct += (pred.argmax(1) == y).type(torch.float).sum().item() # \u8ba1\u7b97\u6b63\u786e\u9884\u6d4b\u4e2a\u6570        \n    test_loss /= num_batches # \u5355\u6279\u6b21\u5e73\u5747\u8bad\u7ec3\u635f\u5931\n    correct /= size # \u7cbe\u786e\u5ea6\n    print(f'Test Error: \\n Accuracy: {*(100*correct):&gt;0.1f}%, Avg loss: {test_loss:&gt;8f} \\n')\n\n# \u8bad\u7ec3\u8fc7\u7a0b\u901a\u8fc7\u51e0\u4e2aepoch\u8fdb\u884c\uff0c\u6a21\u578b\u5728\u6bcf\u4e00\u4e2aepoch\u4e2d\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\n# \u6211\u4eec\u5e0c\u671b\u770b\u5230\u51c6\u786e\u5ea6\u5728\u6bcf\u4e2aepoch\u4e2d\u589e\u52a0\uff0c\u635f\u5931\u5728\u6bcf\u4e2aepoch\u4e2d\u51cf\u5c11\nepochs = 5\nfor t in range(epochs):\n    print(f'Epoch {t+1}\\n-----------------------------')\n    train(train_dataloader, model, loss_fn, optimizer)\n    test(test_dataloader, model, loss_fn)\nprint(\"Done!\")\n</code></pre>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/06/MLworkflow/#_4","title":"\u4fdd\u5b58\u6a21\u578b","text":"Python<pre><code># \u5e8f\u5217\u5316\u5185\u90e8\u72b6\u6001\u5b57\u5178\uff08\u5305\u542b\u6a21\u578b\u53c2\u6570\uff09\ntorch.save(model.state_dict(), \"model.pth\")\nprint(\"Saved PyTorch Model state to model.pth\")\n</code></pre>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/06/MLworkflow/#_5","title":"\u8f7d\u5165\u6a21\u578b\u5e76\u9884\u6d4b","text":"Python<pre><code>model = NeuralNetwork()\nmodel.load_state_dict(torch.load(\"model.pth\"))\n\nclasses = [\n    \"T-shirt/top\",\n    \"Trouser\",\n    \"Pullover\",\n    \"Dress\",\n    \"Coat\",\n    \"Sandal\",\n    \"Shirt\",\n    \"Sneaker\",\n    \"Bag\",\n    \"Ankle boot\",\n]\n\nmodel.eval()\nx, y = test_data[0][0], test_data[0][1]\nwith torch.no_grad():\n    pred = model(x)\n    predicted, actual = classes[pred[0].argmax(0)], classes[y]\n    print(f'Predicted: \"{predicted}\", Actual: \"{actual}\"')\n</code></pre>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/06/MLworkflow/#_6","title":"\u603b\u7ed3","text":"<p>\u4ee5\u4e0a\u5185\u5bb9\u5c55\u793a\u4e86\u5b8c\u6210\u4e00\u9879\u6df1\u5ea6\u5b66\u4e60\u57fa\u672c\u4efb\u52a1\u6240\u9700\u8981\u7684\u5168\u90e8\u5de5\u4f5c\u6d41\u7a0b, \u5728\u5b8c\u6210\u4e00\u9879\u5b9e\u9645\u4efb\u52a1\u65f6\uff0c\u5927\u81f4\u9700\u8981\u7ecf\u8fc7\u4e00\u4e0b\u51e0\u4e2a\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u786e\u5b9a\u6570\u636e\u5bf9\u8c61\uff0c\u9009\u62e9\u5408\u9002\u7684\u6279\u91cf\u5927\u5c0f\uff0c\u521b\u5efaData Loader\u5b8c\u6210\u6570\u636e\u7684\u6279\u91cf\u9884\u52a0\u8f7d\uff08\u4e00\u822c\u5206\u4e3a\u8bad\u7ec3\u96c6\u548c\u6d4b\u8bd5\u96c6\uff0c\u5b9e\u9645\u95ee\u9898\u4e2d\u4e3a\u4e86\u8c03\u53c2\u5f80\u5f80\u4f1a\u589e\u8bbek\u6298\u4ea4\u53c9\u9a8c\u8bc1\uff09\u3002</p> </li> <li> <p>\u6839\u636e\u95ee\u9898\u9700\u8981\u6784\u9020\u5408\u9002\u7684\u7f51\u7edc\u6a21\u5757\uff0c\u5b8c\u6210\u6a21\u578b\u58f0\u660e\u4e0e\u5b9e\u4f8b\u5316\u3002</p> </li> <li> <p>\u9009\u62e9\u5408\u9002\u7684\u635f\u5931\u51fd\u6570\u548c\u4f18\u5316\u5668\uff0c\u5728\u5408\u9002\u7684\u8fed\u4ee3\u6b21\u6570\u5185\u5bf9\u6a21\u578b\u8fdb\u884c\u53c2\u6570\u66f4\u65b0\uff0c\u5e76\u4e0d\u65ad\u901a\u8fc7\u9a8c\u8bc1\u96c6\u51c6\u786e\u7387\u4e0e\u635f\u5931\u5927\u5c0f\u786e\u5b9a\u6a21\u578b\u662f\u5426\u5904\u4e8e\u5b66\u4e60\u72b6\u6001\uff08\u5373\u662f\u5426\u672a\u53d1\u751f\u6b20\u62df\u5408/\u8fc7\u62df\u5408\uff09\u3002</p> </li> <li> <p>\u4fdd\u5b58\u6a21\u578b\u5185\u90e8\u53c2\u6570\uff08\u4fdd\u5b58\u5e8f\u5217\u5316\u5185\u90e8\u72b6\u6001\u5b57\u5178\uff09\uff0c\u9700\u8981\u4f7f\u7528\u65f6\u5b9e\u4f8b\u5316\u6a21\u578b\u5e76\u52a0\u8f7d\u53c2\u6570\uff0c\u5373\u53ef\u8fdb\u884c\u9884\u6d4b\u4efb\u52a1\u3002</p> </li> </ol>","tags":["\u6df1\u5ea6\u5b66\u4e60","\u5de5\u4f5c\u6d41\u7a0b"]},{"location":"blog/2024/05/07/tensor-overview/","title":"Tensor\u57fa\u7840\u64cd\u4f5c","text":"<p>PyTorch\u4e2d\uff0cTensor\uff08\u5f20\u91cf\uff09\u65f6\u64cd\u4f5c\u6570\u636e\u7684\u4e3b\u8981\u5de5\u5177\uff0c\u5b83\u662f\u4e00\u4e2a\u5305\u542b\u5355\u4e00\u7c7b\u578b\u7684\u591a\u7ef4\u77e9\u9635\uff0c\u4e0eNumPy\u6570\u7ec4\u7684\u5f62\u5f0f\u7c7b\u4f3c\uff0c\u4e5f\u5171\u4eab\u5e95\u5c42\u5185\u5b58\u4f4d\u7f6e\u3002\u4f18\u70b9\u5728\u4e8eTensor\u53ef\u4ee5\u5728GPU\u8fdb\u884c\u8fd0\u7b97\uff0c\u4ea6\u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u68af\u5ea6\u6c42\u89e3\u7b49\u64cd\u4f5c\u3002</p> <p>\u8fd9\u7bc7blog\u5c06\u4ecb\u7ecdPyTorch\u6846\u67b6\u4e0bTensor\u7684\u4e00\u4e9b\u57fa\u672c\u64cd\u4f5c\u3002</p>","tags":["\u5f20\u91cf"]},{"location":"blog/2024/05/07/tensor-overview/#_1","title":"\u5934\u6587\u4ef6","text":"Python<pre><code>import torch\nimport numpy as np\n</code></pre>","tags":["\u5f20\u91cf"]},{"location":"blog/2024/05/07/tensor-overview/#_2","title":"\u5f20\u91cf\u521d\u59cb\u5316","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u76f4\u63a5\u521d\u59cb\u5316\u3001\u4eceNumpy\u6570\u7ec4\u4e2d\u521d\u59cb\u5316\u4e0e\u4ece\u5176\u5b83tensor\u4e2d\u521d\u59cb\u5316\u6765\u521b\u5efa\u4e00\u4e2atensor Python<pre><code># \u76f4\u63a5\u521d\u59cb\u5316\ndata = [[1, 2], [3, 4]]\nx_data = torch.tensor(data)\n\n# \u4eceNumpy\u6570\u7ec4\u4e2d\u521d\u59cb\u5316\nnp_array = np.array(data)\nx_np = torch.from_numpy(np_array)\n\n# \u4ece\u5176\u5b83tensor\u4e2d\u521d\u59cb\u5316\nx_ones = torch.ones_like(x_data)  # \u521b\u5efa\u4e00\u4e2a\u4e0ex_data\u5f62\u72b6\u76f8\u540c\uff0c\u4e14\u5143\u7d20\u5168\u90e8\u4e3a1\u7684\u5411\u91cf(dtype=float32)\nx_rand = torch.rand_like(x_data)  # \u521b\u5efa\u4e00\u4e2a\u4e0ex_data\u5f62\u72b6\u76f8\u540c\uff0c\u4e14\u5143\u7d20\u4e3a(0, 1)\u533a\u95f4\u5185\u5747\u5300\u5206\u5e03\u62bd\u6837\u4ea7\u751f\u7684\u968f\u673a\u6570\nx_randn = torch.randn_like(x_data) # \u7531\u6807\u51c6\u6b63\u6001\u5206\u5e03\u62bd\u6837\u4ea7\u751f\u968f\u673a\u6570\n\n# \u7ed9\u5b9a\u5f62\u72b6\u7684\u521d\u59cb\u5316\nshape = (2, 3,)\nrand_tensor = torch.rand(shape)\nones_tensor = torch.ones(shape)\nzeros_tensor = torch.zeros(shape)\n\nprint(x_data, x_np, x_ones, x_rand, x_randn, rand_tensor, ones_tensor, zeros_tensor)\n</code></pre> \u6548\u679c Text Only<pre><code>tensor([[1., 2.],\n        [3., 4.]]) \ntensor([[1, 2],\n        [3, 4]], dtype=torch.int32) \ntensor([[1., 1.],\n        [1., 1.]]) \ntensor([[0.5376, 0.6459],\n        [0.8904, 0.7159]]) \ntensor([[0.1786, 2.6272],\n        [2.7045, 0.9933]]) \ntensor([[0.7170, 0.7762, 0.4273],\n        [0.3025, 0.3687, 0.5089]]) \ntensor([[1., 1., 1.],\n        [1., 1., 1.]]) \ntensor([[0., 0., 0.],\n        [0., 0., 0.]])\n</code></pre></p>","tags":["\u5f20\u91cf"]},{"location":"blog/2024/05/07/tensor-overview/#_3","title":"\u67e5\u770b\u5f20\u91cf\u5c5e\u6027","text":"<p>Python<pre><code>tensor = torch.randn((3, 4))\n\ntensor, tensor.shape, tensor.dtype, tensor.device\n</code></pre> \u6548\u679c Text Only<pre><code>tensor([[ 0.1958, -0.3580, -0.3055,  0.6545],\n        [ 0.5811, -0.6416, -0.4026,  0.6289],\n        [ 0.9658,  0.7655, -1.4409, -0.5016]])\n(torch.Size([3, 4]), torch.float32, device(type='cpu'))\n</code></pre></p>","tags":["\u5f20\u91cf"]},{"location":"blog/2024/05/07/tensor-overview/#_4","title":"\u5f20\u91cf\u57fa\u672c\u64cd\u4f5c","text":"<p>\u5c06\u5f20\u91cf\u4f20\u9012\u5230GPU\u52a0\u901f\u8ba1\u7b97 Python<pre><code>if torch.cuda.is_available():\n    tensor = tensor.to('cuda')\n    print('yes')\n\ntensor.device\n</code></pre> \u6548\u679c Text Only<pre><code>yes\ndevice(type='cuda', index=0)\n</code></pre> \u5229\u7528\u7d22\u5f15\u5bf9\u5f20\u91cf\u8fdb\u884c\u526a\u88c1\u3001\u6279\u91cf\u4fee\u6539\u7b49\u64cd\u4f5c Python<pre><code>print(tensor[0], tensor[:, 0], tensor[..., -1])\ntensor[:, 1] = 0\nprint(tensor)\n</code></pre> \u6548\u679c Text Only<pre><code>tensor([ 0.1958, -0.3580, -0.3055,  0.6545], device='cuda:0'),\ntensor([0.1958, 0.5811, 0.9658], device='cuda:0'),\ntensor([ 0.6545,  0.6289, -0.5016], device='cuda:0')\n\ntensor([[ 0.1958,  0.0000, -0.3055,  0.6545],\n        [ 0.5811,  0.0000, -0.4026,  0.6289],\n        [ 0.9658,  0.0000, -1.4409, -0.5016]], device='cuda:0')\n</code></pre> \u5728\u4e0d\u540c\u7ef4\u5ea6\u5bf9\u5f20\u91cf\u8fdb\u884c\u62fc\u63a5 Python<pre><code>t1 = torch.cat([tensor, tensor, tensor], dim=1)\nt2 = torch.cat([tensor, tensor, tensor], dim=0)\nt1, t2\n</code></pre> \u6548\u679c Text Only<pre><code>(tensor([[ 0.1958,  0.0000, -0.3055,  0.6545,  0.1958,  0.0000, -0.3055,  0.6545,\n           0.1958,  0.0000, -0.3055,  0.6545],\n         [ 0.5811,  0.0000, -0.4026,  0.6289,  0.5811,  0.0000, -0.4026,  0.6289,\n           0.5811,  0.0000, -0.4026,  0.6289],\n         [ 0.9658,  0.0000, -1.4409, -0.5016,  0.9658,  0.0000, -1.4409, -0.5016,\n           0.9658,  0.0000, -1.4409, -0.5016]], device='cuda:0'),\n tensor([[ 0.1958,  0.0000, -0.3055,  0.6545],\n         [ 0.5811,  0.0000, -0.4026,  0.6289],\n         [ 0.9658,  0.0000, -1.4409, -0.5016],\n         [ 0.1958,  0.0000, -0.3055,  0.6545],\n         [ 0.5811,  0.0000, -0.4026,  0.6289],\n         [ 0.9658,  0.0000, -1.4409, -0.5016],\n         [ 0.1958,  0.0000, -0.3055,  0.6545],\n         [ 0.5811,  0.0000, -0.4026,  0.6289],\n         [ 0.9658,  0.0000, -1.4409, -0.5016]], device='cuda:0'))\n</code></pre></p> <p>tips: dim=0\u4ee3\u8868\u6700\u9ad8\u7ef4\u5ea6\uff0cdim\u589e\u52a0\uff0c\u7ef4\u6570\u4f9d\u6b21\u964d\u4f4e</p> <p>\u7ebf\u6027\u8fd0\u7b97 Python<pre><code>x = torch.randn(4, 4)\n# \u77e9\u9635\u4e58\u6cd5, y1, y2, y3\u7ed3\u679c\u76f8\u540c\uff0c\u5747\u5b8c\u6210\u4e86x\u4e0e\u5176\u8f6c\u7f6e\u77e9\u9635\u76f8\u4e58\u7684\u64cd\u4f5c\ny1 = x @ x.T\n\ny2 = x.matmul(x.T)\n\ny3 = torch.rand_like(x)\ntorch.matmul(x, x.T, out=y3)\n</code></pre> \u6548\u679c Text Only<pre><code>tensor([[ 0.4628,  0.6459, -0.8538,  0.2622],\n        [ 0.6459,  3.0141, -0.0512,  2.8879],\n        [-0.8538, -0.0512, 11.1508,  1.5462],\n        [ 0.2622,  2.8879,  1.5462,  4.0399]])\n</code></pre> \u5c06\u4f4d\u4e8e\u4e0d\u540c\u8bbe\u5907\u7684\u5f20\u91cf\u8fdb\u884c\u8fd0\u7b97\u65f6\uff0c\u4f1a\u53d1\u751f\u9519\u8bef Python<pre><code>y = tensor.matmul(x.T)\n</code></pre> \u6548\u679c Text Only<pre><code>---------------------------------------------------------------------------\nRuntimeError                              Traceback (most recent call last)\nCell In[28], line 1\n----&gt; 1 y = tensor.matmul(x.T)\n\nRuntimeError: Expected all tensors to be on the same device, but found at least two devices, \ncuda:0 and cpu! (when checking argument for argument mat2 in method wrapper_CUDA_mm)\nSelection deleted\n</code></pre> \u5bf9\u5f20\u91cf\u6c42\u548c\uff0c\u4f1a\u4ea7\u751f\u4e00\u4e2a1x1\u5f20\u91cf\uff0c\u53ef\u4ee5\u5229\u7528<code>tensor.item()</code>\u5c061x1\u5f20\u91cf\u8f6c\u5316\u4e3a\u6807\u91cf Python<pre><code>agg = tensor.sum()\nagg_item = agg.item()\nagg_item, type(agg_item)\n</code></pre> \u6548\u679c Text Only<pre><code>(0.3755984306335449, float)\n</code></pre> \u5f20\u91cf\u4e0enp\u6570\u7ec4\u5171\u4eab\u5e95\u5c42\u5185\u5b58\u4f4d\u7f6e\uff0c\u6539\u53d8\u4e00\u4e2a\u5c06\u5f71\u54cd\u53e6\u4e00\u4e2a Python<pre><code>t = torch.ones(5)\nn = t.numpy()\nprint(t, n)\n\nt.add_(1)\nprint(t, n)\n\nnp.add(n, 1, out=n)\nprint(t, n)\n</code></pre> \u6548\u679c Text Only<pre><code>tensor([1., 1., 1., 1., 1.]), array([1., 1., 1., 1., 1.], dtype=float32)\ntensor([2., 2., 2., 2., 2.]), array([2., 2., 2., 2., 2.], dtype=float32)\ntensor([3., 3., 3., 3., 3.]), array([3., 3., 3., 3., 3.], dtype=float32)\n</code></pre></p>","tags":["\u5f20\u91cf"]},{"location":"blog/2024/05/07/tensor-overview/#_5","title":"\u66f4\u591a","text":"<p>\u4ecePyTorch\u5b98\u65b9\u6587\u6863\u4e86\u89e3\u66f4\u591atensor\u64cd\u4f5c</p>","tags":["\u5f20\u91cf"]},{"location":"blog/2024/05/27/download-pdf-online/","title":"\u5982\u4f55\u4e0b\u8f7d\u7f51\u9875\u5185\u5d4c\u7684PDF","text":"<p>\u6211\u5728\u6d4f\u89c8\u8001\u5e08\u4e0a\u4f20\u5230\u5b66\u4e60\u901a\u7684pdf\u65f6\uff0c\u53d1\u73b0\u6709\u4e9bpdf\u53ea\u652f\u6301\u5728\u7ebf\u6d4f\u89c8\uff0c\u8fd9\u4e3a\u8bfe\u7a0b\u5b66\u4e60\u5e26\u6765\u4e86\u5f88\u591a\u4e0d\u4fbf\u5229\uff0c\u56e0\u6b64\uff0c\u5728\u8fd9\u7bc7\u535a\u5ba2\u4e2d\uff0c\u6211\u5c06\u5206\u4eab\u6211\u4e0b\u8f7d\u7f51\u9875\u5185\u5d4cpdf\u7684\u89e3\u51b3\u65b9\u6848\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-1","title":"Step 1","text":"<p>\u6765\u5230\u7f51\u9875\u7248\u5b66\u4e60\u901a\u7684\u8bfe\u7a0b\u9875\u9762\uff0c\u6253\u5f00\u5d4c\u5165pdf\u7684\u7f51\u9875\uff08\u6211\u9700\u8981\u4e0b\u8f7d\u7684\u5728\u8bfe\u7a0b\u7684\u7ae0\u8282\u680f\uff09\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-2","title":"Step 2","text":"<p>\u6309F12\u6253\u5f00\u63a7\u5236\u53f0\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-3","title":"Step 3","text":"<p>\u70b9\u51fb\u63a7\u5236\u53f0\u4e0a\u65b9\u83dc\u5355\u680f\u7684<code>\u7f51\u7edc</code>\u9009\u9879\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-4","title":"Step 4","text":"<p>\u5728\u7b5b\u9009\u5668\u680f\uff0c\u4ec5\u52fe\u9009<code>Fetch/XHR</code>\u9009\u9879\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-5","title":"Step 5","text":"<p>F5\u5237\u65b0\u9875\u9762\uff0c\u5728\u4e0b\u65b9\u5217\u51fa\u7684\u540d\u79f0\u6e05\u5355\u4e2d\uff0c\u5bfb\u627e\u5305\u542b<code>flag=normal</code>\u7684\u9009\u9879\uff0c\u70b9\u51fb\u8be5\u540d\u79f0\u6765\u67e5\u770b\u8be6\u7ec6\u4fe1\u606f\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-6","title":"Step 6","text":"<p>\u5728\u83dc\u5355\u680f\u70b9\u51fb\u9884\u89c8\uff0c\u6b64\u65f6\u5e94\u8be5\u53ef\u4ee5\u770b\u5230pdf\u9009\u9879\uff0c\u5e76\u770b\u5230\u5e26\u53cc\u5f15\u53f7\u7684pdf\u5730\u5740\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/27/download-pdf-online/#step-7","title":"Step 7","text":"<p>\u6253\u5f00\u8be5\u5730\u5740\u6307\u5411\u7684\u9875\u9762\uff0c\u4fbf\u53ef\u4ee5\u4e0b\u8f7d\u60f3\u8981\u7684pdf\u8d44\u6e90\u5566^^\u3002</p>","tags":["tricks"]},{"location":"blog/2024/05/08/cls%26obj/","title":"Python\u7c7b\u4e0e\u5bf9\u8c61\u6d45\u6790","text":"<p>\u6211\u5728\u5b66\u4e60\u674e\u6c90\u52a8\u624b\u5b66\u4e60\u6df1\u5ea6\u5b66\u4e60\u7684\u8fc7\u7a0b\u4e2d\uff0c\u5728\u5b66\u4e60\u5c42\u4e0e\u5757\u7684\u6982\u5ff5\u65f6\uff0c\u5bf9\u4e8e\u5b9e\u73b0\u81ea\u5b9a\u4e49\u5757\u7684\u4ee3\u7801\u4e2d\u7684super\u51fd\u6570\u7684\u5177\u4f53\u529f\u80fd\u4ea7\u751f\u7591\u95ee\uff0c\u67e5\u627e\u8d44\u6599\u540e\u505a\u6b64\u8bb0\u5f55\u3002</p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#python_1","title":"Python\u9762\u5411\u5bf9\u8c61","text":"","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#_1","title":"\u4f55\u4e3a\u9762\u5411\u5bf9\u8c61","text":"<p>\u5728\u5b66\u4e60C\u8bed\u8a00\u7684\u65f6\u5019\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u5c06\u89e3\u51b3\u95ee\u9898\u7684\u8fc7\u7a0b\u663e\u5f0f\u5730\u4f53\u73b0\u5728\u4e00\u7cfb\u5217\u51fd\u6570\u4e0e\u6570\u636e\u4e2d\uff0c\u901a\u8fc7\u6309\u7167\u7279\u5b9a\u987a\u5e8f\u6267\u884c\u51fd\u6570\u8fbe\u5230\u89e3\u51b3\u95ee\u9898\u7684\u6548\u679c\u3002</p> <p>\u5728\u9762\u5411\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u7684\u51fd\u6570\u548c\u6570\u636e\u5f80\u5f80\u79bb\u6563\u7684\u5206\u5e03\u5728\u4ee3\u7801\u7684\u5404\u5904\uff0c\u8fd9\u5927\u5927\u964d\u4f4e\u4e86\u4ee3\u7801\u7684\u53ef\u8bfb\u6027\u548c\u6269\u5c55\u6027\u3002\u5bf9\u4ee3\u7801\u91cd\u7528\u6027\uff0c\u7075\u6d3b\u6027\u548c\u6269\u5c55\u6027\u7684\u9700\u6c42\u50ac\u751f\u4e86\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u67b6\u6784\u7684\u8bde\u751f\uff0c\u9762\u5411\u5bf9\u8c61\u628a\u4e8b\u7269\u62bd\u8c61\u6210\u5bf9\u8c61\u7684\u6982\u5ff5\uff0c\u5c31\u662f\u8bf4\u8fd9\u4e2a\u95ee\u9898\u91cc\u9762\u6709\u54ea\u4e9b\u5bf9\u8c61\uff0c\u7136\u540e\u7ed9\u5bf9\u8c61\u8d4b\u4e00\u4e9b\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u7136\u540e\u8ba9\u6bcf\u4e2a\u5bf9\u8c61\u53bb\u6267\u884c\u81ea\u5df1\u7684\u65b9\u6cd5\uff0c\u95ee\u9898\u5f97\u5230\u89e3\u51b3\u3002</p> <p>\u7c7b\u4e0e\u5bf9\u8c61\u662f\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u6838\u5fc3\u6982\u5ff5\u3002</p> <ul> <li>\u7c7b(Class)\uff1a\u00a0\u7528\u6765\u63cf\u8ff0\u5177\u6709\u76f8\u540c\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u7684\u5bf9\u8c61\u7684\u96c6\u5408\u3002\u5b83\u5b9a\u4e49\u4e86\u8be5\u96c6\u5408\u4e2d\u6bcf\u4e2a\u5bf9\u8c61\u6240\u5171\u6709\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002</li> </ul> <p>\u7c7b\u662f\u5bf9\u8c61\u7684\u62bd\u8c61\uff0c\u5bf9\u8c61\u662f\u7c7b\u7684\u5177\u4f53\u3002Python\u5c06\u4e00\u7cfb\u5217\u5c5e\u6027\u548c\u65b9\u6cd5\u5c01\u88c5\u5728\u4e86\u540d\u4e3a\u7c7b\u7684\u5bb9\u5668\u4e2d\uff0c\u5e76\u901a\u8fc7\u5b9e\u4f8b\u5316\u5bf9\u8c61\u63d0\u4f9b\u8bbf\u95ee\u7c7b\u6210\u5458\u7684\u63a5\u53e3\u3002</p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#_2","title":"\u4e3a\u4ec0\u4e48\u8981\u9762\u5411\u5bf9\u8c61","text":"<p>\u9762\u5411\u5bf9\u8c61\u5177\u6709\u6613\u7ef4\u62a4\u3001\u6613\u590d\u7528\u3001\u6613\u6269\u5c55\u7684\u7279\u70b9\uff0c\u7531\u4e8e\u9762\u5411\u5bf9\u8c61\u6709\u5c01\u88c5\u3001\u7ee7\u627f\u3001\u591a\u6001\u6027\u7684\u7279\u6027\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u51fa\u4f4e\u8026\u5408\u7684\u7cfb\u7edf\uff0c\u4f7f\u7cfb\u7edf \u66f4\u52a0\u7075\u6d3b\u3001\u66f4\u52a0\u6613\u4e8e\u7ef4\u62a4\u3002\u76f8\u5bf9\u7684\uff0c\u9762\u5411\u5bf9\u8c61\u76f8\u6bd4\u9762\u5411\u8fc7\u7a0b\uff08\u4ee5C\u4e3a\u4ee3\u8868\uff09\u6709\u7740\u8f83\u4f4e\u7684\u6027\u80fd\u8868\u73b0\u3002</p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#_3","title":"\u5982\u4f55\u9762\u5411\u5bf9\u8c61","text":"<p>\u7c7b\u7ee7\u627f \u5728Python\u4e2d\uff0c\u6211\u4eec\u4f7f\u7528class\u8bed\u53e5\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b Python<pre><code>class Emplooyee:\n    'a class including all emploees'\n    empCount = 0 # \u7c7b\u53d8\u91cf\uff0c\u5728\u6240\u6709\u5b9e\u4f8b\u4e2d\u5171\u4eab\n\n    def _init_(self, name, salary):\n        self.name = name\n        self.salary = salary\n        Employee.empCount += 1\n\n    def displayCount(self):\n        print \"Total employee %d\" % Employee.empCount\n\n    def dispalyEmployee(self):\n        print \"Name: \", self.name, \", Salary\", self.salary\n</code></pre> - <code>empCount</code>\u4e3a\u7c7b\u53d8\u91cf\uff0c\u4f7f\u7528<code>Employee.empCount</code>\u8bbf\u95ee - <code>__init__()</code>\u65b9\u6cd5\u79f0\u4e3a\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5728\u521b\u5efa\u5b9e\u4f8b\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u6b64\u65b9\u6cd5 - <code>self</code>\u4ee3\u8868\u7c7b\u7684\u5b9e\u4f8b\uff0c\u5728\u5b9a\u4e49\u7c7b\u65b9\u6cd5\u65f6\u5fc5\u987b\u51fa\u73b0\u5728\u53c2\u6570\u8868\u5934</p> <p>\u4f60\u53ef\u4ee5\u4f7f\u7528\u7c7b\u7684\u540d\u79f0\u8fdb\u884c\u5b9e\u4f8b\u5316\uff0c\u5e76\u4f7f\u7528<code>.</code>\u6765\u8bbf\u95ee\u5bf9\u8c61\u7684\u5c5e\u6027 Python<pre><code># create an object for class Employee\nemp1 = Employee(\"Zara\", 2000)\nemp2 = Employee(\"Sam\", 3000)\n# vist a member\nemp1.displayEmployee()\nemp2.displayEmployee()\nprint \"Total employee %d\" % Employee.empCount\n# \u8f93\u51fa\u7ed3\u679c\u5982\u4e0b\uff1a\n# Name :  Zara ,Salary:  2000\n# Name :  Manni ,Salary:  5000\n# Total Employee 2\n# \u53ef\u4ee5\u770b\u51fa\uff0c\u7c7b\u53d8\u91cf\u4e0d\u4f1a\u968f\u7740\u65b0\u5bf9\u8c61\u7684\u5b9e\u4f8b\u5316\u800c\u91cd\u65b0\u751f\u6210\uff0c\u4ed6\u662f\u9759\u6001\u7684\n</code></pre> \u4f60\u4e5f\u53ef\u4ee5\u6dfb\u52a0\uff0c\u5220\u9664\uff0c\u4fee\u6539\u7c7b\u5c5e\u6027 Python<pre><code>emp1.age = 7  # \u6dfb\u52a0\u4e00\u4e2a 'age' \u5c5e\u6027\nemp1.age = 8  # \u4fee\u6539 'age' \u5c5e\u6027\ndel emp1.age  # \u5220\u9664 'age' \u5c5e\u6027\n</code></pre> \u901a\u8fc7\u8c03\u7528\u6790\u6784\u51fd\u6570<code>__del__()</code>\u5b9e\u73b0\u5bf9\u8c61\u7684\u9500\u6bc1 Python<pre><code>a = 40 # \u58f0\u660e\u4e86\u6570\u636e\u5bf9\u8c61a\ndel a # \u9500\u6bc1a\n</code></pre> \u4f60\u4e5f\u53ef\u4ee5\u5728\u7c7b\u4e2d\u81ea\u5b9a\u4e49\u6790\u6784\u51fd\u6570 Python<pre><code>class Point: \n    def __init__( self, x=0, y=0): \n        self.x = x \n        self.y = y \n\n    def __del__(self): \n        class_name = self.__class__.__name__ \n        print class_name, \"\u9500\u6bc1\" \n\npt1 = Point() \npt2 = pt1 \npt3 = pt1 \nprint id(pt1), id(pt2), id(pt3) # \u6253\u5370\u5bf9\u8c61\u7684id \ndel pt1 \ndel pt2 \ndel pt3\n# \u8f93\u51fa\u7ed3\u679c\uff1a\n#3083401324 3083401324 3083401324\n# Point \u9500\u6bc1\n# pt2\u4e0ept3\u662f\u5bf9pt1\u7684\u5f15\u7528\uff0c\u4ed6\u4eec\u5bf9\u5e94\u540c\u4e00\u7247\u5185\u5b58\u7a7a\u95f4\uff0c\u5728\u9500\u6bc1pt1\u65f6\uff0c# pt2\u4e0ept3\u540c\u6b65\u9500\u6bc1\n</code></pre> \u7c7b\u7ee7\u627f \u7c7b\u7684\u7ee7\u627f\u673a\u5236\u662f\u9762\u5411\u5bf9\u8c61\u4e2d\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u7684\u65b9\u6cd5\u4e4b\u4e00 Python<pre><code># \u7c7b\u7ee7\u627f\u57fa\u7840\u8bed\u6cd5\nclass \u6d3e\u751f\u7c7b\u540d(\u57fa\u7c7b\u540d)\n    ...\n</code></pre> \u5982\u679c\u5b50\u7c7b\u4e0d\u91cd\u5199\u7236\u7c7b\u7684\u6784\u9020\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u65f6\u4f1a\u81ea\u52a8\u8c03\u7528\u7236\u7c7b\u6784\u9020\u65b9\u6cd5 Python<pre><code>class Father(object):\n    def __init__(self, name):\n        self.name=name\n        print ( \"name: %s\" %( self.name) )\n    def getName(self):\n        return 'Father ' + self.name\n\nclass Son(Father):\n    def getName(self):\n        return 'Son '+self.name\n\nif __name__=='__main__':\n# \u5f53python\u6587\u4ef6\u4f5c\u4e3a\u4e3b\u7a0b\u5e8f\u8fd0\u884c\u65f6\u8868\u8fbe\u5f0f\u4e3a1\uff0c\u4f5c\u4e3a\u5916\u90e8\u5e93import\u65f6\u4e3a0\n    son=Son('runoob')\n    print ( son.getName() )\n# \u8f93\u51fa\n# name: runoob\n# Son runoob\n</code></pre> \u5982\u679c\u5b50\u7c7b\u91cd\u5199\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\uff0c\u5b9e\u4f8b\u5316\u65f6\u4ec5\u8c03\u7528\u5b50\u7c7b\u6784\u9020\u65b9\u6cd5 Python<pre><code>class Father(object):\n    def __init__(self, name):\n        self.name=name\n        print ( \"name: %s\" %( self.name) )\n    def getName(self):\n        return 'Father ' + self.name\n\nclass Son(Father):\n    def __init__(self, name):\n        print ( \"hi\" )\n        self.name =  name\n    def getName(self):\n        return 'Son '+self.name\n\nif __name__=='__main__':\n    son=Son('runoob')\n    print ( son.getName() )\n# \u8f93\u51fa\n# hi\n# Son runoob\n</code></pre> \u5982\u679c\u5b50\u7c7b\u91cd\u5199\u6784\u9020\u65b9\u6cd5\uff0c\u4ea6\u8981\u7ee7\u627f\u7236\u7c7b\u6784\u9020\u65b9\u6cd5\uff0c\u4f7f\u7528<code>super</code>\u5173\u952e\u5b57 Python<pre><code>class Father(object):\n    def __init__(self, name):\n        self.name=name\n        print ( \"name: %s\" %( self.name))\n    def getName(self):\n        return 'Father ' + self.name\n\nclass Son(Father):\n    def __init__(self, name):\n        super(Son, self).__init__(name)\n        # \u6ce8\uff1apython\u652f\u6301super()\u65b9\u6cd5\u7701\u7565\u53c2\u6570\u4f20\u9012\n        # \u4e0esuper()._init_(name)\u6709\u76f8\u540c\u529f\u80fd\n        print (\"hi\")\n        self.name =  name\n    def getName(self):\n        return 'Son '+self.name\n\nif __name__=='__main__':\n    son=Son('runoob')\n    print ( son.getName() )\n# \u8f93\u51fa\n# name: runoob\n# hi\n# Son runoob\n</code></pre></p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#superpytorch","title":"super\u51fd\u6570\u4e0e\u5b9e\u4f8b\u6784\u9020\u8fc7\u7a0b\u53ca\u5176\u5728PyTorch\u4e2d\u7684\u5e94\u7528","text":"","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#super","title":"super\u51fd\u6570\u7684\u57fa\u7840\u7528\u6cd5","text":"<p>\u5728Python\u4e2d\uff0c\u6211\u4eec\u901a\u5e38\u4f7f\u7528<code>super()</code>\u51fd\u6570\u6765\u5f15\u7528\u7236\u7c7b\u3002\u57fa\u7840\u7684\u7528\u6cd5\u662f\u5e26\u6709\u4e24\u4e2a\u53c2\u6570\uff1a\u7b2c\u4e00\u4e2a\u662f\u5b50\u7c7b\uff0c\u7b2c\u4e8c\u4e2a\u662f\u5bf9\u8c61\uff0c\u5373<code>super(subclass, instance)\u3002</code>\u5176\u7528\u9014\u662f\u8fd4\u56de\u4e00\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u8be5\u5bf9\u8c61\u7ed1\u5b9a\u5230\u7236\u7c7b\u7684\u65b9\u6cd5\u4e0a\uff0c\u800c\u4e0d\u662f\u5b50\u7c7b\u7684\u65b9\u6cd5\u3002</p> Python<pre><code>class Parent():\n    def hello(self):\n        print(\"Hello from Parent\")\n\nclass Child(Parent):\n    def hello(self):\n        super(Child, self).hello()\n        print(\"Hello from Child\")\n\nc = Child()\nc.hello()\n# \u8f93\u51fa\n# Hello from Parent\n# Hello from Child\n</code></pre> <p>\u672c\u8d28\u4e0a\uff0c<code>super(Child, self).hello()</code>\u5c31\u7b49\u4e8e<code>Parent.hello(self)</code>\u3002\u4f7f\u7528<code>super</code>\u7684\u597d\u5904\u662f\u4e0d\u5fc5\u663e\u5f0f\u5199\u51fa\u7236\u7c7b\u5177\u4f53\u662f\u54ea\u4e00\u4e2a\uff0c\u8fd9\u6837\u6709\u5229\u4e8e\u540e\u7eed\u7ef4\u62a4\u4e0e\u66f4\u65b0\uff08\u6bd4\u5982\u6539\u53d8\u4e86\u7236\u7c7b\uff0c\u4f46\u662f\u8fd9\u6bb5\u4ee3\u7801\u4e0d\u7528\u6539\uff09\u3002</p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#super_1","title":"super\u5728\u7c7b\u5b9a\u4e49\u4e2d\u7684\u7279\u6b8a\u7528\u6cd5","text":"<p>\u5728\u7c7b\u7684\u5b9a\u4e49\u4e2d\uff0c<code>super</code>\u51fd\u6570\u7684\u4f7f\u7528\u53ef\u4ee5\u66f4\u52a0\u7b80\u5316\u3002\u6211\u4eec\u53ef\u4ee5\u4e0d\u5fc5\u63d0\u4f9b\u4efb\u4f55\u53c2\u6570\uff0cPython\u89e3\u91ca\u5668\u4f1a\u81ea\u52a8\u586b\u5145\u53c2\u6570\u3002</p> Python<pre><code>class Parent():\n    def hello(self):\n        print(\"Hello from Parent\")\n\nclass Child(Parent):\n    def hello(self):\n        super().hello()\n        print(\"Hello from Child\")\n\nc = Child()\nc.hello()\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u7684\u8f93\u51fa\u4e0e\u524d\u4e00\u6bb5\u4ee3\u7801\u76f8\u540c\u3002Python\u89e3\u91ca\u5668\u5728\u6267\u884c<code>super().hello()</code>\u65f6\uff0c\u4f1a\u81ea\u52a8\u586b\u5145\u5f53\u524d\u7c7b\u548c\u5b9e\u4f8b\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5728\u7c7b\u5b9a\u4e49\u4e2d\uff0c<code>super()</code>\u7b49\u4ef7\u4e8e<code>super(Child, self)</code>\u3002\u5b9e\u9645\u4e0a\u89e3\u91ca\u5668\u4f7f\u7528\u7684\u662f<code>__class__</code>\u53d8\u91cf\uff0c\u6bcf\u4e2a\u51fd\u6570\u4e2d\u90fd\u80fd\u8bbf\u95ee\u8fd9\u4e2a\u53d8\u91cf\uff0c\u5b83\u6307\u5411\u8fd9\u4e2a\u51fd\u6570\u5bf9\u5e94\u7684\u7c7b\u3002</p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#init-new","title":"init &amp; new \u4e0e\u5b9e\u4f8b\u5316\u8fc7\u7a0b","text":"<p>Python\u7684<code>__init__</code>\u65b9\u6cd5\u5728\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u4e2d\u975e\u5e38\u91cd\u8981\u3002\u5b83\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u65b9\u6cd5\uff0c\u7528\u4e8e\u5728\u521b\u5efa\u5bf9\u8c61\u65f6\u521d\u59cb\u5316\u5bf9\u8c61\u7684\u72b6\u6001\u3002\u7136\u800c\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c<code>__init__</code>\u65b9\u6cd5\u5e76\u4e0d\u662f\u5b9e\u4f8b\u5316\u4e00\u4e2a\u5bf9\u8c61\u7684\u8fc7\u7a0b\uff0c\u5b83\u4ec5\u4ec5\u662f\u521d\u59cb\u5316\u5bf9\u8c61\u72b6\u6001\u7684\u4e00\u90e8\u5206\u3002</p> <p>\u5b9e\u9645\u4e0a\uff0c\u771f\u6b63\u7684\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u662f\u7531<code>__new__</code>\u65b9\u6cd5\u5b8c\u6210\u7684\u3002<code>__new__</code>\u65b9\u6cd5\u662f\u4e00\u4e2a\u9759\u6001\u65b9\u6cd5\uff0c\u7528\u4e8e\u521b\u5efa\u5e76\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u3002\u5728Python\u4e2d\uff0c\u8c03\u7528<code>Class()</code>\u5b9e\u9645\u4e0a\u5305\u542b\u4e24\u4e2a\u6b65\u9aa4\uff1a\u9996\u5148\u8c03\u7528<code>__new__</code>\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u65b0\u5bf9\u8c61\uff0c\u7136\u540e\u8c03\u7528<code>__init__</code>\u65b9\u6cd5\u6765\u521d\u59cb\u5316\u8be5\u5bf9\u8c61\u3002</p> Python<pre><code>class MyClass():\n    def __new__(cls):\n        print(\"Creating a new object\")\n        return super().__new__(cls)\n\n    def __init__(self):\n        print(\"Initializing the object\")\n\nm = MyClass()\n</code></pre> <p>\u8fd9\u6bb5\u4ee3\u7801\u4f1a\u8f93\u51fa\uff1a</p> Python<pre><code>Creating a new object\nInitializing the object\n</code></pre> <p>\u901a\u8fc7\u8fd9\u6bb5\u4ee3\u7801\uff0c\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5b9e\u4f8b\u5316\u8fc7\u7a0b\u5b9e\u9645\u4e0a\u5305\u62ec<code>__new__</code>\u548c<code>__init__</code>\u4e24\u4e2a\u6b65\u9aa4\u3002</p>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/2024/05/08/cls%26obj/#super__init__","title":"<code>super().__init__()</code>","text":"<p>\u5728\u4f7f\u7528PyTorch\u6784\u5efa\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u65f6\uff0c\u6211\u4eec\u901a\u5e38\u9700\u8981\u81ea\u5b9a\u4e49\u6a21\u578b\u7c7b\u5e76\u7ee7\u627fPyTorch\u7684\u57fa\u7840\u6a21\u5757\u7c7b<code>nn.Module</code>\u3002\u5728\u81ea\u5b9a\u4e49\u7684\u6a21\u578b\u7c7b\u4e2d\uff0c\u901a\u5e38\u9700\u8981\u5728<code>__init__</code>\u65b9\u6cd5\u4e2d\u8c03\u7528<code>super().__init__()</code>\uff0c\u8fd9\u662f\u4e3a\u4e86\u6b63\u786e\u5730\u521d\u59cb\u5316<code>nn.Module</code>\u7c7b\u7684\u5185\u90e8\u72b6\u6001\u3002\u53ea\u6709\u8c03\u7528\u4e86<code>super().__init__()</code>\u4e4b\u540e\uff0c\u624d\u80fd\u521b\u5efa\u5b50\u6a21\u5757\uff1a</p> Python<pre><code>import torch.nn as nn\n\nclass MyModel(nn.Module):\n    def __init__(self, input_size, output_size):\n        # \u4e0b\u9762\u4e24\u884c\u4ee3\u7801\uff0c\u4ea4\u6362\u987a\u5e8f\u5c31\u4f1a\u62a5\u9519\n        super().__init__()\n        self.linear = nn.Linear(input_size, output_size)\n\n    def forward(self, x):\n        return self.linear(x)\n\nmodel = MyModel(3, 5)\n</code></pre>","tags":["\u7c7b\u4e0e\u5bf9\u8c61"]},{"location":"blog/archive/2024/","title":"2024","text":""},{"location":"blog/category/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/","title":"\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"blog/category/%E5%B0%8F%E6%8A%80%E5%B7%A7/","title":"\u5c0f\u6280\u5de7","text":""},{"location":"blog/category/pandas%E6%95%99%E7%A8%8B/","title":"Pandas\u6559\u7a0b","text":""},{"location":"blog/category/python/","title":"Python","text":""},{"location":"blog/category/%E7%A2%8E%E7%A2%8E%E5%BF%B5/","title":"\u788e\u788e\u5ff5","text":""},{"location":"blog/category/%E7%AE%97%E6%B3%95%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1/","title":"\u7b97\u6cd5/\u7a0b\u5e8f\u8bbe\u8ba1","text":""},{"location":"blog/category/%E6%AF%8F%E6%97%A5%E6%80%BB%E7%BB%93/","title":"\u6bcf\u65e5\u603b\u7ed3","text":""},{"location":"blog/category/mkdocs%E4%BD%BF%E7%94%A8/","title":"Mkdocs\u4f7f\u7528","text":""},{"location":"blog/page/2/","title":"Blog","text":""},{"location":"blog/archive/2024/page/2/","title":"2024","text":""}]}